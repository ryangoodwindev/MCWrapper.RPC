<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MCWrapper.RPC</name>
    </assembly>
    <members>
        <member name="T:MCWrapper.RPC.Connection.RpcConnection">
            <summary>
            Blockchain client is used to transact with the configured MultiChain network
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Connection.RpcConnection._httpClient">
            <summary>
            Property for Http Web Client
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcConnection.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Create a new RpcConnection object
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcConnection.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{MCWrapper.RPC.Options.BlockchainRpcOptions})">
            <summary>
            Create a new RpcConnection object
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcConnection.TransactAsync(System.String,System.String,System.String,System.Object[])">
            <summary>
            Asynchronous blockchain transaction with parameters
            </summary>
            <param name="blockchainName"></param>
            <param name="method"></param>
            <param name="id"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcConnection.TransactAsync(MCWrapper.RPC.Connection.Request.RpcRequest)">
            <summary>
            Asynchronous blockchain transaction with Typed object
            </summary>
            <param name="serviceRequest"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcConnection.TransactAsync``1(System.String,System.String,System.String,System.Object[])">
            <summary>
            Asynchronous blockchain transaction with parameters
            </summary>
            <param name="blockchainName"></param>
            <param name="method"></param>
            <param name="id"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcConnection.TransactAsync``1(MCWrapper.RPC.Connection.Request.RpcRequest)">
            <summary>
            Asynchronous blockchain transaction with Typed object
            </summary>
            <param name="serviceRequest"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcMessageHandler.Create">
            <summary>
            Return new customized HttpClientHandler instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcMessageHandler.Create(MCWrapper.RPC.Options.BlockchainRpcOptions)">
            <summary>
            Return new customized HttpClientHandler instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcMessageHandler.Create(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Return new customized HttpClientHandler instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcMessageHandler.GetServiceUrl">
            <summary>
            Construct MultiChain blockchain Service URL
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcMessageHandler.GetServiceUrl(MCWrapper.RPC.Options.BlockchainRpcOptions)">
            <summary>
            Construct MultiChain blockchain Service URL
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcMessageHandler.GetAuthenticationHeaderValue">
            <summary>
            Construct Authentication Header Value
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcMessageHandler.GetAuthenticationHeaderValue(MCWrapper.RPC.Options.BlockchainRpcOptions)">
            <summary>
            Construct Authentication Header Value
            </summary>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Connection.CertificateCallback">
            <summary>
            SSL cert callback
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Connection.CertificateCallback.ValidateCallback(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Net.Security.SslPolicyErrors,System.String)">
            <summary>
            Validate certificate callback
            </summary>
            <param name="cert"></param>
            <param name="errors"></param>
            <param name="certPath"></param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Connection.Request.RpcRequest">
            <summary>
            Service request object enforces the required format to transact with a blockchain network
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Connection.Request.RpcRequest.GetNamedValues">
            <summary>
            Get name values
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Connection.Request.RpcRequest.#ctor">
            <summary>
            Create a new Service Request
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Connection.Request.RpcRequest.#ctor(System.String,System.String,System.Object[],System.String)">
            <summary>
            Create a new Service Request
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Connection.Request.RpcRequest.Method">
            <summary>
            Method property
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Connection.Request.RpcRequest.Params">
            <summary>
            Params property
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Connection.Request.RpcRequest.Id">
            <summary>
            Id property
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Connection.Request.RpcRequest.ChainName">
            <summary>
            ChainName property
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Connection.Request.RpcRequest.SetNamedValue(System.String,System.Object)">
            <summary>
            Set named value
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:MCWrapper.RPC.Connection.Request.RpcRequest.GetNamedValue``1(System.String)">
            <summary>
            Get name value
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Connection.RpcResponse`1">
            <summary>
            Service response object
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MCWrapper.RPC.Connection.RpcResponse`1.#ctor">
            <summary>
            Create a new Service Response
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Connection.RpcResponse`1.Id">
            <summary>
            Request id
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Connection.RpcResponse`1.Error">
            <summary>
            Error object
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Connection.RpcResponse`1.Result">
            <summary>
            Generic Result may be string, object, or int, or bool, or Array, etc...
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Connection.ServiceError">
            <summary>
            ServiceError object
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Connection.ServiceError.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Connection.ServiceError.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Constants.ClientUrlComponent">
            <summary>
            Helper object that stores some constant values we can use while configuring the base RpcClient
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.ClientUrlComponent.Http">
            <summary>
            Represents non-secured HTTP prefix
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.ClientUrlComponent.Https">
            <summary>
            Represent secured HTTPS prefix
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.ClientUrlComponent.Format">
            <summary>
            Enforces proper URI format
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.ClientUrlComponent.BasicHeaderValue">
            <summary>
            Authentication header type value
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.ClientUrlComponent.MultiChainClient">
            <summary>
            Default MultiChain client
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.ClientUrlComponent.JsonRPCMediaType">
            <summary>
            StringContent MediaFormatHeader value
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Constants.Entity">
            <summary>
            Entity types are used in Create methods on the blockchain network;
            e.g. Create and CreateFrom;
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Entity.Asset">
            <summary>
            Asset entity type
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Entity.Stream">
            <summary>
            Stream entity type
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Entity.StreamItem">
            <summary>
            StreamItem entity type
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Entity.Upgrade">
            <summary>
            Upgrade entity type
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Entity.TxFilter">
            <summary>
            Transaction filter entity type
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Entity.StreamFilter">
            <summary>
            Stream filter entity type
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Constants.NativeCurrency">
            <summary>
            A strongly typed method to say we are using or paying in the native currency
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.NativeCurrency.CoinVerb">
            <summary>
            Just an empty string as that is how MultiChain Core represents local currency
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Constants.NativeCurrency.Coins(System.Decimal)">
            <summary>
            Return a dictionary representing a native currency object
            </summary>
            <param name="n_coins"></param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Constants.NodeTask">
            <summary>
            Types of blockchain network tasks;
            <para>
                Generally used when Pausing and/or Resuming the blockchain using either the ControlRpcClient
            </para>
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.NodeTask.Incoming">
            <summary>
            Represents Control task type 'incoming' as a plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.NodeTask.Mining">
            <summary>
            Represents Control task type 'mining' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.NodeTask.All">
            <summary>
            Represents Control task types 'mining,incoming' as plain comma delimited string
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Constants.PeerConnection">
            <summary>
            Constant Peer connection command values
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.PeerConnection.Add">
            <summary>
            Used to indicate adding a node
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.PeerConnection.Remove">
            <summary>
            Used to indicate removing a previously added node
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.PeerConnection.OneTry">
            <summary>
            Try to connect new node once
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Constants.Permission">
            <summary>
            MultiChain Core blockchain Permissions types
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Permission.Connect">
            <summary>
            To connect to other nodes and see the blockchain’s contents
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Permission.Send">
            <summary>
            To send funds, e.g. sign inputs of transactions
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Permission.Receive">
            <summary>
            To receive funds, e.g. appear in the outputs of transactions
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Permission.Issue">
            <summary>
            To issue assets, e.g. sign inputs of transactions which create new native assets;
            Implied permissions: issue → send
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Permission.Create">
            <summary>
            To create streams, e.g. sign inputs of transactions which create new streams
            Implied permissions: create → send
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Permission.Mine">
            <summary>
            To create blocks, e.g. to sign the metadata of coinbase transactions;
            Implied permissions: mine → connect, receive (in coinbase transaction only)
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Permission.Activate">
            <summary>
            To change connect, send and receive permissions for other users, e.g. sign transactions which change those permissions;
            Implied permissions: activate → send, receive, connect
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Permission.Admin">
            <summary>
            To change all permissions for other users, including issue, mine, activate and admin;
            Implied permissions: admin → activate, send, receive, connect
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.Permission.MaxEndblock">
            <summary>
            A permission is granted permanently by setting the start block to 0 and the end block to 4294967295, the maximum 32-bit unsigned integer.
            A permission is revoked by setting both the start block and end block to 0.
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Constants.RuntimeParam">
            <summary>
            Runtime parameter names used to set values.
            <para>
                All parameter names listed in this struct are supported via the 'setruntimeparam' blockchain method.
            </para>
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.AcceptFilterTimeout">
            <summary>
            Represents the MultiChain Core runtime parameter 'acceptfiltertimeout' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.AutoSubscribe">
            <summary>
            Represents the MultiChain Core runtime parameter 'autosubscribe' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.BanTx">
            <summary>
            Represents the MultiChain Core runtime parameter 'bantx' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.HandshakeLocal">
            <summary>
            Represents the MultiChain Core runtime parameter 'handshakelocal' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.HideKnownOpDrops">
            <summary>
            Represents the MultiChain Core runtime parameter 'hideknownopdrops' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.LockAdminMineRounds">
            <summary>
            Represents the MultiChain Core runtime parameter 'lockadminminerounds' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.LockBlock">
            <summary>
            Represents the MultiChain Core runtime parameter 'lockblock' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.LockInlineMetadata">
            <summary>
            Represents the MultiChain Core runtime parameter 'lockinlinemetadata' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.MaxQueryScanItems">
            <summary>
            Represents the MultiChain Core runtime parameter 'maxqueryscanitems' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.MaxShownData">
            <summary>
            Represents the MultiChain Core runtime parameter 'maxshowndata' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.MineEmptyRounds">
            <summary>
            Represents the MultiChain Core runtime parameter 'mineemptyrounds' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.MiningRequiresPeers">
            <summary>
            Represents the MultiChain Core runtime parameter 'miningrequirespeers' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.MiningTurnover">
            <summary>
            Represents the MultiChain Core runtime parameter 'miningturnover' as plain string
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.RuntimeParam.SendFilterTimeout">
            <summary>
            Represents the MultiChain Core runtime parameter 'sendfiltertimeout' as plain string
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Constants.SmartFilterPermission">
            <summary>
            MultiChain 2.0 also supports six custom permissions that are useful for defining roles that are enforced by smart filters
            <para>
                high1, high2, high3 – custom permissions that can be set by users with admin privileges.
            </para>
            <para>
                low1, low2, low3 – custom permissions that can be set by users with admin or activate privileges.
            </para>
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SmartFilterPermission.HighOne">
            <summary>
            Low - High permissions
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SmartFilterPermission.HighTwo">
            <summary>
            Mid - High permissions
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SmartFilterPermission.HighThree">
            <summary>
            High - High permissions
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SmartFilterPermission.LowOne">
            <summary>
            Low - Low permissions
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SmartFilterPermission.LowTwo">
            <summary>
            Mid - Low permissions
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SmartFilterPermission.LowThree">
            <summary>
            High - Low permissions
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Constants.SubscribeParam">
            <summary>
            Only supported for MultiChain Enterprise. 
            <para>
                Available only in Enterprise Edition.
            </para>
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SubscribeParam.Items">
            <summary>
            Represents Subscribe parameter 'items' as a plain string;
            Available only in Enterprise Edition
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SubscribeParam.Keys">
            <summary>
            Represents Subscribe parameter 'keys' as a plain string;
            Available only in Enterprise Edition
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SubscribeParam.Retrieve">
            <summary>
            Represents Subscribe parameter 'retieve' as a plain string;
            Available only in Enterprise Edition
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SubscribeParam.Publishers">
            <summary>
            Represents Subscribe parameter 'publichsers' as a plain string;
            Available only in Enterprise Edition
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SubscribeParam.ItemsLocal">
            <summary>
            Represents Subscribe parameter 'items-local' as a plain string;
            Available only in Enterprise Edition
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SubscribeParam.KeysLocal">
            <summary>
            Represents Subscribe parameter 'keys-local' as a plain string;
            Available only in Enterprise Edition
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Constants.SubscribeParam.PublishersLocal">
            <summary>
            Represents Subscribe parameter 'publishers-local' as a plain string;
            Available only in Enterprise Edition
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.ErrorHandling.ClientException">
            <summary>
            ClientException extends Exception class
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.ErrorHandling.ClientException.#ctor(System.String)">
            <summary>
            Create a new ClientException
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="P:MCWrapper.RPC.ErrorHandling.ClientException.StatusCode">
            <summary>
            HTTP response status code
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.ErrorHandling.ClientException.Content">
            <summary>
            HTTP response body content
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.ErrorHandling.ProfileException">
            <summary>
            ProfileException extends Exception class
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.ErrorHandling.ProfileException.#ctor(System.String)">
            <summary>
            Create a new ProfileException
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="T:MCWrapper.RPC.ErrorHandling.ServiceException">
            <summary>
            ServiceException extends Exception class
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.ErrorHandling.ServiceException.#ctor(System.String)">
            <summary>
            Create a new ServiceException
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.MultiChainCoreRpcServices.AddMultiChainCoreRPCServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add MultiChain Remote Procedure Call (RPC) services to an application's service container.
            <para>
                Be aware a MultiChain blockchain network must be installed and configured externally from this application.
            </para>
            <para>
                The MultiChain library and installation instructions are availabale at https://multichain.com
            </para>
            <para>
                This method automatically loads the BlockchainProfileOptions and RuntimeParamOptions from the
                local environment variable store.
            </para>
            </summary>
            <param name="services">Service container</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.MultiChainCoreRpcServices.AddMultiChainCoreRPCServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add MultiChain Remote Procedure Call (RPC) services to an application's service container.
            
            <para>
                Be aware a MultiChain blockchain network must be installed and configured externally from this application.
            </para>
            
            <para>
                The MultiChain library and installation instructions are availabale at https://multichain.com
            </para>
            
            <para>
                This method automatically loads the BlockchainProfileOptions and RuntimeParamOptions from the
                IConfiguration interface (appsettings.json file usually).
            </para>
            </summary>
            <param name="services">Service container</param>
            <param name="configuration">Configuration pipeline</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.MultiChainCoreRpcServices.AddMultiChainCoreRPCServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{MCWrapper.RPC.Options.BlockchainRpcOptions},System.Action{MCWrapper.RPC.Options.RuntimeParamOptions})">
            <summary>
            Add MultiChain Remote Procedure Call (RPC) services to an application's service container.
            
            <para>
                Be aware a MultiChain blockchain network must be installed and configured externally from this application.
            </para>
            
            <para>
                The MultiChain library and installation instructions are availabale at https://multichain.com
            </para>
            
            <para>
                This method requires the BlockchainProfileOptions and RuntimeParamOptions property values to be
                explicitly passed via the <paramref name="runtimeConfig"/> and <paramref name="profileConfig"/> 
                Action parameters when added to the DI pipeline.
            </para>
            </summary>
            <param name="services">Service container</param>
            <param name="profileConfig">Blockchain profile configuration (Information the app will use to connect to a MultiChain ledger)</param>
            <param name="runtimeConfig">Runtime parameter configuration (How a MultiChain ledger should behave)</param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Extensions.ServiceRequestExtension">
            <summary>
            Offers extensions methods for ServiceRequest objects
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.ServiceRequestExtension.ToStringContent(MCWrapper.RPC.Connection.Request.RpcRequest)">
            <summary>
            Serialize ServiceRequest object to JSON formatted string
            </summary>
            <param name="request">RpcRequest type</param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Extensions.StringExtension">
            <summary>
            Helper extensions assist with menial tasks that are required to format data correctly to reside on the MultiChain blockchain network
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.StringExtension.ObjectToHex(System.Object)">
            <summary>
            Convert strongly Typed oject to Hexadecimal String
            </summary>
            <param name="obj">Pass in strongly Typed object to receive Hexadecimal string representation</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.StringExtension.HexToObject``1(System.String)">
            <summary>
            Convert Hexadecimal String to strongly Typed Object
            </summary>
            <typeparam name="T">Generic Type indicates return type</typeparam>
            <param name="value">Pass in Hexadecimal string to receive strongly Typed object representation</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.StringExtension.ByteArrayToHex(System.Byte[])">
            <summary>
            Convert Byte array to Hexadecimal String
            </summary>
            <param name="values">Pass in Byte array to reveive Hexadecimal encoded representation</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.StringExtension.HexToByteArray(System.String)">
            <summary>
            Convert Hexadecimal String to Byte array
            </summary>
            <param name="hex">Pass in Hexadecimal String to reveive Byte array representation</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.StringExtension.ToHex(System.String)">
            <summary>
            Convert standard String to Hexadecimal string
            </summary>
            <param name="str">Pass in String to reveive Hexadecimal representation</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.StringExtension.FromHex(System.String)">
            <summary>
            Convert Hexadecimal string to standard String
            </summary>
            <param name="hexString">Pass in Hexadecimal String to reveive String representation</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.StringExtension.ToBase64(System.String)">
            <summary>
            Convert Hexadecimal String to Base64 encoded String
            Useful for storing images in Hexadecimal and then converting to Base64 when retrieved for client viewing
            </summary>
            <param name="hex">Pass in Hexadecimal String to reveive Base64 encoded representation</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Extensions.StringExtension.GetEnvironmentVariable(System.String)">
            <summary>
            Fetch environment variables by name
            Multiple attempts made in order of Process => User => Machine
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Extensions.UUID">
            <summary>
            Generate a non-hyphenated GUID
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Extensions.UUID.NoHyphens">
            <summary>
            Generate a non-hyphenated GUID
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Actions.BlockchainAction">
            <summary>
            Defines all available blockchain service method names
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetAssetInfoMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getassetinfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetBestBlockHashMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getbestblockhash"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetBlockMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getblock"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetBlockChainInfoMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getblockchaininfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetBlockCountMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getblockcount"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetBlockHashMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getblockhash"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetChainTipsMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getchaintips"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetDifficultyMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getdifficulty"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetFilterCodeMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getfiltercode"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetLastBlockInfoMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getlastblockinfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetMemPoolInfoMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getmempoolinfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetRawMemPoolMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getrawmempool"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetStreamInfoMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "getstreaminfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetTxOutMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "gettxout"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.GetTxOutSetInfoMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "gettxoutsetinfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.ListAssetsMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "listassets"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.ListBlocksMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "listblocks"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.ListPermissionsMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "listpermissions"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.ListStreamFiltersMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "liststreamfilters"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.ListStreamsMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "liststreams"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.ListTxFiltersMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "listtxfilters"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.ListUpgradesMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "listupgrades"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.RunStreamFilterMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "runstreamfilter"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.RunTxFilterMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "runtxfilter"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.TestStreamFilterMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "teststreamfilter"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.TestTxFilterMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "testtxfilter"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.VerifyChainMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "verifychain"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.BlockchainAction.VerifyPermissionMethod">
            <summary>
            Defines MultiChain Core blockchain service method as plain string "verifypermission"
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Actions.ControlAction">
            <summary>
            Defines all available blockchain control service method names
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.ControlAction.ClearMemPoolMethod">
            <summary>
            Defines MultiChain Core control service method as plain string "clearmempool"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.ControlAction.GetBlockchainParamsMethod">
            <summary>
            Defines MultiChain Core control service method as plain string "getblockchainparams"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.ControlAction.GetInfoMethod">
            <summary>
            Defines MultiChain Core control service method as plain string "getinfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.ControlAction.GetRuntimeParamsMethod">
            <summary>
            Defines MultiChain Core control service method as plain string "getruntimeparams"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.ControlAction.HelpMethod">
            <summary>
            Defines MultiChain Core control service method as plain string "help"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.ControlAction.PauseMethod">
            <summary>
            Defines MultiChain Core control service method as plain string "pause"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.ControlAction.ResumeMethod">
            <summary>
            Defines MultiChain Core control service method as plain string "resume"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.ControlAction.SetLastBlockMethod">
            <summary>
            Defines MultiChain Core control service method as plain string "setlastblock"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.ControlAction.SetRuntimeParamMethod">
            <summary>
            Defines MultiChain Core control service method as plain string "setruntimeparam"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.ControlAction.StopMethod">
            <summary>
            Defines MultiChain Core control service method as plain string "stop"
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Actions.GenerateAction">
            <summary>
            Defines all available blockchain generate service method names
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.GenerateAction.GetGenerateMethod">
            <summary>
            Defines MultiChain Core generate service method as plain string "getgenerate"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.GenerateAction.GetHashesPerSecMethod">
            <summary>
            Defines MultiChain Core generate service method as plain string "gethashespersec"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.GenerateAction.SetGenerateMethod">
            <summary>
            Defines MultiChain Core generate service method as plain string "setgenerate"
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Actions.MiningAction">
            <summary>
            Defines all available blockchain mining service method names
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.MiningAction.GetBlockTemplateMethod">
            <summary>
            Defines MultiChain Core mine service method as plain string "getblocktemplate"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.MiningAction.GetMiningInfoMethod">
            <summary>
            Defines MultiChain Core mine service method as plain string "getmininginfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.MiningAction.GetNetworkHashPsMethod">
            <summary>
            Defines MultiChain Core mine service method as plain string "getnetworkhashps"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.MiningAction.PrioritiseTransactionMethod">
            <summary>
            Defines MultiChain Core mine service method as plain string "prioritisetransaction"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.MiningAction.SubmitBlockMethod">
            <summary>
            Defines MultiChain Core mine service method as plain string "submitblock"
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Actions.NetworkAction">
            <summary>
            Defines all available blockchain network service method names
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.NetworkAction.AddNodeMethod">
            <summary>
            Defines MultiChain Core network service method as plain string "addnode"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.NetworkAction.GetAddedNodeInfoMethod">
            <summary>
            Defines MultiChain Core network service method as plain string "getaddednodeinfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.NetworkAction.GetChunkQueueInfoMethod">
            <summary>
            Defines MultiChain Core network service method as plain string "getchunkqueueinfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.NetworkAction.GetChunkQueueTotalsMethod">
            <summary>
            Defines MultiChain Core network service method as plain string "getchunkqueuetotals"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.NetworkAction.GetConnectionCountMethod">
            <summary>
            Defines MultiChain Core network service method as plain string "getconnectioncount"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.NetworkAction.GetNetTotalsMethod">
            <summary>
            Defines MultiChain Core network service method as plain string "getnettotals"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.NetworkAction.GetNetworkInfoMethod">
            <summary>
            Defines MultiChain Core network service method as plain string "getnetworkinfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.NetworkAction.GetPeerInfoMethod">
            <summary>
            Defines MultiChain Core network service method as plain string "getpeerinfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.NetworkAction.PingMethod">
            <summary>
            Defines MultiChain Core network service method as plain string "ping"
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Actions.OffChainAction">
            <summary>
            Struct hosts OffChain service methods
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.OffChainAction.PurgePublishedItems">
            <summary>
            Defines MultiChain Core offhchain service method as plain string "purgepublisheditems"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.OffChainAction.PurgeStreamItems">
            <summary>
            Defines MultiChain Core offhchain service method as plain string "purgestreamitems"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.OffChainAction.RetrieveStreamItems">
            <summary>
            Defines MultiChain Core offhchain service method as plain string "retrievestreamitems"
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Actions.RawAction">
            <summary>
            Defines all available blockchain raw service method names
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.RawAction.AppendRawChangeMethod">
            <summary>
            Defines MultiChain Core raw service method as plain string "appendrawchange"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.RawAction.AppendRawDataMethod">
            <summary>
            Defines MultiChain Core raw service method as plain string "appendrawdata"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.RawAction.AppendRawTransactionMethod">
            <summary>
            Defines MultiChain Core raw service method as plain string "appendrawtransaction"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.RawAction.CreateRawTransactionMethod">
            <summary>
            Defines MultiChain Core raw service method as plain string "createrawtransaction"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.RawAction.DecodeRawTransactionMethod">
            <summary>
            Defines MultiChain Core raw service method as plain string "decoderawtransaction"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.RawAction.DecodeScriptMethod">
            <summary>
            Defines MultiChain Core raw service method as plain string "decodescript"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.RawAction.GetRawTransactionMethod">
            <summary>
            Defines MultiChain Core raw service method as plain string "getrawtransaction"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.RawAction.SendRawTransactionMethod">
            <summary>
            Defines MultiChain Core raw service method as plain string "sendrawtransaction"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.RawAction.SignRawTransactionMethod">
            <summary>
            Defines MultiChain Core raw service method as plain string "signrawtransaction"
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Actions.UtilityAction">
            <summary>
            Defines all available blockchain utility service method names
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.UtilityAction.AppendBinaryCacheMethod">
            <summary>
            Defines MultiChain Core utility service method as plain string "appendbinarycache"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.UtilityAction.CreateBinaryCacheMethod">
            <summary>
            Defines MultiChain Core utility service method as plain string "createbinarycache"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.UtilityAction.CreateKeyPairsMethod">
            <summary>
            Defines MultiChain Core utility service method as plain string "createkeypairs"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.UtilityAction.CreateMultiSigMethod">
            <summary>
            Defines MultiChain Core utility service method as plain string "createmultisig"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.UtilityAction.DeleteBinaryCacheMethod">
            <summary>
            Defines MultiChain Core utility service method as plain string "deletebinarycache"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.UtilityAction.EstimateFeeMethod">
            <summary>
            Defines MultiChain Core utility service method as plain string "estimatefee"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.UtilityAction.EstimatePriorityMethod">
            <summary>
            Defines MultiChain Core utility service method as plain string "estimatepriority"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.UtilityAction.ValidateAddressMethod">
            <summary>
            Defines MultiChain Core utility service method as plain string "validateaddress"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.UtilityAction.VerifyMessageMethod">
            <summary>
            Defines MultiChain Core utility service method as plain string "verifymessage"
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Actions.WalletAction">
            <summary>
            Defines all available blockchain wallet service method names
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.AddMultiSigAddressMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "addmultisigaddress"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.AppendRawExchangeMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "appendrawexchange"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ApproveFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "approvefrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.BackupWalletMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "backupwallet"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.CombineUnspentMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "combineunspent"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.CompleteRawExchangeMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "completerawexchange"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.CreateMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "create"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.CreateFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "createfrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.CreateRawExchangeMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "createrawexchange"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.CreateRawSendFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "createrawsendfrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.DecodeRawExchangeMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "decoderawexchange"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.DisableRawTransactionMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "disablerawtransaction"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.DumpPrivKeyMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "dumpprivkey"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.DumpWalletMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "dumpwallet"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.EncryptWalletMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "encryptwallet"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetAccountMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getaccount"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetAccountAddressMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getaccountaddress"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetAddressBalancesMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getaddressbalances"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetAddressesMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getaddresses"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetAddressesByAccountMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getaddressesbyaccount"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetAddressTransactionMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getaddresstransaction"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetAssetBalancesMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getassetbalances"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetAssetTransactionMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getassettransaction"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetBalanceMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getbalance"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetMultiBalancesMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getmultibalances"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetNewAddressMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getnewaddress"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetRawChangeAddressMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getrawchangeaddress"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetReceivedByAccountMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getreceivedbyaccount"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetReceivedByAddressMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getreceivedbyaddress"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetStreamItemMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getstreamitem"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetStreamKeySummaryMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getstreamkeysummary"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetStreamPublisherSummaryMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getstreampublishersummary"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetTotalBalancesMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "gettotalbalances"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetTransactionMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "gettransaction"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetTxOutDataMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "gettxoutdata"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetUnconfirmedBalanceMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getunconfirmedbalance"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetwalletinfoMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getwalletinfo"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GetWalletTransactionMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "getwallettransaction"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GrantMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "grant"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GrantFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "grantfrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GrantWithDataMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "grantwithdata"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.GrantWithDataFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "grantwithdatafrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ImportAddressMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "importaddress"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ImportPrivKeyMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "importprivkey"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ImportWalletMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "importwallet"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.IssueMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "issue"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.IssueFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "issuefrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.IssueMoreMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "issuemore"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.IssueMoreFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "issuemorefrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.KeyPoolRefillMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "keypoolrefill"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListAccountsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listaccounts"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListAddressesMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listaddresses"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListAddressGroupingsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listaddressgroupings"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListAddressTransactionsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listaddresstransactions"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListAssetTransactionsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listassettransactions"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListLockUnspentMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listlockunspent"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListReceivedByAccountMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listreceivedbyaccount"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListReceivedByAddressMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listreceivedbyaddress"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListSinceBlockMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listsinceblock"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListStreamBlockItemsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "liststreamblockitems"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListStreamItemsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "liststreamitems"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListStreamKeyItemsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "liststreamkeyitems"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListStreamKeysMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "liststreamkeys"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListStreamPublisherItemsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "liststreampublisheritems"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListStreamPublishersMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "liststreampublishers"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListStreamQueryItemsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "liststreamqueryitems"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListStreamTxItemsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "liststreamtxitems"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListTransactionsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listtransactions"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListUnspentMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listunspent"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ListWalletTransactionsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "listwallettransactions"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.LockUnspentMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "lockunspent"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.MoveMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "move"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.PrepareLockUnspentMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "preparelockunspent"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.PrepareLockUnspentFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "preparelockunspentfrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.PublishMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "publish"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.PublishMultiMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "publishmulti"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.PublishMultiFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "publishmultifrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.PublishFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "publishfrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.ResendWalletTransactionsMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "resendwallettransactions"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.RevokeMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "revoke"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.RevokeFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "revokefrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SendMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "send"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SendAssetMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "sendasset"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SendAssetFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "sendassetfrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SendFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "sendfrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SendFromAccountMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "sendfromaccount"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SendManyMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "sendmany"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SendWithDataMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "sendwithdata"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SendWithDataFromMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "sendwithdatafrom"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SetAccountMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "setaccount"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SetTxFeeMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "settxfee"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SignMessageMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "signmessage"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.SubscribeMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "subscribe"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.TrimSubscribeMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "trimsubscribe"
            Only available for MultiChain Enterprise users
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.TxOutToBinaryCacheMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "txouttobinarycache"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.UnsubscribeMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "unsubscribe"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.WalletLockMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "walletlock"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.WalletPassphraseMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "walletpassphrase"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Actions.WalletAction.WalletPassphraseChangeMethod">
            <summary>
            Defines MultiChain Core wallet service method as plain string "walletpassphrasechange"
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient">
            <summary>
            
            MutliChain methods implemented by the concrete BlockchainRPCClient class:
            
            getassetinfo, getbestblockhash, getblock, getblockchaininfo, 
            getblockcount, getblockhash, getchaintips, getdifficulty, 
            getfiltercode, getlastblockinfo, getmempoolinfo, getrawmempool,
            getstreaminfo, gettxout, gettxoutsetinfo, listassets, listblocks,
            listpermissions, liststreamfilters, liststreams, listtxfilters, 
            listupgrades, runstreamfilter, runtxfilter, teststreamfilter, 
            testtxfilter, verifychain, verifypermission
            
            <para>Inherits from an RPCClient and implements the IBlockchainRPC contract</para>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{MCWrapper.RPC.Options.BlockchainRpcOptions})">
            <summary>
            Create a new Blockchain RPC client
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetAssetInfoAsync(System.String,System.String,System.String,System.Boolean)">
             <summary>
             
             <para>Returns information about a single blockchain asset referenced by issue txid, asset reference, or asset name.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="asset_identifier">One of: issue txid, asset reference, asset name</param>
             <param name="verbose">If true, returns list of all issue transactions, including follow-ons</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetAssetInfoAsync(System.String,System.Boolean)">
            <summary>
            
            <para>Returns information about a single blockchain asset referenced by issue txid, asset reference, or asset name.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="asset_identifier">One of: issue txid, asset reference, asset name</param>
            <param name="verbose">If true, returns list of all issue transactions, including follow-ons</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetBestBlockHashAsync(System.String,System.String)">
             <summary>
             
             <para>Returns a hex encoded hash of the best (tip) block in the longest block chain.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetBestBlockHashAsync">
             <summary>
             
             <para>Returns a hex encoded hash of the best (tip) block in the longest block chain.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetBlockAsync``1(System.String,System.String,System.Object,System.Object)">
            <summary>
            
            <para>Returns hex-encoded data or json object for block.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="hash_or_height">(string or numeric) The block hash or height in the active chain</param>
            <param name="verbose">(numeric or boolean, optional, default=1) 0(or false) - encoded data, 1(or true) - json object, 2 - with tx encoded data, 4 - with tx json object</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetBlockAsync``1(System.Object,System.Object)">
            <summary>
            
            <para>Returns hex-encoded data or json object for block.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="hash_or_height">(string or numeric) The block hash or height in the active chain</param>
            <param name="verbose">(numeric or boolean, optional, default=1) 0(or false) - encoded data, 1(or true) - json object, 2 - with tx encoded data, 4 - with tx json object</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetBlockchainInfoAsync(System.String,System.String)">
            <summary>
            
            <para>Returns an object containing various state info regarding block chain processing.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetBlockchainInfoAsync">
            <summary>
            
            <para>Returns an object containing various state info regarding block chain processing.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetBlockCountAsync(System.String,System.String)">
             <summary>
             
             <para>Returns the number of blocks in the longest block chain.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetBlockCountAsync">
             <summary>
             
             <para>Returns the number of blocks in the longest block chain.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetBlockHashAsync(System.String,System.String,System.Int32)">
             <summary>
             
             <para>Returns hash of block in best-block-chain at index provided.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="index">The integer block index</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetBlockHashAsync(System.Int32)">
             <summary>
             
             <para>Returns hash of block in best-block-chain at index provided.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="index">The integer block index</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetChainTipsAsync(System.String,System.String)">
            <summary>
            
            <para>Return information about all known tips in the block tree, including the main chain as well as orphaned branches.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetChainTipsAsync">
            <summary>
            
            <para>Return information about all known tips in the block tree, including the main chain as well as orphaned branches.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetDifficultyAsync(System.String,System.String)">
            <summary>
            
            <para>Returns the proof-of-work difficulty as a multiple of the minimum difficulty.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetDifficultyAsync">
            <summary>
            
            <para>Returns the proof-of-work difficulty as a multiple of the minimum difficulty.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetFilterCodeAsync(System.String,System.String,System.String)">
             <summary>
             
             <para>Returns code for specified filter</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="filter_identifier">One of: create txid, filter reference, filter name</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetFilterCodeAsync(System.String)">
             <summary>
             
             <para>Returns code for specified filter</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="filter_identifier">One of: create txid, filter reference, filter name</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetLastBlockInfoAsync(System.String,System.String,System.Int32)">
             <summary>
             
             <para>Returns information about the last or recent blocks in the active chain.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="skip">The number of blocks back to skip. Default 0</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetLastBlockInfoAsync(System.Int32)">
             <summary>
             
             <para>Returns information about the last or recent blocks in the active chain.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="skip">The number of blocks back to skip. Default 0</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetMemPoolInfoAsync(System.String,System.String)">
             <summary>
             
             <para>Returns details on the active state of the TX memory pool.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetMemPoolInfoAsync">
             <summary>
             
             <para>Returns details on the active state of the TX memory pool.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetRawMemPoolAsync(System.String,System.String,System.Boolean)">
             <summary>
             
             <para>Returns all transaction ids in memory pool as a json array of string transaction ids.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="verbose">true for a json object, false for array of transaction ids</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetRawMemPoolAsync(System.Boolean)">
             <summary>
             
             <para>Returns all transaction ids in memory pool as a json array of string transaction ids.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="verbose">true for a json object, false for array of transaction ids</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetStreamInfoAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            <para>Returns information about a single stream.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="stream_identifier">One of: create txid, stream reference, stream name</param>
            <param name="verbose">If true, returns list of creators</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetStreamInfoAsync(System.String,System.Boolean)">
            <summary>
            
            <para>Returns information about a single stream.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="stream_identifier">One of: create txid, stream reference, stream name</param>
            <param name="verbose">If true, returns list of creators</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetTxOutAsync(System.String,System.String,System.String,System.Int32,System.Boolean)">
             <summary>
             
             <para>Returns details about an unspent transaction output.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="txid">The transaction id</param>
             <param name="n">vout value</param>
             <param name="include_mem_pool">Whether to included the mem pool</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetTxOutAsync(System.String,System.Int32,System.Boolean)">
             <summary>
             
             <para>Returns details about an unspent transaction output.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="txid">The transaction id</param>
             <param name="n">vout value</param>
             <param name="include_mem_pool">Whether to included the mem pool</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetTxOutSetInfoAsync(System.String,System.String)">
            <summary>
            
            <para>Returns statistics about the unspent transaction output set. Note this call may take some time.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.GetTxOutSetInfoAsync">
            <summary>
            
            <para>Returns statistics about the unspent transaction output set. Note this call may take some time.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListAssetsAsync(System.String,System.String,System.Object,System.Boolean,System.Int32,System.Int32)">
             <summary>
             
             <para>Returns list of defined assets.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="asset_identifiers">(string, optional) Asset identifier - one of the following: issue txid, asset reference, asset name, or (array, optional) A json array of asset identifiers</param>
             <param name="verbose">If true, returns list of all issue transactions, including follow-ons</param>
             <param name="count">The number of assets to display</param>
             <param name="start">Start from specific asset, 0 based, if negative - from the end</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListAssetsAsync(System.Object,System.Boolean,System.Int32,System.Int32)">
             <summary>
             
             <para>Returns list of defined assets.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="asset_identifiers">(string, optional) Asset identifier - one of the following: issue txid, asset reference, asset name, or (array, optional) A json array of asset identifiers</param>
             <param name="verbose">If true, returns list of all issue transactions, including follow-ons</param>
             <param name="count">The number of assets to display</param>
             <param name="start">Start from specific asset, 0 based, if negative - from the end</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListBlocksAsync(System.String,System.String,System.Object,System.Boolean)">
             <summary>
             
             <para>Returns list of block information objects</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="block_set_identifier">
                 <para>Comma delimited list of block identifiers: block height, block hash, block height range, e.g. block-from - block-to, number of last blocks in the active chain (if negative)</para>
                 <para>or</para>
                 <para>String that represents a "block-set-identifier"</para>
                 <para>or</para>
                 <para>A json array of block identifiers block-set-identifier</para>
                 <para>or</para>
                 <para>A json object with time range
                 {
                   "starttime" : start-time      (numeric,required) Start time.
                   "endtime" : end-time          (numeric,required) End time.
                 }</para>
             </param>
             <param name="verbose">If true, returns more information</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListBlocksAsync(System.Object,System.Boolean)">
             <summary>
             
             <para>Returns list of block information objects</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="block_set_identifier">
                 <para>Comma delimited list of block identifiers: block height, block hash, block height range, e.g. block-from - block-to, number of last blocks in the active chain (if negative)</para>
                 <para>or</para>
                 <para>String that represents a "block-set-identifier"</para>
                 <para>or</para>
                 <para>A json array of block identifiers block-set-identifier</para>
                 <para>or</para>
                 <para>A json object with time range
                 {
                   "starttime" : start-time      (numeric,required) Start time.
                   "endtime" : end-time          (numeric,required) End time.
                 }</para>
             </param>
             <param name="verbose">If true, returns more information</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListPermissionsAsync(System.String,System.String,System.String,System.Object,System.Boolean)">
             <summary>
             
             <para>Returns a list of all permissions which have been explicitly granted to addresses.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="permissions">Permission strings, comma delimited. Possible values: connect,send,receive,issue,mine,admin,activate,create. Default: all</param>
             <param name="addresses">
                 <para>(string, optional, default "*") The addresses to retrieve permissions for. "*" for all addresses</para>
                 <para>or</para>
                 <para>(array, optional) A json array of addresses to return permissions for</para>
             </param>
             <param name="verbose">If true, returns list of pending grants</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListPermissionsAsync(System.String,System.Object,System.Boolean)">
             <summary>
             
             <para>Returns a list of all permissions which have been explicitly granted to addresses.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="permissions">Permission strings, comma delimited. Possible values: connect,send,receive,issue,mine,admin,activate,create. Default: all</param>
             <param name="addresses">
                 <para>(string, optional, default "*") The addresses to retrieve permissions for. "*" for all addresses</para>
                 <para>or</para>
                 <para>(array, optional) A json array of addresses to return permissions for</para>
             </param>
             <param name="verbose">If true, returns list of pending grants</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListStreamFiltersAsync(System.String,System.String,System.Object,System.Boolean)">
             <summary>
             
             <para>Returns list of defined stream filters</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="filter_identifers">
                 <para> (string, optional, default=*) Filter identifier - one of: create txid, filter reference, filter name.</para>
                 <para>or</para>
                 <para>(array, optional) A json array of filter identifiers</para>
             </param>
             <param name="verbose">If true, returns list of creators and approval details</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListStreamFiltersAsync(System.Object,System.Boolean)">
             <summary>
             
             <para>Returns list of defined stream filters</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="filter_identifers">
                 <para> (string, optional, default=*) Filter identifier - one of: create txid, filter reference, filter name.</para>
                 <para>or</para>
                 <para>(array, optional) A json array of filter identifiers</para>
             </param>
             <param name="verbose">If true, returns list of creators and approval details</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListStreamsAsync(System.String,System.String,System.Object,System.Boolean,System.Int32,System.Int32)">
             <summary>
             
             <para>Returns list of defined streams</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="stream_identifiers">
                 <para>(string, optional, default=*, all streams) Stream identifier - one of the following: issue txid, stream reference, stream name</para>
                 <para>or</para>
                 <para>(array, optional) A json array of stream identifiers</para>
             </param>
             <param name="verbose">If true, returns stream list of creators</param>
             <param name="count">The number of streams to display</param>
             <param name="start">Start from specific stream, 0 based, if negative - from the end</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListStreamsAsync(System.Object,System.Boolean,System.Int32,System.Int32)">
             <summary>
             
             <para>Returns list of defined streams</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="stream_identifiers">
                 <para>(string, optional, default=*, all streams) Stream identifier - one of the following: issue txid, stream reference, stream name</para>
                 <para>or</para>
                 <para>(array, optional) A json array of stream identifiers</para>
             </param>
             <param name="verbose">If true, returns stream list of creators</param>
             <param name="count">The number of streams to display</param>
             <param name="start">Start from specific stream, 0 based, if negative - from the end</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListTxFiltersAsync(System.String,System.String,System.Object,System.Boolean)">
            <summary>
            
            <para>Returns list of defined tx filters</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="filter_identifiers">
                <para>(string, optional, default=*) Filter identifier - one of: create txid, filter reference, filter name</para>
                <para>or</para>
                <para>(array, optional) A json array of filter identifiers</para>
            </param>
            <param name="verbose">If true, returns list of creators and approval details</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListTxFiltersAsync(System.Object,System.Boolean)">
            <summary>
            
            <para>Returns list of defined tx filters</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="filter_identifiers">
                <para>(string, optional, default=*) Filter identifier - one of: create txid, filter reference, filter name</para>
                <para>or</para>
                <para>(array, optional) A json array of filter identifiers</para>
            </param>
            <param name="verbose">If true, returns list of creators and approval details</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListUpgradesAsync(System.String,System.String,System.Object)">
            <summary>
            
            <para>Returns list of defined upgrades</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="upgrade_identifiers">
                <para>(string, optional, default=*, all upgrades) Upgrade identifier - one of the following: upgrade txid, upgrade name.</para>
                <para>or</para>
                <para>(array, optional) A json array of upgrade identifiers</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.ListUpgradesAsync(System.Object)">
            <summary>
            
            <para>Returns list of defined upgrades</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="upgrade_identifiers">
                <para>(string, optional, default=*, all upgrades) Upgrade identifier - one of the following: upgrade txid, upgrade name.</para>
                <para>or</para>
                <para>(array, optional) A json array of upgrade identifiers</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.RunStreamFilterAsync(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            
            <para>Compile an existing filter and optionally test it on a transaction</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="filter_identifier">One of: create txid, filter reference, filter name</param>
            <param name="tx_hex">
                <para>The transaction hex string to filter, otherwise filter compiled only</para>
                <para>or</para>
                <para>The transaction id</para>
            </param>
            <param name="vout">The output number, if omitted and txid/tx-hex is specified, found automatically</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.RunStreamFilterAsync(System.String,System.String,System.Int32)">
            <summary>
            
            <para>Compile an existing filter and optionally test it on a transaction</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="filter_identifier">One of: create txid, filter reference, filter name</param>
            <param name="tx_hex">
                <para>The transaction hex string to filter, otherwise filter compiled only</para>
                <para>or</para>
                <para>The transaction id</para>
            </param>
            <param name="vout">The output number, if omitted and txid/tx-hex is specified, found automatically</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.RunTxFilterAsync(System.String,System.String,System.String,System.String)">
            <summary>
            
            <para>Compile an existing filter and optionally test it on a transaction</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="filter_identifier">One of: create txid, filter reference, filter name</param>
            <param name="tx_hex">
                <para>(string, optional) The transaction hex string to filter, otherwise filter compiled only</para>
                <para>or</para>
                <para>(string, optional) The transaction id</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.RunTxFilterAsync(System.String,System.String)">
            <summary>
            
            <para>Compile an existing filter and optionally test it on a transaction</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="filter_identifier">One of: create txid, filter reference, filter name</param>
            <param name="tx_hex">
                <para>(string, optional) The transaction hex string to filter, otherwise filter compiled only</para>
                <para>or</para>
                <para>(string, optional) The transaction id</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.TestStreamFilterAsync(System.String,System.String,System.Object,System.String,System.String,System.Int32)">
            <summary>
            
            <para>Compile a test filter and optionally test it on a transaction</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="restrictions">A json object with filter restrictions</param>
            <param name="javascript_code">JavaScript filter code, see help filter</param>
            <param name="tx_hex">
                <para>(string, optional) The transaction hex string to filter, otherwise filter compiled only</para>
                <para>or</para>
                <para>(string, optional) The transaction id</para>
            </param>
            <param name="vout">The output number, if omitted and txid/tx-hex is specified, found automatically</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.TestStreamFilterAsync(System.Object,System.String,System.String,System.Int32)">
            <summary>
            
            <para>Compile a test filter and optionally test it on a transaction</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="restrictions">A json object with filter restrictions</param>
            <param name="javascript_code">JavaScript filter code, see help filter</param>
            <param name="tx_hex">
                <para>(string, optional) The transaction hex string to filter, otherwise filter compiled only</para>
                <para>or</para>
                <para>(string, optional) The transaction id</para>
            </param>
            <param name="vout">The output number, if omitted and txid/tx-hex is specified, found automatically</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.TestTxFilterAsync(System.String,System.String,System.Object,System.String,System.String)">
             <summary>
            
             <para>Compile a test filter and optionally test it on a transaction</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
             
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="restrictions">
                 <para>(object, required)  a json object with filter restrictions</para>
                 <para>{</para>
                   <para>"for": "entity-identifier"    (string, optional) Asset/stream identifier - one of: create txid, stream reference, stream name.</para>
                    <para> or</para>
                   <para>"for": entity-identifier(s)   (array, optional) A json array of asset/stream identifiers</para>
                 <para>}</para>
             </param>
             <param name="javascript_code">JavaScript filter code, see help filters</param>
             <param name="tx_hex">
                 <para> (string, optional) The transaction hex string to filter, otherwise filter compiled only</para>
                 <para>or</para>
                 <para>(string, optional) The transaction id</para></param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.TestTxFilterAsync(System.Object,System.String,System.String)">
             <summary>
            
             <para>Compile a test filter and optionally test it on a transaction</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
             
             </summary>
             <param name="restrictions">
                 <para>(object, required)  a json object with filter restrictions</para>
                 <para>{</para>
                   <para>"for": "entity-identifier"    (string, optional) Asset/stream identifier - one of: create txid, stream reference, stream name.</para>
                    <para> or</para>
                   <para>"for": entity-identifier(s)   (array, optional) A json array of asset/stream identifiers</para>
                 <para>}</para>
             </param>
             <param name="javascript_code">JavaScript filter code, see help filters</param>
             <param name="tx_hex">
                 <para> (string, optional) The transaction hex string to filter, otherwise filter compiled only</para>
                 <para>or</para>
                 <para>(string, optional) The transaction id</para></param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.VerifyChainAsync(System.String,System.String,System.Int32,System.Int32)">
             <summary>
             
             <para>Verifies blockchain database.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="check_level">(numeric, optional, 0-4, default=3) How thorough the block verification is</param>
             <param name="num_blocks">(numeric, optional, default=288, 0=all) The number of blocks to check</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.VerifyChainAsync(System.Int32,System.Int32)">
             <summary>
             
             <para>Verifies blockchain database.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="check_level">(numeric, optional, 0-4, default=3) How thorough the block verification is</param>
             <param name="num_blocks">(numeric, optional, default=288, 0=all) The number of blocks to check</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.VerifyPermissionAsync(System.String,System.String,System.String,System.String)">
            <summary>
            
            <para>Verify permissions on this blockchain</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="address">The address to verify permission for</param>
            <param name="permission">Permission string. Possible values: connect,send,receive,issue,mine,admin,activate,create</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Blockchain.BlockchainRpcClient.VerifyPermissionAsync(System.String,System.String)">
            <summary>
            
            <para>Verify permissions on this blockchain</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="address">The address to verify permission for</param>
            <param name="permission">Permission string. Possible values: connect,send,receive,issue,mine,admin,activate,create</param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient">
            <summary>
            MutliChain methods implemented:
            
            clearmempool, getblockchainparams, getinfo, getruntimeparams,
            help, pause, resume, setlastblock, setruntimeparam, stop
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{MCWrapper.RPC.Options.BlockchainRpcOptions})">
            <summary>
            Create a new Control RPC client
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.ClearMemPoolAsync(System.String,System.String)">
             <summary>
             
             <para>Removes all transactions from the TX memory pool.</para>
             <para>Local mining and the processing of incoming transactions and blocks should be paused.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.ClearMemPoolAsync">
             <summary>
             
             <para>Removes all transactions from the TX memory pool.</para>
             <para>Local mining and the processing of incoming transactions and blocks should be paused.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.GetBlockchainParamsAsync(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            <para>Returns a list of values of this blockchain's parameters.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="display_names">Use display names instead of internal</param>
            <param name="with_upgrades">Take upgrades into account</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.GetBlockchainParamsAsync(System.Boolean,System.Boolean)">
            <summary>
            
            <para>Returns a list of values of this blockchain's parameters.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="display_names">Use display names instead of internal</param>
            <param name="with_upgrades">Take upgrades into account</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.GetInfoAsync(System.String,System.String)">
            <summary>
            
            <para>Returns general information about this node and blockchain.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.GetInfoAsync">
            <summary>
            
            <para>Returns general information about this node and blockchain.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.GetRuntimeParamsAsync(System.String,System.String)">
            <summary>
            
            <para>Returns a selection of this node's runtime parameters.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.GetRuntimeParamsAsync">
            <summary>
            
            <para>Returns a selection of this node's runtime parameters.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.HelpAsync(System.String,System.String,System.String)">
             <summary>
             
             <para>List all commands, or get help for a specified command.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="command">The command to get help with</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.HelpAsync(System.String)">
             <summary>
             
             <para>List all commands, or get help for a specified command.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="command">The command to get help with</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.PauseAsync(System.String,System.String,System.String)">
            <summary>
            
            <para>Pauses local mining or the processing of incoming transactions and blocks.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="tasks">Task(s) to be paused. Possible values: incoming,mining,offchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.PauseAsync(System.String)">
            <summary>
            
            <para>Pauses local mining or the processing of incoming transactions and blocks.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="tasks">Task(s) to be paused. Possible values: incoming,mining,offchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.ResumeAsync(System.String,System.String,System.String)">
             <summary>
             
             <para>Resumes local mining or the processing of incoming transactions and blocks</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="tasks">Task(s) to be resumed. Possible values: incoming,mining,offchain</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.ResumeAsync(System.String)">
             <summary>
             
             <para>Resumes local mining or the processing of incoming transactions and blocks</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="tasks">Task(s) to be resumed. Possible values: incoming,mining,offchain</param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.SetLastBlockAsync(System.String,System.String,System.Object)">
             <summary>
             
             <para>Sets last block in the chain.</para>
             <para>Local mining and the processing of incoming transactions and blocks should be paused.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="hash_or_height">
                 <para>(string, optional) The block hash, if omitted - best chain is activated</para>
                 <para>or</para>
                 <para>(numeric, optional) The block height in active chain or height before current tip (if negative)</para>
             </param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.SetLastBlockAsync(System.Object)">
             <summary>
             
             <para>Sets last block in the chain.</para>
             <para>Local mining and the processing of incoming transactions and blocks should be paused.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="hash_or_height">
                 <para>(string, optional) The block hash, if omitted - best chain is activated</para>
                 <para>or</para>
                 <para>(numeric, optional) The block height in active chain or height before current tip (if negative)</para>
             </param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.SetRuntimeParamAsync(System.String,System.String,System.String,System.Object)">
             <summary>
             
             <para>Sets value for runtime parameter</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="runtimeParam">Parameter name, one of the following: miningrequirespeers,mineemptyrounds,miningturnover,lockadminminerounds,maxshowndata,maxqueryscanitems,bantx,lockblock,autosubscribe,handshakelocal,hideknownopdrops</param>
             <param name="parameter_value">parameter value</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.SetRuntimeParamAsync(System.String,System.Object)">
             <summary>
             
             <para>Sets value for runtime parameter</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="runtimeParam">Parameter name, one of the following: miningrequirespeers,mineemptyrounds,miningturnover,lockadminminerounds,maxshowndata,maxqueryscanitems,bantx,lockblock,autosubscribe,handshakelocal,hideknownopdrops</param>
             <param name="parameter_value">parameter value</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.StopAsync(System.String,System.String)">
            <summary>
            
            <para>Shuts down the this blockchain node. Sends stop signal to MultiChain server.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Control.ControlRpcClient.StopAsync">
            <summary>
            
            <para>Shuts down the this blockchain node. Sends stop signal to MultiChain server.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Clients.Generate.GenerateRpcClient">
            <summary>
            MutliChain methods implemented:
            
            getgenerate, gethashespersec, setgenerate
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Generate.GenerateRpcClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{MCWrapper.RPC.Options.BlockchainRpcOptions})">
            <summary>
            Create a new Generate RPC client
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Generate.GenerateRpcClient.GetGenerateAsync(System.String,System.String)">
             <summary>
             <para>Return if the server is set to generate coins or not. The default is false.</para>
             <para>It is set with the command line argument -gen (or bitcoin.conf setting gen)</para>
             <para>It can also be set with the setgenerate call.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns>If the server is set to generate coins or not</returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Generate.GenerateRpcClient.GetGenerateAsync">
             <summary>
             <para>Return if the server is set to generate coins or not. The default is false.</para>
             <para>It is set with the command line argument -gen (or bitcoin.conf setting gen)</para>
             <para>It can also be set with the setgenerate call.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <returns>If the server is set to generate coins or not</returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Generate.GenerateRpcClient.GetHashesPerSecAsync(System.String,System.String)">
             <summary>
             <para>Returns a recent hashes per second performance measurement while generating.</para>
             <para>See the getgenerate and setgenerate calls to turn generation on and off.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns>(numeric) The recent hashes per second when generation is on (will return 0 if generation is off)</returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Generate.GenerateRpcClient.GetHashesPerSecAsync">
             <summary>
             <para>Returns a recent hashes per second performance measurement while generating.</para>
             <para>See the getgenerate and setgenerate calls to turn generation on and off.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <returns>(numeric) The recent hashes per second when generation is on (will return 0 if generation is off)</returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Generate.GenerateRpcClient.SetGenerateAsync(System.String,System.String,System.Boolean,System.Int32)">
             <summary>
             
             <para>Set 'generate' true or false to turn generation on or off.</para>
             <para>Generation is limited to 'genproclimit' processors, -1 is unlimited.</para>
             <para>See the getgenerate call for the current setting.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="generate">Set to true to turn on generation, off to turn off.</param>
             <param name="gen_proc_limit">Set the processor limit for when generation is on. Can be -1 for unlimited.</param>
             <returns>String value identifying this transaction</returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Generate.GenerateRpcClient.SetGenerateAsync(System.Boolean,System.Int32)">
             <summary>
             
             <para>Set 'generate' true or false to turn generation on or off.</para>
             <para>Generation is limited to 'genproclimit' processors, -1 is unlimited.</para>
             <para>See the getgenerate call for the current setting.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="generate">Set to true to turn on generation, off to turn off.</param>
             <param name="gen_proc_limit">Set the processor limit for when generation is on. Can be -1 for unlimited.</param>
             <returns>String value identifying this transaction</returns>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient">
            <summary>
            MutliChain methods implemented:
            
            getblocktemplate, getmininginfo, getnetworkhashps, 
            prioritisetransaction, submitblock
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{MCWrapper.RPC.Options.BlockchainRpcOptions})">
            <summary>
            Create a new Mining RPC client
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient.GetBlockTemplateAsync(System.String,System.String,System.String)">
             <summary>
             
             <para>Deprecated for the current version of Multichain; Do Not Use;</para>
             <para>If the request parameters include a 'mode' key, that is used to explicitly select between the default 'template' request or a 'proposal'.</para>
             <para>It returns data needed to construct a block to work on.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="json_request_object">
                 <para>(string, optional) A json object in the following spec</para>
                 <para>{ "mode":"template"            (string, optional) This must be set to "template" or omitted</para>
                 <para> "capabilities":[             (array, optional) A list of strings</para>
                 <para>"support"                (string) client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'serverlist', 'workid'</para>
                 <para> ,...]}</para>
             </param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient.GetBlockTemplateAsync(System.String)">
             <summary>
             <para>Deprecated for the current version of Multichain; Do Not Use;</para>
             <para>If the request parameters include a 'mode' key, that is used to explicitly select between the default 'template' request or a 'proposal'.</para>
             <para>It returns data needed to construct a block to work on.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="json_request_object">
                 <para>(string, optional) A json object in the following spec</para>
                 <para>{ "mode":"template"            (string, optional) This must be set to "template" or omitted</para>
                 <para> "capabilities":[             (array, optional) A list of strings</para>
                 <para>"support"                (string) client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'serverlist', 'workid'</para>
                 <para> ,...]}</para>
             </param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient.GetMiningInfoAsync(System.String,System.String)">
            <summary>
            
            <para>Returns a json object containing mining-related information.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient.GetMiningInfoAsync">
            <summary>
            
            <para>Returns a json object containing mining-related information.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient.GetNetworkHashPsAsync(System.String,System.String,System.Int32,System.Int32)">
             <summary>
             
             <para>Returns the estimated network hashes per second based on the last n blocks.</para>
             <para>Pass in [blocks] to override # of blocks, -1 specifies since last difficulty change.</para>
             <para>Pass in [height] to estimate the network speed at the time when a certain block was found.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="blocks">(numeric, optional, default=120) The number of blocks, or -1 for blocks since last difficulty change</param>
             <param name="height">(numeric, optional, default=-1) To estimate at the time of the given height</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient.GetNetworkHashPsAsync(System.Int32,System.Int32)">
             <summary>
             
             <para>Returns the estimated network hashes per second based on the last n blocks.</para>
             <para>Pass in [blocks] to override # of blocks, -1 specifies since last difficulty change.</para>
             <para>Pass in [height] to estimate the network speed at the time when a certain block was found.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="blocks">(numeric, optional, default=120) The number of blocks, or -1 for blocks since last difficulty change</param>
             <param name="height">(numeric, optional, default=-1) To estimate at the time of the given height</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient.PrioritiseTransactionAsync(System.String,System.String,System.String,System.Double,System.Double)">
             <summary>
             
             <para>Accepts the transaction into mined blocks at a higher (or lower) priority</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="txid">The transaction id</param>
             <param name="priority_delta">
                 The priority to add or subtract.
                 <para>The transaction selection algorithm considers the tx as it would have a higher priority.</para>
                 <para>(priority of a transaction is calculated: coinage * value_in_satoshis / txsize)</para>
             </param>
             <param name="fee_delta">
                 The fee value (in satoshis) to add (or subtract, if negative).
                 <para>The fee is not actually paid, only the algorithm for selecting transactions into a block considers the transaction as it would have paid a higher (or lower) fee</para>
             </param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient.PrioritiseTransactionAsync(System.String,System.Double,System.Double)">
             <summary>
             
             <para>Accepts the transaction into mined blocks at a higher (or lower) priority</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="txid">The transaction id</param>
             <param name="priority_delta">
                 The priority to add or subtract.
                 <para>The transaction selection algorithm considers the tx as it would have a higher priority.</para>
                 <para>(priority of a transaction is calculated: coinage * value_in_satoshis / txsize)</para>
             </param>
             <param name="fee_delta">
                 The fee value (in satoshis) to add (or subtract, if negative).
                 <para>he fee is not actually paid, only the algorithm for selecting transactions into a block considers the transaction as it would have paid a higher (or lower) fee</para>
             </param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient.SubmitBlockAsync(System.String,System.String,System.Object,System.String)">
            <summary>
            
            <para>Attempts to submit new block to network.</para>
            <para>The 'jsonparametersobject' parameter is currently ignored.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="hex_data">the hex-encoded block data to submit</param>
            <param name="json_parameters_object">
                <para>object of optional parameters</para>
                <para>{ "workid" : "id"               (string, optional) if the server provided a workid, it MUST be included with submissions }</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Mining.MiningRpcClient.SubmitBlockAsync(System.Object,System.String)">
            <summary>
            
            <para>Attempts to submit new block to network.</para>
            <para>The 'jsonparametersobject' parameter is currently ignored.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="hex_data">the hex-encoded block data to submit</param>
            <param name="json_parameters_object">
                <para>object of optional parameters</para>
                <para>{ "workid" : "id"               (string, optional) if the server provided a workid, it MUST be included with submissions }</para>
            </param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient">
            <summary>
            MutliChain methods implemented:
            
            addnode, getaddednodeinfo, getchunkqueueinfo, getchunkqueuetotals, 
            getconnectioncount, getnettotals, getnetworkinfo, getpeerinfo, ping
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{MCWrapper.RPC.Options.BlockchainRpcOptions})">
            <summary>
            Create a new Network RPC client
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.AddNodeAsync(System.String,System.String,System.String,System.String)">
            <summary>
            
            <para>Attempts add or remove a node from the addnode list.</para>
            <para>Or try a connection to a node once.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="node">The node (see getpeerinfo for nodes)</param>
            <param name="action">'add' to add a node to the list, 'remove' to remove a node from the list, 'onetry' to try a connection to the node once</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.AddNodeAsync(System.String,System.String)">
            <summary>
            
            <para>Attempts add or remove a node from the addnode list.</para>
            <para>Or try a connection to a node once.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="node">The node (see getpeerinfo for nodes)</param>
            <param name="action">'add' to add a node to the list, 'remove' to remove a node from the list, 'onetry' to try a connection to the node once</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetAddedNodeInfoAsync(System.String,System.String,System.Boolean,System.String)">
             <summary>
             
             <para>Returns information about the given added node, or all added nodes</para>
             <para>(note that onetry addnodes are not listed here)</para>
             <para>If dns is false, only a list of added nodes will be provided, otherwise connected information will also be available.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="dns">If false, only a list of added nodes will be provided, otherwise connected information will also be available</param>
             <param name="node">If provided, return information about this specific node,otherwise all nodes are returned</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetAddedNodeInfoAsync(System.Boolean,System.String)">
             <summary>
             
             <para>Returns information about the given added node, or all added nodes</para>
             <para>(note that onetry addnodes are not listed here)</para>
             <para>If dns is false, only a list of added nodes will be provided, otherwise connected information will also be available.</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
             </summary>
             <param name="dns">If false, only a list of added nodes will be provided, otherwise connected information will also be available</param>
             <param name="node">If provided, return information about this specific node,otherwise all nodes are returned</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetChunkQueueInfoAsync(System.String,System.String)">
             <summary>
            
             <para>Returns data about each current chunk queue status.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
             
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetChunkQueueInfoAsync">
             <summary>
            
             <para>Returns data about each current chunk queue status.</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
             
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetChunkQueueTotalsAsync(System.String,System.String)">
             <summary>
             
             <para>Returns chunks delivery statistics.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetChunkQueueTotalsAsync">
             <summary>
             
             <para>Returns chunks delivery statistics.</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetConnectionCountAsync(System.String,System.String)">
             <summary>
             
             <para>Returns the number of connections to other nodes.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetConnectionCountAsync">
             <summary>
             
             <para>Returns the number of connections to other nodes.</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetNetTotalsAsync(System.String,System.String)">
             <summary>
             
             <para>Returns information about network traffic, including bytes in, bytes out, and current time.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetNetTotalsAsync">
             <summary>
             
             <para>Returns information about network traffic, including bytes in, bytes out, and current time.</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetNetworkInfoAsync(System.String,System.String)">
             <summary>
             
             <para>Returns an object containing various state info regarding P2P networking.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetNetworkInfoAsync">
             <summary>
             
             <para>Returns an object containing various state info regarding P2P networking.</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetPeerInfoAsync(System.String,System.String)">
             <summary>
             
             <para>Returns data about each connected network node as a json array of objects.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.GetPeerInfoAsync">
             <summary>
             
             <para>Returns data about each connected network node as a json array of objects.</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.PingAsync(System.String,System.String)">
            <summary>
            
            <para>Requests that a ping be sent to all other nodes, to measure ping time.</para>
            <para>Results provided in getpeerinfo, pingtime and pingwait fields are decimal seconds.</para>
            <para>Ping command is handled in queue with all other commands, so it measures processing backlog, not just network ping.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Network.NetworkRpcClient.PingAsync">
            <summary>
            
            <para>Requests that a ping be sent to all other nodes, to measure ping time.</para>
            <para>Results provided in getpeerinfo, pingtime and pingwait fields are decimal seconds.</para>
            <para>Ping command is handled in queue with all other commands, so it measures processing backlog, not just network ping.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Clients.OffChain.OffChainRpcClient">
            <summary>
            MutliChain methods implemented:
            
            purgepublisheditems, purgestreamitems, retrievestreamitems
            
            OffChain services to support MultiChain Enterprise users
            I do not have access to an Enterprise version of MultiChain 
            so no unit testing can be performed against these methods
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.OffChain.OffChainRpcClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{MCWrapper.RPC.Options.BlockchainRpcOptions})">
            <summary>
            Create a OffChain RPC client
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.OffChain.OffChainRpcClient.PurgePublishedItemsAsync(System.String,System.String,System.Object)">
             <summary>
             
             <para>Available only in Enterprise Edition.</para>
             <para>Purges offchain items published by this node</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="items">
                 <para>1. "txids" (string, required) "all" or list of transactions, comma delimited</para>
                 <paa>or</paa>
                 <para>1. txids (array, required) Array of transactions IDs</para>
                 <para>or</para>
                 <para>1. txouts (array, required) Array of transaction outputs</para>
                 <para>or</para>
                 <para>1. blocks                           (object, required) List of transactions in block range</para>
             </param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.OffChain.OffChainRpcClient.PurgePublishedItemsAsync(System.Object)">
             <summary>
             
             <para>Available only in Enterprise Edition.</para>
             <para>Purges offchain items published by this node</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
             </summary>
             <param name="items">
                 <para>1. "txids" (string, required) "all" or list of transactions, comma delimited</para>
                 <paa>or</paa>
                 <para>1. txids (array, required) Array of transactions IDs</para>
                 <para>or</para>
                 <para>1. txouts (array, required) Array of transaction outputs</para>
                 <para>or</para>
                 <para>1. blocks                           (object, required) List of transactions in block range</para>
             </param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.OffChain.OffChainRpcClient.PurgeStreamItemsAsync(System.String,System.String,System.String,System.Object)">
            <summary>
            
            <para>Available only in Enterprise Edition.</para>
            <para>Purges offchain data for specific items in the stream.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="stream">One of: create txid, stream reference, stream name</param>
            <param name="items">
                <para>"txids" (string, required) "all" or list of transactions, comma delimited</para>
                <para>or</para>
                <para>txids (array, required) Array of transactions IDs</para>
                <para>or</para>
                <para>txouts (array, required) Array of transaction outputs</para>
                <para>or</para>
                <para>blocks (object, required) List of transactions in block range</para>
                <para>or</para>
                <para>query (object, required) Query (AND logic)</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.OffChain.OffChainRpcClient.PurgeStreamItemsAsync(System.String,System.Object)">
            <summary>
            
            <para>Available only in Enterprise Edition.</para>
            <para>Purges offchain data for specific items in the stream.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="stream">One of: create txid, stream reference, stream name</param>
            <param name="items">
                <para>"txids" (string, required) "all" or list of transactions, comma delimited</para>
                <para>or</para>
                <para>txids (array, required) Array of transactions IDs</para>
                <para>or</para>
                <para>txouts (array, required) Array of transaction outputs</para>
                <para>or</para>
                <para>blocks (object, required) List of transactions in block range</para>
                <para>or</para>
                <para>query (object, required) Query (AND logic)</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.OffChain.OffChainRpcClient.RetrieveStreamItemsAsync(System.String,System.String,System.String,System.Object)">
             <summary>
            
             <para>Available only in Enterprise Edition.</para>
             <para>Schedules retrieval of offchain data for specific items in the stream</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
             
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="stream">One of: create txid, stream reference, stream name</param>
             <param name="items">
                 <para>"txids" (string, required) "all" or list of transactions, comma delimited</para>
                 <para>or</para>
                 <para>txids (array, required) Array of transactions IDs</para>
                 <para>or</para>
                 <para>txouts (array, required) Array of transaction outputs</para>
                 <para>or</para>
                 <para>blocks (object, required) List of transactions in block range</para>
                 <para>or</para>
                 <para>query (object, required) Query (AND logic)</para>
             </param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.OffChain.OffChainRpcClient.RetrieveStreamItemsAsync(System.String,System.Object)">
             <summary>
            
             <para>Available only in Enterprise Edition.</para>
             <para>Schedules retrieval of offchain data for specific items in the stream</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
             
             </summary>
             <param name="stream">One of: create txid, stream reference, stream name</param>
             <param name="items">
                 <para>"txids" (string, required) "all" or list of transactions, comma delimited</para>
                 <para>or</para>
                 <para>txids (array, required) Array of transactions IDs</para>
                 <para>or</para>
                 <para>txouts (array, required) Array of transaction outputs</para>
                 <para>or</para>
                 <para>blocks (object, required) List of transactions in block range</para>
                 <para>or</para>
                 <para>query (object, required) Query (AND logic)</para>
             </param>
             <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient">
            <summary>
            MutliChain methods implemented:
            
            appendrawchange, appendrawdata, appendrawtransaction, 
            createrawtransaction, decoderawtransaction, decodescript, 
            getrawtransaction, sendrawtransaction, signrawtransaction
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{MCWrapper.RPC.Options.BlockchainRpcOptions})">
            <summary>
            Create a new Raw RPC client
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.AppendRawChangeAsync(System.String,System.String,System.String,System.String,System.Double)">
             <summary>
             
             <para>Appends change output to raw transaction, containing any remaining assets / native currency in the inputs that are not already sent to other outputs.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="tx_hex">The hex string of the raw transaction)</param>
             <param name="address">The address to send the change to</param>
             <param name="native_fee">Native currency value deducted from that amount so it becomes a transaction fee. Default - calculated automatically</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.AppendRawChangeAsync(System.String,System.String,System.Double)">
            <summary>
            
            <para>Appends change output to raw transaction, containing any remaining assets / native currency in the inputs that are not already sent to other outputs.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="tx_hex">The hex string of the raw transaction)</param>
            <param name="address">The address to send the change to</param>
            <param name="native_fee">Native currency value deducted from that amount so it becomes a transaction fee. Default - calculated automatically</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.AppendRawDataAsync(System.String,System.String,System.String,System.Object)">
            <summary>
            
            <para>Appends new OP_RETURN output to existing raw transaction</para>
            <para>Returns hex-encoded raw transaction.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="tx_hex">(string, required) The transaction hex string</param>
            <param name="data">(string or object, required) Data, see help data-all for details</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.AppendRawDataAsync(System.String,System.Object)">
            <summary>
            
            <para>Appends new OP_RETURN output to existing raw transaction</para>
            <para>Returns hex-encoded raw transaction.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="tx_hex">(string, required) The transaction hex string</param>
            <param name="data">(string or object, required) Data, see help data-all for details</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.AppendRawTransactionAsync(System.String,System.String,System.String,System.Object[],System.Object,System.Object[],System.String)">
            <summary>
            
            <para>Append inputs and outputs to raw transaction</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="tx_hex">Source transaction hex string</param>
            <param name="transactions">A json array of json objects</param>
            <param name="addresses">Object with addresses as keys, see help addresses-all for details</param>
            <param name="data">Array of hexadecimal strings or data objects, see help data-all for details</param>
            <param name="action">Additional actions: "lock", "sign", "lock,sign", "sign,lock", "send"</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.AppendRawTransactionAsync(System.String,System.Object[],System.Object,System.Object[],System.String)">
            <summary>
            
            <para>Append inputs and outputs to raw transaction</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="tx_hex">Source transaction hex string</param>
            <param name="transactions">A json array of json objects</param>
            <param name="addresses">Object with addresses as keys, see help addresses-all for details</param>
            <param name="data">Array of hexadecimal strings or data objects, see help data-all for details</param>
            <param name="action">Additional actions: "lock", "sign", "lock,sign", "sign,lock", "send"</param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.CreateRawTransactionAsync(System.String,System.String,System.Object[],System.Object,System.Object[],System.String)">
            <summary>
            
            <para>Create a transaction spending the given inputs.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="transactions">A json array of json objects</param>
            <param name="assets">Object with addresses as keys, see help addresses-all for details</param>
            <param name="data">Array of hexadecimal strings or data objects, see help data-all for details</param>
            <param name="action">Additional actions: "lock", "sign", "lock,sign", "sign,lock", "send"</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.CreateRawTransactionAsync(System.Object[],System.Object,System.Object[],System.String)">
            <summary>
            
            <para>Create a transaction spending the given inputs.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="transactions">A json array of json objects</param>
            <param name="assets">Object with addresses as keys, see help addresses-all for details</param>
            <param name="data">Array of hexadecimal strings or data objects, see help data-all for details</param>
            <param name="action">Additional actions: "lock", "sign", "lock,sign", "sign,lock", "send"</param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.DecodeRawTransactionAsync(System.String,System.String,System.String)">
            <summary>
            Return a JSON object representing the serialized, hex-encoded transaction.
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="tx_hex">The transaction hex string</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.DecodeRawTransactionAsync(System.String)">
            <summary>
            
            <para>Return a JSON object representing the serialized, hex-encoded transaction.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="tx_hex">The transaction hex string</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.DecodeScriptAsync(System.String,System.String,System.String)">
            <summary>
            
            <para>Decode a hex-encoded script.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="script_hex">The hex encoded script</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.DecodeScriptAsync(System.String)">
            <summary>
            
            <para>Decode a hex-encoded script.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="script_hex">The hex encoded script</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.GetRawTransactionAsync(System.String,System.String,System.String,System.Object)">
             <summary>
             
             <para>
                 NOTE: By default this function only works sometimes. This is when the tx is in the mempool or there is an unspent 
                 output in the utxo for this transaction. To make it always work, you need to maintain a transaction index, using the -txindex command line option.
             </para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="txid">(string, required) The transaction id</param>
             <param name="verbose">(numeric or boolean, optional, default=0(false)) If 0, return a string, other return a json object</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.GetRawTransactionAsync(System.String,System.Object)">
             <summary>
             
             <para>
                 NOTE: By default this function only works sometimes. This is when the tx is in the mempool or there is an unspent 
                 output in the utxo for this transaction. To make it always work, you need to maintain a transaction index, using the -txindex command line option.
             </para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
             </summary>
             <param name="txid">(string, required) The transaction id</param>
             <param name="verbose">(numeric or boolean, optional, default=0(false)) If 0, return a string, other return a json object</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.SendRawTransactionAsync(System.String,System.String,System.String,System.Boolean)">
             <summary>
             
             <para>Submits raw transaction (serialized, hex-encoded) to local node and network.</para>
             <para>Also see createrawtransaction and signrawtransaction calls.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="tx_hex">The hex string of the raw transaction)</param>
             <param name="allow_high_fees">Allow high fees</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.SendRawTransactionAsync(System.String,System.Boolean)">
             <summary>
             
             <para>Submits raw transaction (serialized, hex-encoded) to local node and network.</para>
             <para>Also see createrawtransaction and signrawtransaction calls.</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
             </summary>
             <param name="tx_hex">The hex string of the raw transaction)</param>
             <param name="allow_high_fees">Allow high fees</param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.SignRawTransactionAsync(System.String,System.String,System.String,System.Object[],System.Object[],System.String)">
            <summary>
            
            <para>Sign inputs for raw transaction (serialized, hex-encoded).</para>
            <para>
                The second optional argument (may be null) is an array of previous transaction outputs that
                this transaction depends on but may not yet be in the block chain.
            </para>
            
            <para>
                 The third optional argument (may be null) is an array of base58-encoded private
                keys that, if given, will be the only keys used to sign the transaction.
            </para>
            
            <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="tx_hex">The transaction hex string</param>
            <param name="prevtxs">An json array of previous dependent transaction outputs</param>
            <param name="privatekeys">A json array of base58-encoded private keys for signing</param>
            <param name="sighashtype">The signature hash type. Must be one of: "All", "NONE", "SINGLE", "ALL|ANYONECANPAY", "NONE|ANYONECANPAY", "SINGLE|ANYONECANPAY"</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Raw.RawRpcClient.SignRawTransactionAsync(System.String,System.Object[],System.Object[],System.String)">
            <summary>
            
            <para>Sign inputs for raw transaction (serialized, hex-encoded).</para>
            <para>
                The second optional argument (may be null) is an array of previous transaction outputs that
                this transaction depends on but may not yet be in the block chain.
            </para>
            
            <para>
                 The third optional argument (may be null) is an array of base58-encoded private
                keys that, if given, will be the only keys used to sign the transaction.
            </para>
            
            <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="tx_hex">The transaction hex string</param>
            <param name="prevtxs">An json array of previous dependent transaction outputs</param>
            <param name="privatekeys">A json array of base58-encoded private keys for signing</param>
            <param name="sighashtype">The signature hash type. Must be one of: "All", "NONE", "SINGLE", "ALL|ANYONECANPAY", "NONE|ANYONECANPAY", "SINGLE|ANYONECANPAY"</param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient">
            <summary>
            MutliChain methods implemented:
            
            appendbinarycache, createbinarycache, createkeypairs, 
            createmultisig, deletebinarycache, estimatefee, estimatepriority,
            validateaddress, verifymessage
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{MCWrapper.RPC.Options.BlockchainRpcOptions})">
            <summary>
            Create a new Utility RPC client
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.AppendBinaryCacheAsync(System.String,System.String,System.String,System.String)">
            <summary>
            
            <para>Appends data to binary cache.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="identifier">Binary cache item identifier</param>
            <param name="data_hex">The hex string to be added to binary cache item</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.AppendBinaryCacheAsync(System.String,System.String)">
            <summary>
            
            <para>Appends data to binary cache.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="identifier">Binary cache item identifier</param>
            <param name="data_hex">The hex string to be added to binary cache item</param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.CreateBinaryCacheAsync(System.String,System.String)">
            <summary>
            
            <para>Returns random string, which can be used as binary cache item identifier</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.CreateBinaryCacheAsync">
            <summary>
            
            <para>Returns random string, which can be used as binary cache item identifier</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.CreateKeyPairsAsync(System.String,System.String,System.Int32)">
            <summary>
            
            <para>Creates public/private key pairs. These key pairs are not stored in the wallet.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="count">Number of key pairs to generate</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.CreateKeyPairsAsync(System.Int32)">
            <summary>
            
            <para>Creates public/private key pairs. These key pairs are not stored in the wallet.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="count">Number of key pairs to generate</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.CreateMultiSigAsync(System.String,System.String,System.Int32,System.String[])">
             <summary>
             
             <para>Creates a multi-signature address with n signature of m keys required.</para>
             <para>It returns a json object with the address and redeemScript.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="n_required">The number of required signatures out of the n keys or addresses</param>
             <param name="keys">A json array of keys which are addresses or hex-encoded public keys</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.CreateMultiSigAsync(System.Int32,System.String[])">
             <summary>
             
             <para>Creates a multi-signature address with n signature of m keys required.</para>
             <para>It returns a json object with the address and redeemScript.</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
             </summary>
             <param name="n_required">The number of required signatures out of the n keys or addresses</param>
             <param name="keys">A json array of keys which are addresses or hex-encoded public keys</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.DeleteBinaryCacheAsync(System.String,System.String,System.String)">
             <summary>
             
             <para>Clear binary cache item</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="identifier">Binary cache item identifier, "*" - to clear all items</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.DeleteBinaryCacheAsync(System.String)">
             <summary>
             
             <para>Clear binary cache item</para>
             <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
             </summary>
             <param name="identifier">Binary cache item identifier, "*" - to clear all items</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.EstimateFeeAsync(System.String,System.String,System.Int32)">
            <summary>
            
            <para>Estimates the approximate fee per kilobyte needed for a transaction to begin confirmation within nblocks blocks.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="n_blocks">Number of blocks to estimate fee for</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.EstimateFeeAsync(System.Int32)">
            <summary>
            
            <para>Estimates the approximate fee per kilobyte needed for a transaction to begin confirmation within nblocks blocks.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="n_blocks">Number of blocks to estimate fee for</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.EstimatePriorityAsync(System.String,System.String,System.Int32)">
            <summary>
            
            <para>Estimates the approximate priority  a zero-fee transaction needs to begin confirmation within nblocks blocks.</para>
            <para>-1.0 is returned if not enough transactions and blocks have been observed to make an estimate.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="n_blocks">Number of blocks to estimate priority for</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.EstimatePriorityAsync(System.Int32)">
            <summary>
            
            <para>Estimates the approximate priority  a zero-fee transaction needs to begin confirmation within nblocks blocks.</para>
            <para>-1.0 is returned if not enough transactions and blocks have been observed to make an estimate.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="n_blocks">Number of blocks to estimate priority for</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.ValidateAddressAsync(System.String,System.String,System.String)">
             <summary>
             
             <para>Return information about the given address or public key or private key.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="address_or_pubkey_or_privkey">
                 <para>1. "address" (string, required) The address to validate</para>
                 <para>or</para>
                 <para>1. "pubkey" (string, required) The public key (hexadecimal) to validate</para>
                 <para>or</para>
                 <para>1. "privkey" (string, required) The private key (see dumpprivkey) to validate</para>
             </param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.ValidateAddressAsync(System.String)">
            <summary>
            
            <para>Return information about the given address or public key or private key.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="address_pubkey_privkey">
                <para>1. "address" (string, required) The address to validate</para>
                <para>or</para>
                <para>1. "pubkey" (string, required) The public key (hexadecimal) to validate</para>
                <para>or</para>
                <para>1. "privkey" (string, required) The private key (see dumpprivkey) to validate</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.VerifyMessageAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            <para>Verify a signed message</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="address">The address to use for the signature</param>
            <param name="signature">The signature provided by the signer in base 64 encoding (see signmessage)</param>
            <param name="message">The message that was signed</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Utility.UtilityRpcClient.VerifyMessageAsync(System.String,System.String,System.String)">
            <summary>
            
            <para>Verify a signed message</para>
            <para>Blockchain name is inferred from BlockchainRpcOptions properties.</para>
            
            </summary>
            <param name="address">The address to use for the signature</param>
            <param name="signature">The signature provided by the signer in base 64 encoding (see signmessage)</param>
            <param name="message">The message that was signed</param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient">
            <summary>
            
            MutliChain methods implemented by the concrete WalletRPCClient class:
            
            addmultisigaddress, appendrawexchange, approvefrom, backupwallet,
            combineunspent, completerawexchange, create, createfrom, 
            createrawexchange, createrawsendfrom, decoderawexchange, 
            disablerawtransaction, dumpprivkey, dumpwallet, encryptwallet,
            getaccount, getaccountaddress, getaddressbalances, getaddresses, 
            getaddressesbyaccount, getaddresstransaction, getassetbalances, 
            getassettransaction, getbalance, getmultibalances, getnewaddress, 
            getrawchangeaddress, getreceivedbyaccount, getreceivedbyaddress,
            getstreamitem, getstreamkeysummary, getstreampublishersummary, 
            gettotalbalances, gettransaction, gettxoutdata, getunconfirmedbalance, 
            getwalletinfo, getwallettransaction, grant, grantfrom, grantwithdata, 
            grantwithdatafrom, importaddress, importprivkey, importwallet, issue, 
            issuefrom, issuemore, issuemorefrom, keypoolrefill, listaccounts, 
            listaddresses, listaddressgroupings, listaddresstransactions, 
            listassettransactions, listlockunspent, listreceivedbyaccount,
            listreceivedbyaddress, listsinceblock, liststreamblockitems, 
            liststreamitems, liststreamkeyitems, liststreamkeys, liststreampublisheritems,
            liststreampublishers, liststreamqueryitems, liststreamtxitems, 
            listtransactions, listunspent, listwallettransactions, lockunspent,
            move, preparelockunspent, preparelockunspentfrom, publish, publishfrom,
            publishmulti, publishmultifrom, purgepublisheditems, purgestreamitems, 
            resendwallettransactions, retrievestreamitems, revoke, revokefrom, send, 
            sendasset, sendassetfrom, sendfrom, sendfromaccount, sendmany, sendwithdata,
            sendwithdatafrom, setaccount, settxfee, signmessage, subscribe, trimsubscribe, 
            txouttobinarycache, unsubscribe, walletlock, walletpassphrase, 
            walletpassphrasechange,
            
            <para>Inherits from an RPCClient and implements the IWalletRPC contract</para>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{MCWrapper.RPC.Options.BlockchainRpcOptions})">
            <summary>
            Create a new Wallet RPC client
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.AddMultiSigAddressAsync(System.String,System.String,System.Int32,System.String[],System.String)">
             <summary>
             
             <para>Add a nrequired-to-sign multisignature address to the wallet.</para>>
             <para>Each key is a address or hex-encoded public key.</para>
             <para> If 'account' is specified, assign address to that account.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="n_required">The number of required signatures out of the n keys or addresses</param>
             <param name="keys">A json array of addresses or hex-encoded public keys</param>
             <param name="account">An account to assign the addresses to. Accounts are not supported with the current version of MultiChain Core.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.AddMultiSigAddressAsync(System.Int32,System.String[],System.String)">
             <summary>
             
             <para>Add a nrequired-to-sign multisignature address to the wallet.</para>>
             <para>Each key is a address or hex-encoded public key.</para>
             <para> If 'account' is specified, assign address to that account.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="n_required">The number of required signatures out of the n keys or addresses</param>
             <param name="keys">A json array of addresses or hex-encoded public keys</param>
             <param name="account">An account to assign the addresses to. Accounts are not supported with the current version of MultiChain Core.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.AppendRawExchangeAsync(System.String,System.String,System.String,System.String,System.Int32,System.Object)">
            <summary>
            
            <para>Adds to the raw atomic exchange transaction in tx-hex given by a previous call to createrawexchange or appendrawexchange.</para>
            <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="hex">The transaction hex string</param>
            <param name="txid">Transaction ID of the output prepared by preparelockunspent</param>
            <param name="vout">Output index</param>
            <param name="ask_assets">
                A json object of assets to ask
                <para>{ "asset-identifier" : asset-quantity, ...  }</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.AppendRawExchangeAsync(System.String,System.String,System.Int32,System.Object)">
            <summary>
            
            <para>Adds to the raw atomic exchange transaction in tx-hex given by a previous call to createrawexchange or appendrawexchange.</para>
            <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="hex">The transaction hex string</param>
            <param name="txid">Transaction ID of the output prepared by preparelockunspent</param>
            <param name="vout">Output index</param>
            <param name="ask_assets">
                A json object of assets to ask
                <para>{ "asset-identifier" : asset-quantity, ...  }</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ApproveFromAsync(System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            
            <para>Approve upgrade, tx filter, or stream filter using specific address.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="fromAddress">Address used for approval</param>
            <param name="entityIdentifier">
                <para>Upgrade identifier - one of: create txid, upgrade name.</para>
                <para>or</para>
                <para>Tx Filter identifier - one of: create txid, filter reference, filter name.</para>
                <para>or</para>
                <para>Stream Filter identifier - one of: create txid, filter reference, filter name.</para>
            </param>
            <param name="approve">
                <para>(boolean, required)  Approve or disapprove</para>
                <para>or</para>
                <para>(object, required)  Approve or disapprove</para>
                <para>{ "approve" : approve  (boolean, required) Approve or disapprove "for" : "stream-identifier"   (string, required)  Stream identifier - one of: create txid, stream reference, stream name. }</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ApproveFromAsync(System.String,System.String,System.Object)">
            <summary>
            
            <para>Approve upgrade, tx filter, or stream filter using specific address.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="fromAddress">Address used for approval</param>
            <param name="entityIdentifier">
                <para>Upgrade identifier - one of: create txid, upgrade name.</para>
                <para>or</para>
                <para>Tx Filter identifier - one of: create txid, filter reference, filter name.</para>
                <para>or</para>
                <para>Stream Filter identifier - one of: create txid, filter reference, filter name.</para>
            </param>
            <param name="approve">
                <para>(boolean, required)  Approve or disapprove</para>
                <para>or</para>
                <para>(object, required)  Approve or disapprove</para>
                <para>{ "approve" : approve  (boolean, required) Approve or disapprove "for" : "stream-identifier"   (string, required)  Stream identifier - one of: create txid, stream reference, stream name. }</para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.BackupWalletAsync(System.String,System.String,System.String)">
            <summary>
            
            <para>Safely copies wallet.dat to destination, which can be a directory or a path with filename.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="destination">The destination directory or file</param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.BackupWalletAsync(System.String)">
            <summary>
            
            <para>Safely copies wallet.dat to destination, which can be a directory or a path with filename.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="destination">The destination directory or file</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CombineUnspentAsync(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             
             <para>Optimizes wallet performance by combining unspent txouts.</para>
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="addresses">Addresses to optimize (comma delimited). Default - "*", all</param>
             <param name="min_conf">The minimum confirmations to filter. Default - 1</param>
             <param name="max_combines">Maximal number of transactions to send. Default - 100</param>
             <param name="min_inputs">Minimal number of txouts to combine in one transaction. Default - 2</param>
             <param name="max_inputs">Maximal number of txouts to combine in one transaction. Default - 100</param>
             <param name="max_time">Maximal time for creating combining transactions, at least one transaction will be sent. Default - 15s</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CombineUnspentAsync(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             
             <para>Optimizes wallet performance by combining unspent txouts.</para>
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="addresses">Addresses to optimize (comma delimited). Default - "*", all</param>
             <param name="min_conf">The minimum confirmations to filter. Default - 1</param>
             <param name="max_combines">Maximal number of transactions to send. Default - 100</param>
             <param name="min_inputs">Minimal number of txouts to combine in one transaction. Default - 2</param>
             <param name="max_inputs">Maximal number of txouts to combine in one transaction. Default - 100</param>
             <param name="max_time">Maximal time for creating combining transactions, at least one transaction will be sent. Default - 15s</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CompleteRawExchangeAsync(System.String,System.String,System.String,System.String,System.Int32,System.Object,System.Object)">
            <summary>
            
            <para>Completes existing exchange transaction, adds fee if needed</para>
            <para>Returns hex-encoded raw transaction.</para>
            <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="hex">The transaction hex string</param>
            <param name="txid">Transaction ID of the output prepared by preparelockunspent</param>
            <param name="vout">Output index</param>
            <param name="ask_assets">A json object of assets to ask; { "asset-identifier" : asset-quantity, ... }</param>
            <param name="data">Data, see help data-with for details</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CompleteRawExchangeAsync(System.String,System.String,System.Int32,System.Object,System.Object)">
            <summary>
            
            <para>Completes existing exchange transaction, adds fee if needed</para>
            <para>Returns hex-encoded raw transaction.</para>
            <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="hex">The transaction hex string</param>
            <param name="txid">Transaction ID of the output prepared by preparelockunspent</param>
            <param name="vout">Output index</param>
            <param name="ask_assets">A json object of assets to ask; { "asset-identifier" : asset-quantity, ... }</param>
            <param name="data">Data, see help data-with for details</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CreateAsync(System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            
            <para>Creates stream or upgrade</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="entity_type">One of stream, upgrade, tx filter, stream filter</param>
            <param name="entity_name">The unique name of the stream, upgrade, tx filter, stream filter</param>
            <param name="restrictions_or_open">A json object with optional stream, upgrade, or filter restrictions</param>
            <param name="custom_fields">Custom fields objects or JavaScript code string</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CreateAsync(System.String,System.String,System.Object,System.Object)">
            <summary>
            
            <para>Creates stream or upgrade</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="entity_type">One of stream, upgrade, tx filter, stream filter</param>
            <param name="entity_name">The unique name of the stream, upgrade, tx filter, stream filter</param>
            <param name="restrictions_or_open">A json object with optional stream, upgrade, or filter restrictions</param>
            <param name="custom_fields">Custom fields objects or JavaScript code string</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CreateFromAsync(System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
             <summary>
             
             <para>Creates stream or upgrade using specific address</para>
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="from_address">Address used for creating</param>
             <param name="entity_type">One of stream, upgrade, tx filter, stream filter</param>
             <param name="entity_name">The unique name of the stream, upgrade, tx filter, stream filter</param>
             <param name="restrictions_or_open">A json object with optional stream, upgrade, or filter restrictions</param>
             <param name="custom_fields">Custom fields objects or JavaScript code string</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CreateFromAsync(System.String,System.String,System.String,System.Object,System.Object)">
             <summary>
             
             <para>Creates stream or upgrade using specific address</para>
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="from_address">Address used for creating</param>
             <param name="entity_type">One of stream, upgrade, tx filter, stream filter</param>
             <param name="entity_name">The unique name of the stream, upgrade, tx filter, stream filter</param>
             <param name="restrictions_or_open">A json object with optional stream, upgrade, or filter restrictions</param>
             <param name="custom_fields">Custom fields objects or JavaScript code string</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CreateRawExchangeAsync(System.String,System.String,System.String,System.Int32,System.Object)">
             <summary>
             
             <para>Creates new exchange transaction</para>
             <para>Note that the transaction should be completed by appendrawexchange</para>
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="txid">Transaction ID of the output prepared by preparelockunspent</param>
             <param name="vout">Output index</param>
             <param name="ask_assets">A json object of assets to ask</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CreateRawExchangeAsync(System.String,System.Int32,System.Object)">
             <summary>
             
             <para>Creates new exchange transaction</para>
             <para>Note that the transaction should be completed by appendrawexchange</para>
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="txid">Transaction ID of the output prepared by preparelockunspent</param>
             <param name="vout">Output index</param>
             <param name="ask_assets">A json object of assets to ask</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CreateRawSendFromAsync(System.String,System.String,System.String,System.Object,System.Object[],System.String)">
            <summary>
            
            <para>Create a transaction using the given sending address.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="from_address">Address to send from</param>
            <param name="addresses">Object with addresses as keys, see help addresses-all for details</param>
            <param name="data">Array of hexadecimal strings or data objects, see help data-all for details</param>
            <param name="action">Default is "". Additional actions: "lock", "sign", "lock,sign", "sign,lock", "send"</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.CreateRawSendFromAsync(System.String,System.Object,System.Object[],System.String)">
            <summary>
            
            <para>Create a transaction using the given sending address.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="from_address">Address to send from</param>
            <param name="addresses">Object with addresses as keys, see help addresses-all for details</param>
            <param name="data">Array of hexadecimal strings or data objects, see help data-all for details</param>
            <param name="action">Default is "". Additional actions: "lock", "sign", "lock,sign", "sign,lock", "send"</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.DecodeRawExchangeAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            <para>Return a JSON object representing the serialized, hex-encoded exchange transaction.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="tx_hex">The exchange transaction hex string</param>
            <param name="verbose">If true, returns array of all exchanges created by createrawexchange or appendrawexchange</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.DecodeRawExchangeAsync(System.String,System.Boolean)">
            <summary>
            
            <para>Return a JSON object representing the serialized, hex-encoded exchange transaction.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="tx_hex">The exchange transaction hex string</param>
            <param name="verbose">If true, returns array of all exchanges created by createrawexchange or appendrawexchange</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.DisableRawTransactionAsync(System.String,System.String,System.String)">
             <summary>
             
             <para>Disable raw transaction by spending one of its inputs and sending it back to the wallet.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="tx_hex">The transaction hex string</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.DisableRawTransactionAsync(System.String)">
             <summary>
             
             <para>Disable raw transaction by spending one of its inputs and sending it back to the wallet.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="tx_hex">The transaction hex string</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.DumpPrivKeyAsync(System.String,System.String,System.String)">
            <summary>
            
            <para>Reveals the private key corresponding to 'address'.</para>
            <para>Then the importprivkey can be used with this output</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="address">The MultiChain address for the private key</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.DumpPrivKeyAsync(System.String)">
            <summary>
            
            <para>Reveals the private key corresponding to 'address'.</para>
            <para>Then the importprivkey can be used with this output</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="address">The MultiChain address for the private key</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.DumpWalletAsync(System.String,System.String,System.String)">
            <summary>
            
            <para>Dumps all wallet keys in a human-readable format.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="filename">The filename</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.DumpWalletAsync(System.String)">
            <summary>
            
            <para>Dumps all wallet keys in a human-readable format.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="filename">The filename</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.EncryptWalletAsync(System.String,System.String,System.String)">
            <summary>
            <para>Encrypts the wallet with 'passphrase'. This is for first time encryption.</para>
            <para>
                After this, any calls that interact with private keys such as sending or signing
                will require the passphrase to be set prior the making these calls.
                Use the walletpassphrase call for this, and then walletlock call.
                If the wallet is already encrypted, use the walletpassphrasechange call.
                Note that this will shutdown the server.
            </para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="passphrase">The pass phrase to encrypt the wallet with. It must be at least 1 character, but should be long</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.EncryptWalletAsync(System.String)">
            <summary>
            <para>Encrypts the wallet with 'passphrase'. This is for first time encryption.</para>
            <para>
                After this, any calls that interact with private keys such as sending or signing
                will require the passphrase to be set prior the making these calls.
                Use the walletpassphrase call for this, and then walletlock call.
                If the wallet is already encrypted, use the walletpassphrasechange call.
                Note that this will shutdown the server.
            </para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="passphrase">The pass phrase to encrypt the wallet with. It must be at least 1 character, but should be long</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAccountAsync(System.String,System.String,System.String)">
             <summary>
             
             <para>Returns the account associated with the targeted address.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="address">The address for account lookup</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAccountAsync(System.String)">
             <summary>
             
             <para>Returns the account associated with the targeted address.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="address">The address for account lookup</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAccountAddressAsync(System.String,System.String,System.String)">
            <summary>
            
            <para>Returns the current address for receiving payments to this account.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="account">The account name for the address. It can also be set to the empty string "" to represent the default account. The account does not need to exist, it will be created and a new address created if there is no account by the given name.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAccountAddressAsync(System.String)">
            <summary>
            
            <para>Returns the current address for receiving payments to this account.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="account">The account name for the address. It can also be set to the empty string "" to represent the default account. The account does not need to exist, it will be created and a new address created if there is no account by the given name.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAddressBalancesAsync(System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            
            <para>Returns asset balances for specified address</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="address">Address to return balance for</param>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <param name="include_locked">Also take locked outputs into account</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAddressBalancesAsync(System.String,System.Int32,System.Boolean)">
            <summary>
            
            <para>Returns asset balances for specified address</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="address">Address to return balance for</param>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <param name="include_locked">Also take locked outputs into account</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAddressesAsync(System.String,System.String,System.Boolean)">
            <summary>
            
            <para>Returns the list of all addresses in the wallet.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="verbose">The account name</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAddressesAsync(System.Boolean)">
            <summary>
            
            <para>Returns the list of all addresses in the wallet.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="verbose">The account name</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAddressesByAccountAsync(System.String,System.String,System.String)">
            <summary>
            
            <para>Returns the list of addresses for the given account.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="account">The account name</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAddressesByAccountAsync(System.String)">
            <summary>
            
            <para>Returns the list of addresses for the given account.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="account">The account name</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAddressTransactionAsync(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            <para>Provides information about transaction txid related to address in this node's wallet</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="address">Address used for balance calculation</param>
            <param name="txid">The transaction id</param>
            <param name="verbose">If true, returns detailed array of inputs and outputs and raw hex of transactions</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAddressTransactionAsync(System.String,System.String,System.Boolean)">
            <summary>
            
            <para>Provides information about transaction txid related to address in this node's wallet</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="address">Address used for balance calculation</param>
            <param name="txid">The transaction id</param>
            <param name="verbose">If true, returns detailed array of inputs and outputs and raw hex of transactions</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAssetBalancesAsync(System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
             <summary>
             
             <para>If account is not specified, returns the server's total available asset balances.</para>
             <para>If account is specified, returns the balances in the account.</para>
             <para>Note that the account "" is not the same as leaving the parameter out.</para>
             <para>The server total may be different to the balance in the default "" account.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="account">The selected account, or "*" for entire wallet. It may be the default account using ""</param>
             <param name="min_conf">Only include transactions confirmed at least this many times</param>
             <param name="include_watch_only">Also include balance in watchonly addresses (see 'importaddress')</param>
             <param name="include_locked">Also take locked outputs into account</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAssetBalancesAsync(System.String,System.Int32,System.Boolean,System.Boolean)">
             <summary>
             
             <para>If account is not specified, returns the server's total available asset balances.</para>
             <para>If account is specified, returns the balances in the account.</para>
             <para>Note that the account "" is not the same as leaving the parameter out.</para>
             <para>The server total may be different to the balance in the default "" account.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="account">The selected account, or "*" for entire wallet. It may be the default account using ""</param>
             <param name="min_conf">Only include transactions confirmed at least this many times</param>
             <param name="include_watch_only">Also include balance in watchonly addresses (see 'importaddress')</param>
             <param name="include_locked">Also take locked outputs into account</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAssetTransactionAsync(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            <para>Retrieves a specific transaction txid involving asset.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="asset_identifier">One of the following: asset txid, asset reference, asset name</param>
            <param name="txid">The transaction id</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetAssetTransactionAsync(System.String,System.String,System.Boolean)">
            <summary>
            
            <para>Retrieves a specific transaction txid involving asset.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="asset_identifier">One of the following: asset txid, asset reference, asset name</param>
            <param name="txid">The transaction id</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetBalanceAsync(System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            
            <para>If account is not specified, returns the server's total available balance.</para>
            <para>If account is specified, returns the balance in the account.</para>
            <para>Note that the account "" is not the same as leaving the parameter out.</para>
            <para>The server total may be different to the balance in the default "" account.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="account">The selected account, or "*" for entire wallet. It may be the default account using ""</param>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <param name="include_watch_only">Also include balance in watchonly addresses (see 'importaddress')</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetBalanceAsync(System.String,System.Int32,System.Boolean)">
            <summary>
            
            <para>If account is not specified, returns the server's total available balance.</para>
            <para>If account is specified, returns the balance in the account.</para>
            <para>Note that the account "" is not the same as leaving the parameter out.</para>
            <para>The server total may be different to the balance in the default "" account.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="account">The selected account, or "*" for entire wallet. It may be the default account using ""</param>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <param name="include_watch_only">Also include balance in watchonly addresses (see 'importaddress')</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetMultiBalancesAsync(System.String,System.String,System.Object,System.Object,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            <para>Returns asset balances for specified address</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="addresses">Address(es) to return balance for, comma delimited. Default - all or A json array of addresses to return balance for</param>
            <param name="assets">Single asset identifier to return balance for, default "*" or Json array of asset identifiers to return balance for</param>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <param name="include_locked">Include transactions to watchonly addresses (see 'importaddress')</param>
            <param name="include_watch_only">Also take locked outputs into account</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetMultiBalancesAsync(System.Object,System.Object,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            <para>Returns asset balances for specified address</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="addresses">Address(es) to return balance for, comma delimited. Default - all or A json array of addresses to return balance for</param>
            <param name="assets">Single asset identifier to return balance for, default "*" or Json array of asset identifiers to return balance for</param>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <param name="include_locked">Include transactions to watchonly addresses (see 'importaddress')</param>
            <param name="include_watch_only">Also take locked outputs into account</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetNewAddressAsync(System.String,System.String,System.String)">
             <summary>
             
             <para> Returns a new address for receiving payments.</para>
             <para>If 'account' is specified (deprecated), it is added to the address book so payments received with the address will be credited to 'account'.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="account">The account name for the address to be linked to. If not provided, the default account "" is used. It can also be set to the empty string "" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetNewAddressAsync(System.String)">
             <summary>
             
             <para> Returns a new address for receiving payments.</para>
             <para>If 'account' is specified (deprecated), it is added to the address book so payments received with the address will be credited to 'account'.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="account">The account name for the address to be linked to. If not provided, the default account "" is used. It can also be set to the empty string "" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetRawChangeAddressAsync(System.String,System.String)">
            <summary>
            
            <para>Returns a new address, for receiving change.</para>
            <para>This is for use with raw transactions, NOT normal use.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetRawChangeAddressAsync">
            <summary>
            
            <para>Returns a new address, for receiving change.</para>
            <para>This is for use with raw transactions, NOT normal use.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetReceivedByAccountAsync(System.String,System.String,System.String,System.Int32)">
            <summary>
            
            <para>Returns the total amount received by addresses with account in transactions with at least [minconf] confirmations.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="account">The selected account, may be the default account using ""</param>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetReceivedByAccountAsync(System.String,System.Int32)">
            <summary>
            
            <para>Returns the total amount received by addresses with account in transactions with at least [minconf] confirmations.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="account">The selected account, may be the default account using ""</param>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetReceivedByAddressAsync(System.String,System.String,System.String,System.Int32)">
            <summary>
            
            <para>Returns the total amount received by the given address in transactions with at least minconf confirmations.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="address">The address for transactions</param>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetReceivedByAddressAsync(System.String,System.Int32)">
            <summary>
            
            <para>Returns the total amount received by the given address in transactions with at least minconf confirmations.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="address">The address for transactions</param>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetStreamItemAsync(System.String,System.String,System.String,System.String,System.Boolean)">
             <summary>
             
             <para>Returns stream item.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
             <param name="txid">id</param>
             <param name="verbose">If true, returns information about item transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetStreamItemAsync(System.String,System.String,System.Boolean)">
             <summary>
             
             <para>Returns stream item.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
             <param name="txid">id</param>
             <param name="verbose">If true, returns information about item transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetStreamKeySummaryAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            <para>Returns stream json object items summary for specific key.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
            <param name="key">Stream key</param>
            <param name="mode">
                <para>
                    Comma delimited list of the following: jsonobjectmerge (required) - merge json objects, recursive - merge json sub-objects recursively, 
                    noupdate -  preserve first value for each key instead of taking the last, omitnull - omit keys with null values, 
                    ignoreother - ignore items that cannot be included in summary (otherwise returns an error), 
                    ignoremissing - ignore missing offchain items (otherwise returns an error), 
                    firstpublishersany - only summarize items by a publisher of first item with this key, 
                    firstpublishersall - only summarize items by all publishers of first item with this key       
                </para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetStreamKeySummaryAsync(System.String,System.String,System.String)">
            <summary>
            
            <para>Returns stream json object items summary for specific key.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
            <param name="key">Stream key</param>
            <param name="mode">
                <para>
                    Comma delimited list of the following: 
                    jsonobjectmerge (required) - merge json objects, 
                    recursive - merge json sub-objects recursively, 
                    noupdate -  preserve first value for each key instead of taking the last, omitnull - omit keys with null values, 
                    ignoreother - ignore items that cannot be included in summary (otherwise returns an error), 
                    ignoremissing - ignore missing offchain items (otherwise returns an error), 
                    firstpublishersany - only summarize items by a publisher of first item with this key, 
                    firstpublishersall - only summarize items by all publishers of first item with this key       
                </para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetStreamPublisherSummaryAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            <para>Returns stream json object items summary for specific publisher.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="stream_identifier">one of the following: stream txid, stream reference, stream name</param>
            <param name="address">Publisher address</param>
            <param name="mode">
                <para>
                    Comma delimited list of the following: 
                    jsonobjectmerge (required) - merge json objects, 
                    recursive - merge json sub-objects recursively, 
                    noupdate -  preserve first value for each key instead of taking the last, omitnull - omit keys with null values, 
                    ignoreother - ignore items that cannot be included in summary (otherwise returns an error), 
                    ignoremissing - ignore missing offchain items (otherwise returns an error), 
                </para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetStreamPublisherSummaryAsync(System.String,System.String,System.String)">
            <summary>
            
            <para>Returns stream json object items summary for specific publisher.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="stream_identifier">one of the following: stream txid, stream reference, stream name</param>
            <param name="address">Publisher address</param>
            <param name="mode">
                <para>
                    Comma delimited list of the following: 
                    jsonobjectmerge (required) - merge json objects, 
                    recursive - merge json sub-objects recursively, 
                    noupdate -  preserve first value for each key instead of taking the last, omitnull - omit keys with null values, 
                    ignoreother - ignore items that cannot be included in summary (otherwise returns an error), 
                    ignoremissing - ignore missing offchain items (otherwise returns an error), 
                </para>
            </param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetTotalBalancesAsync(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            <para>Returns a list of all the asset balances in this nodeΓÇÖs wallet, with at least minconf confirmations.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <param name="include_watch_only">Also include balance in watchonly addresses (see 'importaddress')</param>
            <param name="include_locked">Also take locked outputs into account</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetTotalBalancesAsync(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            <para>Returns a list of all the asset balances in this nodeΓÇÖs wallet, with at least minconf confirmations.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="min_conf">Only include transactions confirmed at least this many times</param>
            <param name="include_watch_only">Also include balance in watchonly addresses (see 'importaddress')</param>
            <param name="include_locked">Also take locked outputs into account</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetTransactionAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            <para>Get detailed information about in-wallet transaction txid</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="txid">The transaction id</param>
            <param name="include_watch_only">Whether to include watchonly addresses in balance calculation and details[]</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetTransactionAsync(System.String,System.Boolean)">
            <summary>
            
            <para>Get detailed information about in-wallet transaction txid</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="txid">The transaction id</param>
            <param name="include_watch_only">Whether to include watchonly addresses in balance calculation and details[]</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetTxOutDataAsync(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            <para>Returns metadata of transaction output.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="txid">The transaction id</param>
            <param name="vout">vout value</param>
            <param name="count_bytes">Number of bytes to return</param>
            <param name="start_byte">Start from specific byte</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetTxOutDataAsync(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            <para>Returns metadata of transaction output.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="txid">The transaction id</param>
            <param name="vout">vout value</param>
            <param name="count_bytes">Number of bytes to return</param>
            <param name="start_byte">Start from specific byte</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetUnconfirmedBalanceAsync(System.String,System.String)">
            <summary>
            
            <para>Returns the server's total unconfirmed balance</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetUnconfirmedBalanceAsync">
            <summary>
            
            <para>Returns the server's total unconfirmed balance</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetWalletInfoAsync(System.String,System.String)">
            <summary>
            
            <para>Returns an object containing various wallet state info.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetWalletInfoAsync">
            <summary>
            
            <para>Returns an object containing various wallet state info.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetWalletTransactionAsync(System.String,System.String,System.String,System.Boolean,System.Boolean)">
             <summary>
             
             <para>Get detailed information about in-wallet transaction txid</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="txid">The transaction id</param>
             <param name="include_watch_only">Whether to include watchonly addresses in balance calculation and details[]</param>
             <param name="verbose">If true, returns detailed array of inputs and outputs and raw hex of transactions</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GetWalletTransactionAsync(System.String,System.Boolean,System.Boolean)">
             <summary>
             
             <para>Get detailed information about in-wallet transaction txid</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="txid">The transaction id</param>
             <param name="include_watch_only">Whether to include watchonly addresses in balance calculation and details[]</param>
             <param name="verbose">If true, returns detailed array of inputs and outputs and raw hex of transactions</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GrantAsync(System.String,System.String,System.String,System.String,System.Decimal,System.Int32,System.UInt32,System.String,System.String)">
             <summary>
             
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="addresses">The multichain addresses to send to (comma delimited)</param>
             <param name="permissions">
                 Permission strings, comma delimited.
                 <para>
                     Global: connect,send,receive,issue,mine,admin,activate,creat
                 </para>
                 <para>
                     or per-asset: asset-identifier.issue,admin,activate,send,receive
                 </para>
                 <para>
                     or per-stream: stream-identifier.write,activate,admin
                 </para>
             </param>
             <param name="native_amount">Native currency amount to send. eg 0.1. Default - 0.0</param>
             <param name="start_block">Block to apply permissions from (inclusive). Default - 0</param>
             <param name="end_block">Block to apply permissions to (exclusive). Default - 4294967295; If -1 is specified default value is used.</param>
             <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
             <param name="comment_to"> A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GrantAsync(System.String,System.String,System.Decimal,System.Int32,System.UInt32,System.String,System.String)">
             <summary>
             
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="addresses">The multichain addresses to send to (comma delimited)</param>
             <param name="permissions">
                 Permission strings, comma delimited.
                 <para>
                     Global: connect,send,receive,issue,mine,admin,activate,creat
                 </para>
                 <para>
                     or per-asset: asset-identifier.issue,admin,activate,send,receive
                 </para>
                 <para>
                     or per-stream: stream-identifier.write,activate,admin
                 </para>
             </param>
             <param name="native_amount">Native currency amount to send. eg 0.1. Default - 0.0</param>
             <param name="start_block">Block to apply permissions from (inclusive). Default - 0</param>
             <param name="end_block">Block to apply permissions to (exclusive). Default - 4294967295; If -1 is specified default value is used.</param>
             <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
             <param name="comment_to"> A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GrantFromAsync(System.String,System.String,System.String,System.String,System.String,System.Decimal,System.Int32,System.UInt32,System.String,System.String)">
             <summary>
             Grant permission using specific address.
            
             Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="from_address">Address used for grant</param>
             <param name="addresses">The multichain addresses to send to (comma delimited)</param>
             <param name="permissions">
                 Permission strings, comma delimited.
                 <para>
                     Global: connect,send,receive,issue,mine,admin,activate,creat
                 </para>
                 <para>
                     or per-asset: asset-identifier.issue,admin,activate,send,receive
                 </para>
                 <para>
                     or per-stream: stream-identifier.write,activate,admin
                 </para>
             </param>
             <param name="native_amount">Native currency amount to send. eg 0.1. Default - 0.0</param>
             <param name="start_block">Block to apply permissions from (inclusive). Default - 0</param>
             <param name="end_block">Block to apply permissions to (exclusive). Default - 4294967295; If -1 is specified default value is used.</param>
             <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
             <param name="comment_to"> A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GrantFromAsync(System.String,System.String,System.String,System.Decimal,System.Int32,System.UInt32,System.String,System.String)">
             <summary>
             Grant permission using specific address.
            
             Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="from_address">Address used for grant</param>
             <param name="addresses">The multichain addresses to send to (comma delimited)</param>
             <param name="permissions">
                 Permission strings, comma delimited.
                 <para>
                     Global: connect,send,receive,issue,mine,admin,activate,creat
                 </para>
                 <para>
                     or per-asset: asset-identifier.issue,admin,activate,send,receive
                 </para>
                 <para>
                     or per-stream: stream-identifier.write,activate,admin
                 </para>
             </param>
             <param name="native_amount">Native currency amount to send. eg 0.1. Default - 0.0</param>
             <param name="start_block">Block to apply permissions from (inclusive). Default - 0</param>
             <param name="end_block">Block to apply permissions to (exclusive). Default - 4294967295; If -1 is specified default value is used.</param>
             <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
             <param name="comment_to"> A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GrantWithDataAsync(System.String,System.String,System.String,System.String,System.Object,System.Decimal,System.Int32,System.UInt32)">
            <summary>
            
            <para>Grant permission(s) with metadata to a given address.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="addresses">The multichain addresses to send to (comma delimited)</param>
            <param name="permissions">
                Permission strings, comma delimited.
                <para>
                    Global: connect,send,receive,issue,mine,admin,activate,creat
                </para>
                <para>
                    or per-asset: asset-identifier.issue,admin,activate,send,receive
                </para>
                <para>
                    or per-stream: stream-identifier.write,activate,admin
                </para>
            </param>
            <param name="object_or_hex">(string or object, required) Data, see help data-with for details.</param>
            <param name="native_amount">Native currency amount to send. eg 0.1. Default - 0.0</param>
            <param name="start_block">Block to apply permissions from (inclusive). Default - 0</param>
            <param name="end_block">Block to apply permissions to (exclusive). Default - 4294967295; If -1 is specified default value is used.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GrantWithDataAsync(System.String,System.String,System.Object,System.Decimal,System.Int32,System.UInt32)">
            <summary>
            
            <para>Grant permission(s) with metadata to a given address.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="addresses">The multichain addresses to send to (comma delimited)</param>
            <param name="permissions">
                Permission strings, comma delimited.
                <para>
                    Global: connect,send,receive,issue,mine,admin,activate,creat
                </para>
                <para>
                    or per-asset: asset-identifier.issue,admin,activate,send,receive
                </para>
                <para>
                    or per-stream: stream-identifier.write,activate,admin
                </para>
            </param>
            <param name="object_or_hex">(string or object, required) Data, see help data-with for details.</param>
            <param name="native_amount">Native currency amount to send. eg 0.1. Default - 0.0</param>
            <param name="start_block">Block to apply permissions from (inclusive). Default - 0</param>
            <param name="end_block">Block to apply permissions to (exclusive). Default - 4294967295; If -1 is specified default value is used.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GrantWithDataFromAsync(System.String,System.String,System.String,System.String,System.String,System.Object,System.Decimal,System.Int32,System.UInt32)">
             <summary>
             
             <para>Grant permission with metadata using specific address.</para>
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="from_address">Address used for grant</param>
             <param name="to_addresses">The multichain addresses to send to (comma delimited)</param>
             <param name="permissions">
                 Permission strings, comma delimited.
                 <para>
                     Global: connect,send,receive,issue,mine,admin,activate,creat
                 </para>
                 <para>
                     or per-asset: asset-identifier.issue,admin,activate,send,receive
                 </para>
                 <para>
                     or per-stream: stream-identifier.write,activate,admin
                 </para>
             </param>
             <param name="object_or_hex">(string or object, required) Data, see help data-with for details.</param>
             <param name="native_amount">Native currency amount to send. eg 0.1. Default - 0.0</param>
             <param name="start_block">Block to apply permissions from (inclusive). Default - 0</param>
             <param name="end_block">Block to apply permissions to (exclusive). Default - 4294967295; If -1 is specified default value is used.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.GrantWithDataFromAsync(System.String,System.String,System.String,System.Object,System.Decimal,System.Int32,System.UInt32)">
             <summary>
             
             <para>Grant permission with metadata using specific address.</para>
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="from_address">Address used for grant</param>
             <param name="to_addresses">The multichain addresses to send to (comma delimited)</param>
             <param name="permissions">
                 Permission strings, comma delimited.
                 <para>
                     Global: connect,send,receive,issue,mine,admin,activate,creat
                 </para>
                 <para>
                     or per-asset: asset-identifier.issue,admin,activate,send,receive
                 </para>
                 <para>
                     or per-stream: stream-identifier.write,activate,admin
                 </para>
             </param>
             <param name="object_or_hex">(string or object, required) Data, see help data-with for details.</param>
             <param name="native_amount">Native currency amount to send. eg 0.1. Default - 0.0</param>
             <param name="start_block">Block to apply permissions from (inclusive). Default - 0</param>
             <param name="end_block">Block to apply permissions to (exclusive). Default - 4294967295; If -1 is specified default value is used.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ImportAddressAsync(System.String,System.String,System.Object,System.String,System.Object)">
            <summary>
            
            <para>Adds an address or script (in hex) that can be watched as if it were in your wallet but cannot be used to spend.</para>
            <para>Note: This call can take minutes to complete if rescan is true.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="addresses">The addresses, comma delimited or a json array of addresses</param>
            <param name="label">An optional label</param>
            <param name="rescan">(boolean or integer, optional, default=true) Rescan the wallet for transactions. If integer rescan from block, if negative - from the end</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ImportAddressAsync(System.Object,System.String,System.Object)">
            <summary>
            
            <para>Adds an address or script (in hex) that can be watched as if it were in your wallet but cannot be used to spend.</para>
            <para>Note: This call can take minutes to complete if rescan is true.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="addresses">The addresses, comma delimited or a json array of addresses</param>
            <param name="label">An optional label</param>
            <param name="rescan">(boolean or integer, optional, default=true) Rescan the wallet for transactions. If integer rescan from block, if negative - from the end</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ImportPrivKeyAsync(System.String,System.String,System.Object,System.String,System.Object)">
            <summary>
            
            <para>Adds a private key (as returned by dumpprivkey) to your wallet.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="priv_keys">(string, required) The private key (see dumpprivkey), comma delimited or (array, optional) A json array of private keys</param>
            <param name="label">An optional label</param>
            <param name="rescan">(boolean or integer, optional, default=true) Rescan the wallet for transactions. If integer rescan from block, if negative - from the end</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ImportPrivKeyAsync(System.Object,System.String,System.Object)">
            <summary>
            
            <para>Adds a private key (as returned by dumpprivkey) to your wallet.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="priv_keys">(string, required) The private key (see dumpprivkey), comma delimited or (array, optional) A json array of private keys</param>
            <param name="label">An optional label</param>
            <param name="rescan">(boolean or integer, optional, default=true) Rescan the wallet for transactions. If integer rescan from block, if negative - from the end</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ImportWalletAsync(System.String,System.String,System.String,System.Object)">
            <summary>
            
            <para>Imports keys from a wallet dump file (see dumpwallet).</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="filename">The wallet file</param>
            <param name="rescan">(boolean or integer, optional, default=true) Rescan the wallet for transactions. If integer rescan from block, if negative - from the end.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ImportWalletAsync(System.String,System.Object)">
            <summary>
            
            <para>Imports keys from a wallet dump file (see dumpwallet).</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="filename">The wallet file</param>
            <param name="rescan">(boolean or integer, optional, default=true) Rescan the wallet for transactions. If integer rescan from block, if negative - from the end.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.IssueAsync(System.String,System.String,System.String,System.Object,System.Int32,System.Double,System.Decimal,System.Object)">
            <summary>
            
            <para>Issue a new Asset to an address on the blockchain network.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="to_address">The address to send newly created asset to</param>
            <param name="asset_params"> (string, required) Asset name, if not "" should be unique or (object, required) A json object of with asset params</param>
            <param name="quantity">The asset total amount in display units. eg. 1234.56</param>
            <param name="smallest_unit">Number of raw units in one displayed unit, eg 0.01 for cents. Default value is 1</param>
            <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output.</param>
            <param name="custom_fields">a json object with custom fields. { "param-name": "param-value"   (strings, required) The key is the parameter name, the value is parameter value, ,... }</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.IssueAsync(System.String,System.Object,System.Int32,System.Double,System.Decimal,System.Object)">
            <summary>
            
            <para>Issue a new Asset to an address on the blockchain network.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="to_address">The address to send newly created asset to</param>
            <param name="asset_params"> (string, required) Asset name, if not "" should be unique or (object, required) A json object of with asset params</param>
            <param name="quantity">The asset total amount in display units. eg. 1234.56</param>
            <param name="smallest_unit">Number of raw units in one displayed unit, eg 0.01 for cents. Default value is 1</param>
            <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output.</param>
            <param name="custom_fields">a json object with custom fields. { "param-name": "param-value"   (strings, required) The key is the parameter name, the value is parameter value, ,... }</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.IssueFromAsync(System.String,System.String,System.String,System.String,System.Object,System.Int32,System.Double,System.Decimal,System.Object)">
             <summary>
             
             <para>Issue asset using specific address</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="from_address">Address used for issuing</param>
             <param name="to_address">The address to send newly created asset to</param>
             <param name="asset_params"> (string, required) Asset name, if not "" should be unique or (object, required) A json object of with asset params</param>
             <param name="quantity">The asset total amount in display units. eg. 1234.56</param>
             <param name="smallest_unit">Number of raw units in one displayed unit, eg 0.01 for cents. Default value is 1</param>
             <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output.</param>
             <param name="custom_fields">a json object with custom fields. { "param-name": "param-value"   (strings, required) The key is the parameter name, the value is parameter value, ,... }</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.IssueFromAsync(System.String,System.String,System.Object,System.Int32,System.Double,System.Decimal,System.Object)">
             <summary>
             
             <para>Issue asset using specific address</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="from_address">Address used for issuing</param>
             <param name="to_address">The address to send newly created asset to</param>
             <param name="asset_params"> (string, required) Asset name, if not "" should be unique or (object, required) A json object of with asset params</param>
             <param name="quantity">The asset total amount in display units. eg. 1234.56</param>
             <param name="smallest_unit">Number of raw units in one displayed unit, eg 0.01 for cents. Default value is 1</param>
             <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output.</param>
             <param name="custom_fields">a json object with custom fields. { "param-name": "param-value"   (strings, required) The key is the parameter name, the value is parameter value, ,... }</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.IssueMoreAsync(System.String,System.String,System.String,System.String,System.Int32,System.Decimal,System.Object)">
             <summary>
             
             <para>Create more units for asset</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="to_address">The address to send newly created asset to</param>
             <param name="asset_identifier">One of the following: issue txid, asset reference, asset name</param>
             <param name="quantity">The asset total amount in display units. eg. 1234.56</param>
             <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output.</param>
             <param name="custom_fields">a json object with custom fields</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.IssueMoreAsync(System.String,System.String,System.Int32,System.Decimal,System.Object)">
             <summary>
             
             <para>Create more units for asset</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="to_address">The address to send newly created asset to</param>
             <param name="asset_identifier">One of the following: issue txid, asset reference, asset name</param>
             <param name="quantity">The asset total amount in display units. eg. 1234.56</param>
             <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output.</param>
             <param name="custom_fields">a json object with custom fields</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.IssueMoreFromAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Decimal,System.Object)">
             <summary>
             
             <para>Create more units for asset from specific address</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="from_address">Address used for issuing</param>
             <param name="to_address">The address to send newly created asset to</param>
             <param name="asset_identifier">One of the following: issue txid, asset reference, asset name</param>
             <param name="quantity">The asset total amount in display units. eg. 1234.56</param>
             <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output.</param>
             <param name="custom_fields">a json object with custom fields</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.IssueMoreFromAsync(System.String,System.String,System.String,System.Int32,System.Decimal,System.Object)">
             <summary>
             
             <para>Create more units for asset from specific address</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="from_address">Address used for issuing</param>
             <param name="to_address">The address to send newly created asset to</param>
             <param name="asset_identifier">One of the following: issue txid, asset reference, asset name</param>
             <param name="quantity">The asset total amount in display units. eg. 1234.56</param>
             <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output.</param>
             <param name="custom_fields">a json object with custom fields</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.KeyPoolRefillAsync(System.String,System.String,System.Int32)">
            <summary>
            
            <para>Fills the keypool.</para>
            <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="new_size">The new keypool size</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.KeyPoolRefillAsync(System.Int32)">
            <summary>
            
            <para>Fills the keypool.</para>
            <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="new_size">The new keypool size</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListAccountsAsync(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            
            <para>Returns Object that has account names as keys, account balances as values.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="min_conf"> Only include transactions with at least this many confirmations</param>
            <param name="include_watch_only">Include balances in watchonly addresses (see 'importaddress')</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListAccountsAsync(System.Int32,System.Boolean)">
            <summary>
            
            <para>Returns Object that has account names as keys, account balances as values.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="min_conf"> Only include transactions with at least this many confirmations</param>
            <param name="include_watch_only">Include balances in watchonly addresses (see 'importaddress')</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListAddressesAsync(System.String,System.String,System.Object,System.Boolean,System.Int32,System.Int32)">
             <summary>
             
             Returns asset balances for specified address
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="addresses">(string, optional, default *) Address(es) to return information for, comma delimited. Default - all or (array, optional) A json array of addresses to return information for</param>
             <param name="verbose">If true return more information about address.</param>
             <param name="count">The number of addresses to display</param>
             <param name="start">Start from specific address, 0 based, if negative - from the end</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListAddressesAsync(System.Object,System.Boolean,System.Int32,System.Int32)">
             <summary>
             
             Returns asset balances for specified address
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="addresses">(string, optional, default *) Address(es) to return information for, comma delimited. Default - all or (array, optional) A json array of addresses to return information for</param>
             <param name="verbose">If true return more information about address.</param>
             <param name="count">The number of addresses to display</param>
             <param name="start">Start from specific address, 0 based, if negative - from the end</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListAddressGroupingsAsync(System.String,System.String)">
             <summary>
            
             <para>Lists groups of addresses which have had their common ownership made public by common use as inputs or as the resulting change in past transactions</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
             
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListAddressGroupingsAsync">
             <summary>
            
             <para>Lists groups of addresses which have had their common ownership made public by common use as inputs or as the resulting change in past transactions</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
             
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListAddressTransactionsAsync(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
             <summary>
             
             Lists information about the count most recent transactions related to address in this nodeΓÇÖs wallet.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="address">Address to list transactions for</param>
             <param name="count">The number of transactions to return</param>
             <param name="skip">The number of transactions to skip</param>
             <param name="verbose">If true, returns detailed array of inputs and outputs and raw hex of transactions</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListAddressTransactionsAsync(System.String,System.Int32,System.Int32,System.Boolean)">
             <summary>
             
             Lists information about the count most recent transactions related to address in this nodeΓÇÖs wallet.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="address">Address to list transactions for</param>
             <param name="count">The number of transactions to return</param>
             <param name="skip">The number of transactions to skip</param>
             <param name="verbose">If true, returns detailed array of inputs and outputs and raw hex of transactions</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListAssetTransactionsAsync(System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Lists transactions involving asset.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="asset_identifier">One of the following: asset txid, asset reference, asset name</param>
            <param name="verbose">If true, returns information about transaction</param>
            <param name="count">The number of transactions to display</param>
            <param name="start">Start from specific transaction, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, transactions appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListAssetTransactionsAsync(System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Lists transactions involving asset.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="asset_identifier">One of the following: asset txid, asset reference, asset name</param>
            <param name="verbose">If true, returns information about transaction</param>
            <param name="count">The number of transactions to display</param>
            <param name="start">Start from specific transaction, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, transactions appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListLockUnspentAsync(System.String,System.String)">
             <summary>
             
             Returns list of temporarily unspendable outputs.
             <para>See the lockunspent call to lock and unlock transactions for spending.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListLockUnspentAsync">
             <summary>
             
             Returns list of temporarily unspendable outputs.
             <para>See the lockunspent call to lock and unlock transactions for spending.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListReceivedByAccountAsync(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
             <summary>
             
             List balances by account.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="min_conf">The minimum number of confirmations before payments are included</param>
             <param name="include_empty">Whether to include accounts that haven't received any payments</param>
             <param name="include_watch_only">Whether to include watchonly addresses (see 'importaddress')</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListReceivedByAccountAsync(System.Int32,System.Boolean,System.Boolean)">
             <summary>
             
             List balances by account.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="min_conf">The minimum number of confirmations before payments are included</param>
             <param name="include_empty">Whether to include accounts that haven't received any payments</param>
             <param name="include_watch_only">Whether to include watchonly addresses (see 'importaddress')</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListReceivedByAddressAsync(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
             <summary>
             
             List balances by receiving address.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="min_conf">The minimum number of confirmations before payments are included</param>
             <param name="include_empty">Whether to include accounts that haven't received any payments</param>
             <param name="include_watch_only">Whether to include watchonly addresses (see 'importaddress')</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListReceivedByAddressAsync(System.Int32,System.Boolean,System.Boolean)">
             <summary>
             
             List balances by receiving address.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="min_conf">The minimum number of confirmations before payments are included</param>
             <param name="include_empty">Whether to include accounts that haven't received any payments</param>
             <param name="include_watch_only">Whether to include watchonly addresses (see 'importaddress')</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListSinceBlockAsync(System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            
            Get all transactions in blocks since block [blockhash], or all transactions if omitted
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="block_hash">The block hash to list transactions since</param>
            <param name="target_confirmations">The confirmations required, must be 1 or more</param>
            <param name="include_watch_only">Include transactions to watchonly addresses (see 'importaddress')</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListSinceBlockAsync(System.String,System.Int32,System.Boolean)">
            <summary>
            
            Get all transactions in blocks since block [blockhash], or all transactions if omitted
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="block_hash">The block hash to list transactions since</param>
            <param name="target_confirmations">The confirmations required, must be 1 or more</param>
            <param name="include_watch_only">Include transactions to watchonly addresses (see 'importaddress')</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamBlockItemsAsync(System.String,System.String,System.String,System.Object,System.Boolean,System.Int32,System.Int32)">
             <summary>
             
             Returns stream items in certain block range.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="stream_identifier">(string, required) Stream identifier - one of the following: stream txid, stream reference, stream name</param>
             <param name="block_set_identifier">(string, required) Comma delimited list of block identifiers or A json array of block identifiers or A json object with time range</param>
             <param name="verbose">If true, returns information about item transaction</param>
             <param name="count">The number of items to display</param>
             <param name="start">Start from specific item, 0 based, if negative - from the end</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamBlockItemsAsync(System.String,System.Object,System.Boolean,System.Int32,System.Int32)">
             <summary>
             
             Returns stream items in certain block range.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="stream_identifier">(string, required) Stream identifier - one of the following: stream txid, stream reference, stream name</param>
             <param name="block_set_identifier">(string, required) Comma delimited list of block identifiers or A json array of block identifiers or A json object with time range</param>
             <param name="verbose">If true, returns information about item transaction</param>
             <param name="count">The number of items to display</param>
             <param name="start">Start from specific item, 0 based, if negative - from the end</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamItemsAsync(System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Returns stream items.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <param name="count">The number of items to display</param>
            <param name="start">Start from specific item, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, items appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamItemsAsync(System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Returns stream items.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <param name="count">The number of items to display</param>
            <param name="start">Start from specific item, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, items appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamKeyItemsAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Returns stream items for specific key.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
            <param name="key">Stream key</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <param name="count">The number of items to display</param>
            <param name="start">Start from specific item, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, items appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamKeyItemsAsync(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Returns stream items for specific key.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
            <param name="key">Stream key</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <param name="count">The number of items to display</param>
            <param name="start">Start from specific item, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, items appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamKeysAsync(System.String,System.String,System.String,System.Object,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Returns stream keys.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
            <param name="keys">Stream key or a json array of stream keys</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <param name="count">The number of items to display</param>
            <param name="start">Start from specific item, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, items appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamKeysAsync(System.String,System.Object,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Returns stream keys.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
            <param name="keys">Stream key or a json array of stream keys</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <param name="count">The number of items to display</param>
            <param name="start">Start from specific item, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, items appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamPublisherItemsAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Returns stream items for specific publisher.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="stream_identifiers">One of the following: stream txid, stream reference, stream name</param>
            <param name="address">Publisher address</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <param name="count">The number of items to display</param>
            <param name="start">Start from specific item, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, items appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamPublisherItemsAsync(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Returns stream items for specific publisher.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="stream_identifiers">One of the following: stream txid, stream reference, stream name</param>
            <param name="address">Publisher address</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <param name="count">The number of items to display</param>
            <param name="start">Start from specific item, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, items appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamPublishersAsync(System.String,System.String,System.String,System.Object,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Returns stream publishers.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
            <param name="addresses">Publisher addresses, comma delimited or a json array of publisher addresses</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <param name="count">The number of items to display</param>
            <param name="start">Start from specific item, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, items appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamPublishersAsync(System.String,System.Object,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            Returns stream publishers.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
            <param name="addresses">Publisher addresses, comma delimited or a json array of publisher addresses</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <param name="count">The number of items to display</param>
            <param name="start">Start from specific item, 0 based, if negative - from the end</param>
            <param name="local_ordering">If true, items appear in the order they were processed by the wallet, if false - in the order they appear in blockchain</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamQueryItemsAsync(System.String,System.String,System.String,System.Object,System.Boolean)">
             <summary>
             
             Returns stream items for specific query.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
             <param name="query">Query { "key" : "key" (string, optional, default: "") Item key, or "keys" : keys (array, optional) Item keys, array of strings, and or  "publisher" : "publisher" (string, optional, default: "") Publisher or "publishers" : publishers (array, optional) Publishers, array of strings }</param>
             <param name="verbose">If true, returns information about item transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamQueryItemsAsync(System.String,System.Object,System.Boolean)">
             <summary>
             
             Returns stream items for specific query.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
             <param name="query">Query { "key" : "key" (string, optional, default: "") Item key, or "keys" : keys (array, optional) Item keys, array of strings, and or  "publisher" : "publisher" (string, optional, default: "") Publisher or "publishers" : publishers (array, optional) Publishers, array of strings }</param>
             <param name="verbose">If true, returns information about item transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamTxItemsAsync(System.String,System.String,System.String,System.Object,System.Boolean)">
            <summary>
            
            Returns stream items.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="stream_identifiers">One of the following: stream txid, stream reference, stream name</param>
            <param name="txids"> Transaction IDs, comma delimited or Array of transaction IDs</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListStreamTxItemsAsync(System.String,System.Object,System.Boolean)">
            <summary>
            
            Returns stream items.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="stream_identifiers">One of the following: stream txid, stream reference, stream name</param>
            <param name="txids"> Transaction IDs, comma delimited or Array of transaction IDs</param>
            <param name="verbose">If true, returns information about item transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListTransactionsAsync(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
             <summary>
             
             Returns up to 'count' most recent transactions skipping the first 'from' transactions for account 'account'.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="account">The account name. If not included, it will list all transactions for all accounts. If "" is set, it will list transactions for the default account.</param>
             <param name="count">The number of transactions to return</param>
             <param name="from">The number of transactions to skip</param>
             <param name="include_watch_only">Include transactions to watchonly addresses (see 'importaddress')</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListTransactionsAsync(System.String,System.Int32,System.Int32,System.Boolean)">
             <summary>
             
             Returns up to 'count' most recent transactions skipping the first 'from' transactions for account 'account'.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="account">The account name. If not included, it will list all transactions for all accounts. If "" is set, it will list transactions for the default account.</param>
             <param name="count">The number of transactions to return</param>
             <param name="from">The number of transactions to skip</param>
             <param name="include_watch_only">Include transactions to watchonly addresses (see 'importaddress')</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListUnspentAsync(System.String,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            
            Returns array of unspent transaction outputs with between minconf and maxconf (inclusive) confirmations.
            
            <para>Optionally filter to only include txouts paid to specified addresses.</para>
            <para>Results are an array of Objects, each of which has: {txid, vout, scriptPubKey, amount, confirmations}</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="min_conf">The minimum confirmations to filter</param>
            <param name="max_conf">The maximum confirmations to filter</param>
            <param name="addresses">A json array of addresses to filter</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListUnspentAsync(System.Int32,System.Int32,System.Object)">
            <summary>
            
            Returns array of unspent transaction outputs with between minconf and maxconf (inclusive) confirmations.
            
            <para>Optionally filter to only include txouts paid to specified addresses.</para>
            <para>Results are an array of Objects, each of which has: {txid, vout, scriptPubKey, amount, confirmations}</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="min_conf">The minimum confirmations to filter</param>
            <param name="max_conf">The maximum confirmations to filter</param>
            <param name="addresses">A json array of addresses to filter</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListWalletTransactionsAsync(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
             <summary>
             
             Lists information about the count most recent transactions in this nodeΓÇÖs wallet.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="count">The number of transactions to return</param>
             <param name="skip">The number of transactions to skip</param>
             <param name="include_watch_only">Include transactions to watchonly addresses (see 'importaddress')</param>
             <param name="verbose">If true, returns detailed array of inputs and outputs and raw hex of transactions</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ListWalletTransactionsAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
             <summary>
             
             Lists information about the count most recent transactions in this nodeΓÇÖs wallet.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="count">The number of transactions to return</param>
             <param name="skip">The number of transactions to skip</param>
             <param name="include_watch_only">Include transactions to watchonly addresses (see 'importaddress')</param>
             <param name="verbose">If true, returns detailed array of inputs and outputs and raw hex of transactions</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.LockUnspentAsync(System.String,System.String,System.Boolean,MCWrapper.RPC.Ledger.Models.Wallet.CustomModels.Transaction[])">
            <summary>
            
            Updates list of temporarily unspendable outputs.
            <para>Temporarily lock (unlock=false) or unlock (unlock=true) specified transaction outputs.</para>
            <para>A locked transaction output will not be chosen by automatic coin selection, when spending assetss.</para>
            Locks are stored in memory only. Nodes start with zero locked outputs, and the locked output list is always cleared (by virtue of process exit) when a node stops or fails.
            <para>Also see the listunspent call</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="unlock">Whether to unlock (true) or lock (false) the specified transactions</param>
            <param name="transactions">A json array of objects. Each object should have the the txid (string) vout (numeric)</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.LockUnspentAsync(System.Boolean,MCWrapper.RPC.Ledger.Models.Wallet.CustomModels.Transaction[])">
            <summary>
            
            Updates list of temporarily unspendable outputs.
            <para>Temporarily lock (unlock=false) or unlock (unlock=true) specified transaction outputs.</para>
            <para>A locked transaction output will not be chosen by automatic coin selection, when spending assetss.</para>
            Locks are stored in memory only. Nodes start with zero locked outputs, and the locked output list is always cleared (by virtue of process exit) when a node stops or fails.
            <para>Also see the listunspent call</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="unlock">Whether to unlock (true) or lock (false) the specified transactions</param>
            <param name="transactions">A json array of objects. Each object should have the the txid (string) vout (numeric)</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.MoveAsync(System.String,System.String,System.String,System.String,System.Object,System.Int32,System.String)">
            <summary>
            
            Move a specified amount from one account in your wallet to another.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="from_account">The name of the account to move funds from. May be the default account using ""</param>
            <param name="to_account">The name of the account to move funds to. May be the default account using ""</param>
            <param name="amount">Number to move</param>
            <param name="min_conf">Only use funds with at least this many confirmations</param>
            <param name="comment">An optional comment, stored in the wallet only</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.MoveAsync(System.String,System.String,System.Object,System.Int32,System.String)">
            <summary>
            
            Move a specified amount from one account in your wallet to another.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="from_account">The name of the account to move funds from. May be the default account using ""</param>
            <param name="to_account">The name of the account to move funds to. May be the default account using ""</param>
            <param name="amount">Number to move</param>
            <param name="min_conf">Only use funds with at least this many confirmations</param>
            <param name="comment">An optional comment, stored in the wallet only</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PrepareLockUnspentAsync(System.String,System.String,System.Object,System.Boolean)">
            <summary>
            
            Prepares exchange transaction output for createrawexchange, appendrawexchange
            <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
             
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="asset_quantities">A json object of assets to send</param>
            <param name="_lock">Lock prepared unspent output. Default is true</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PrepareLockUnspentAsync(System.Object,System.Boolean)">
            <summary>
            
            Prepares exchange transaction output for createrawexchange, appendrawexchange
            <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
             
            </summary>
            <param name="asset_quantities">A json object of assets to send</param>
            <param name="_lock">Lock prepared unspent output. Default is true</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PrepareLockUnspentFromAsync(System.String,System.String,System.String,System.Object,System.Boolean)">
             <summary>
             
             Prepares exchange transaction output for createrawexchange, appendrawexchange using specific address
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="from_address">Address to send from</param>
             <param name="asset_quantities">A json object of assets to send</param>
             <param name="_lock">Lock prepared unspent output</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PrepareLockUnspentFromAsync(System.String,System.Object,System.Boolean)">
             <summary>
             
             Prepares exchange transaction output for createrawexchange, appendrawexchange using specific address
             <para>Requires wallet passphrase to be set with walletpassphrase call.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="from_address">Address to send from</param>
             <param name="asset_quantities">A json object of assets to send</param>
             <param name="_lock">Lock prepared unspent output</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PublishAsync(System.String,System.String,System.String,System.Object,System.Object,System.String)">
             <summary>
             
             Publishes stream item. Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
             <param name="keys">Item key or Array of item keys</param>
             <param name="data_hex_or_object">Data hex string or JSON data object or Text data object or Binary raw data created with appendbinarycache</param>
             <param name="options">Should be "offchain" or omitted</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PublishAsync(System.String,System.Object,System.Object,System.String)">
             <summary>
             
             Publishes stream item. Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
             <param name="keys">Item key or Array of item keys</param>
             <param name="data_hex_or_object">Data hex string or JSON data object or Text data object or Binary raw data created with appendbinarycache</param>
             <param name="options">Should be "offchain" or omitted</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PublishFromAsync(System.String,System.String,System.String,System.String,System.Object,System.Object,System.String)">
             <summary>
             
             Publishes stream item from specific address. Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="from_address">Address used for issuing</param>
             <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
             <param name="keys">Item key or Array of item keys</param>
             <param name="data_hex_or_object">Data hex string or JSON data object or Text data object or Binary raw data created with appendbinarycache</param>
             <param name="options">Should be "offchain" or omitted</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PublishFromAsync(System.String,System.String,System.Object,System.Object,System.String)">
             <summary>
             
             Publishes stream item from specific address. Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="from_address">Address used for issuing</param>
             <param name="stream_identifier">One of the following: stream txid, stream reference, stream name</param>
             <param name="keys">Item key or Array of item keys</param>
             <param name="data_hex_or_object">Data hex string or JSON data object or Text data object or Binary raw data created with appendbinarycache</param>
             <param name="options">Should be "offchain" or omitted</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PublishMultiAsync(System.String,System.String,System.String,System.Object[],System.String)">
            <summary>
            
            Publishes several stream items.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="stream_identifier">One of: create txid, stream reference, stream name. Default for items if "for" field is omitted</param>
            <param name="items">Array of stream items.</param>
            <param name="options">Should be "offchain" or omitted. Default for items if "options" field is omitted</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PublishMultiAsync(System.String,System.Object[],System.String)">
            <summary>
            
            Publishes several stream items.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="stream_identifier">One of: create txid, stream reference, stream name. Default for items if "for" field is omitted</param>
            <param name="items">Array of stream items.</param>
            <param name="options">Should be "offchain" or omitted. Default for items if "options" field is omitted</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PublishMultiFromAsync(System.String,System.String,System.String,System.String,System.Object[],System.String)">
            <summary>
            
            Publishes several stream items
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="from_address"> Address used for publishing</param>
            <param name="stream_identifier">One of: create txid, stream reference, stream name. Default for items if "for" field is omitted</param>
            <param name="items">Array of stream items.</param>
            <param name="options">Should be "offchain" or omitted. Default for items if "options" field is omitted</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.PublishMultiFromAsync(System.String,System.String,System.Object[],System.String)">
            <summary>
            
            Publishes several stream items
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="from_address"> Address used for publishing</param>
            <param name="stream_identifier">One of: create txid, stream reference, stream name. Default for items if "for" field is omitted</param>
            <param name="items">Array of stream items.</param>
            <param name="options">Should be "offchain" or omitted. Default for items if "options" field is omitted</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ResendWalletTransactionsAsync(System.String,System.String)">
            <summary>
            
            Resends wallet transactions
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.ResendWalletTransactionsAsync">
            <summary>
            
            Resends wallet transactions
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.RevokeAsync(System.String,System.String,System.String,System.String,System.Double,System.String,System.String)">
            <summary>
            
            Revoke permission from a given address. The amount is a real. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="addresses">The addresses(es) to revoke permissions from</param>
            <param name="permissions">
                <para>
                    Permission strings, comma delimited. Global: connect,send,receive,issue,mine,admin,activate,create or per-asset: asset-identifier.issue,admin,activate,send,receive or per-stream: stream-identifier.write,activate,admin
                </para> 
            </param>
            <param name="native_amount">native currency amount to send. eg 0.1. Default - 0</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.RevokeAsync(System.String,System.String,System.Double,System.String,System.String)">
            <summary>
            
            Revoke permission from a given address. The amount is a real. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="addresses">The addresses(es) to revoke permissions from</param>
            <param name="permissions">
                <para>
                    Permission strings, comma delimited. Global: connect,send,receive,issue,mine,admin,activate,create or per-asset: asset-identifier.issue,admin,activate,send,receive or per-stream: stream-identifier.write,activate,admin
                </para> 
            </param>
            <param name="native_amount">native currency amount to send. eg 0.1. Default - 0</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.RevokeFromAsync(System.String,System.String,System.String,System.String,System.String,System.Double,System.String,System.String)">
            <summary>
            
            Revoke permissions using specific address. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="from_address">Addresses used for revoke.</param>
            <param name="to_addresses">The addresses(es) to revoke permissions from</param>
            <param name="permissions">
                <para>
                    Permission strings, comma delimited. Global: connect,send,receive,issue,mine,admin,activate,create or per-asset: asset-identifier.issue,admin,activate,send,receive or per-stream: stream-identifier.write,activate,admin
                </para> 
            </param>
            <param name="native_amount">native currency amount to send. eg 0.1. Default - 0</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.RevokeFromAsync(System.String,System.String,System.String,System.Double,System.String,System.String)">
            <summary>
            
            Revoke permissions using specific address. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="from_address">Addresses used for revoke.</param>
            <param name="to_addresses">The addresses(es) to revoke permissions from</param>
            <param name="permissions">
                <para>
                    Permission strings, comma delimited. Global: connect,send,receive,issue,mine,admin,activate,create or per-asset: asset-identifier.issue,admin,activate,send,receive or per-stream: stream-identifier.write,activate,admin
                </para> 
            </param>
            <param name="native_amount">native currency amount to send. eg 0.1. Default - 0</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendAsync(System.String,System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            
            Send an amount (or several asset amounts) to a given address. The amount is a real and is rounded to the nearest 0.00000001. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="to_address">The address to send to</param>
            <param name="amount_or_asset_quantities">(numeric, required) The amount in native currency to send. eg 0.1 or (object, required) A json object of assets to send</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendAsync(System.String,System.Object,System.String,System.String)">
            <summary>
            
            Send an amount (or several asset amounts) to a given address. The amount is a real and is rounded to the nearest 0.00000001. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="to_address">The address to send to</param>
            <param name="amount_or_asset_quantities">(numeric, required) The amount in native currency to send. eg 0.1 or (object, required) A json object of assets to send</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendAssetAsync(System.String,System.String,System.String,System.String,System.Int32,System.Double,System.String,System.String)">
            <summary>
            
            Send asset amount to a given address. The amounts are real. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="to_address">The address to send to</param>
            <param name="asset_identifier">One of the following: issue txid, asset reference, asset name</param>
            <param name="asset_quantity">Asset quantity to send. eg 0.1</param>
            <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendAssetAsync(System.String,System.String,System.Int32,System.Double,System.String,System.String)">
            <summary>
            
            Send asset amount to a given address. The amounts are real. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="to_address">The address to send to</param>
            <param name="asset_identifier">One of the following: issue txid, asset reference, asset name</param>
            <param name="asset_quantity">Asset quantity to send. eg 0.1</param>
            <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendAssetFromAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Double,System.String,System.String)">
            <summary>
            
            Send an asset amount using specific address. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="from_address">Address to send from</param>
            <param name="to_address">The address to send to</param>
            <param name="asset_identifier">One of the following: issue txid, asset reference, asset name</param>
            <param name="asset_quantity">Asset quantity to send. eg 0.1</param>
            <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendAssetFromAsync(System.String,System.String,System.String,System.Int32,System.Double,System.String,System.String)">
            <summary>
            
            Send an asset amount using specific address. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="from_address">Address to send from</param>
            <param name="to_address">The address to send to</param>
            <param name="asset_identifier">One of the following: issue txid, asset reference, asset name</param>
            <param name="asset_quantity">Asset quantity to send. eg 0.1</param>
            <param name="native_amount">native currency amount to send. eg 0.1, Default: minimum-per-output</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendFromAsync(System.String,System.String,System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            
            Send an amount (or several asset amounts) using specific address. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="from_address">Address to send from</param>
            <param name="to_address">The address to send to</param>
            <param name="amount_or_asset_quantities">(numeric, required) The amount in native currency to send. eg 0.1 or (object, required) A json object of assets to send</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendFromAsync(System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            
            Send an amount (or several asset amounts) using specific address. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="from_address">Address to send from</param>
            <param name="to_address">The address to send to</param>
            <param name="amount_or_asset_quantities">(numeric, required) The amount in native currency to send. eg 0.1 or (object, required) A json object of assets to send</param>
            <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
            <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendFromAccountAsync(System.String,System.String,System.String,System.String,System.Object,System.Int32,System.String,System.String)">
             <summary>
             
             Sent an amount from an account to a address. The amount is a real and is rounded to the nearest 0.00000001. Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="from_account">The name of the account to send funds from. May be the default account using "".</param>
             <param name="to_address">The address to send funds to</param>
             <param name="amount">The amount in native currency. (transaction fee is added on top)</param>
             <param name="min_conf">Only use funds with at least this many confirmations</param>
             <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
             <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendFromAccountAsync(System.String,System.String,System.Object,System.Int32,System.String,System.String)">
             <summary>
             
             Sent an amount from an account to a address. The amount is a real and is rounded to the nearest 0.00000001. Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="from_account">The name of the account to send funds from. May be the default account using "".</param>
             <param name="to_address">The address to send funds to</param>
             <param name="amount">The amount in native currency. (transaction fee is added on top)</param>
             <param name="min_conf">Only use funds with at least this many confirmations</param>
             <param name="comment">A comment used to store what the transaction is for. This is not part of the transaction, just kept in your wallet.</param>
             <param name="comment_to">A comment to store the name of the person or organization to which you're sending the transaction. This is not part of the transaction, just kept in your wallet.</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendManyAsync(System.String,System.String,System.String,System.Object[],System.Int32,System.String)">
             <summary>
             
             Send multiple times. Amounts are double-precision floating point numbers. Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="from_account">The account to send the funds from, can be "" for the default account</param>
             <param name="amounts">A json object with addresses and amounts</param>
             <param name="min_conf">Only use the balance confirmed at least this many times</param>
             <param name="comment">A comment</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendManyAsync(System.String,System.Object[],System.Int32,System.String)">
             <summary>
             
             Send multiple times. Amounts are double-precision floating point numbers. Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="from_account">The account to send the funds from, can be "" for the default account</param>
             <param name="amounts">A json object with addresses and amounts</param>
             <param name="min_conf">Only use the balance confirmed at least this many times</param>
             <param name="comment">A comment</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendWithDataAsync(System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            
            Send an amount (or several asset amounts) to a given address with appended metadata. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="to_address">The address to send to</param>
            <param name="amount_or_asset_quantities">The amount in native currency to send. eg 0.1 or a json object of assets to send</param>
            <param name="data_or_publish_new_stream_item">(string or object, required) Data, see help data-with for details.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendWithDataAsync(System.String,System.Object,System.Object)">
            <summary>
            
            Send an amount (or several asset amounts) to a given address with appended metadata. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="to_address">The address to send to</param>
            <param name="amount_or_asset_quantities">The amount in native currency to send. eg 0.1 or a json object of assets to send</param>
            <param name="data_or_publish_new_stream_item">(string or object, required) Data, see help data-with for details.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendWithDataFromAsync(System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            
            Send an amount (or several asset amounts) using specific address. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="from_address">Address to send from.</param>
            <param name="to_address">The address to send to</param>
            <param name="amount_or_asset_quantities">The amount in native currency to send. eg 0.1 or a json object of assets to send</param>
            <param name="data_or_publish_new_stream_item">(string or object, required) Data, see help data-with for details.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SendWithDataFromAsync(System.String,System.String,System.Object,System.Object)">
            <summary>
            
            Send an amount (or several asset amounts) using specific address. Requires wallet passphrase to be set with walletpassphrase call.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="from_address">Address to send from.</param>
            <param name="to_address">The address to send to</param>
            <param name="amount_or_asset_quantities">The amount in native currency to send. eg 0.1 or a json object of assets to send</param>
            <param name="data_or_publish_new_stream_item">(string or object, required) Data, see help data-with for details.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SetAccountAsync(System.String,System.String,System.String,System.String)">
            <summary>
            
            Sets the account associated with the given address.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="address">The address to be associated with an account</param>
            <param name="account">The account to assign the address to</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SetAccountAsync(System.String,System.String)">
            <summary>
            
            Sets the account associated with the given address.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="address">The address to be associated with an account</param>
            <param name="account">The account to assign the address to</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SetTxFeeAsync(System.String,System.String,System.Double)">
            <summary>
            
            Set the transaction fee per kB.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="amount">The transaction fee in native currency/kB rounded to the nearest 0.00000001</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SetTxFeeAsync(System.Double)">
            <summary>
            
            Set the transaction fee per kB.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="amount">The transaction fee in native currency/kB rounded to the nearest 0.00000001</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SignMessageAsync(System.String,System.String,System.String,System.String)">
             <summary>
             
             Sign a message with the private key of an address. Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <param name="address_or_privkey">The address to use for the private key or the private key (see dumpprivkey and createkeypairs)</param>
             <param name="message">The message to create a signature of</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SignMessageAsync(System.String,System.String)">
             <summary>
             
             Sign a message with the private key of an address. Requires wallet passphrase to be set with walletpassphrase call.
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <param name="address_privkey">The address to use for the private key or the private key (see dumpprivkey and createkeypairs)</param>
             <param name="message">The message to create a signature of</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SubscribeAsync(System.String,System.String,System.Object,System.Boolean,System.String)">
            <summary>
            
            <para>Subscribes to a stream or asset.</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="entity_identifiers">One of: create txid, stream reference, stream name or one of: issue txid, asset reference, asset name or A json array of stream or asset identifiers</param>
            <param name="rescan">Rescan the wallet for transactions. Default true</param>
            <param name="parameters">Available only in Enterprise Edition</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.SubscribeAsync(System.Object,System.Boolean,System.String)">
            <summary>
            
            <para>Subscribes to a stream or asset.</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="entity_identifiers">One of: create txid, stream reference, stream name or one of: issue txid, asset reference, asset name or A json array of stream or asset identifiers</param>
            <param name="rescan">Rescan the wallet for transactions. Default true</param>
            <param name="parameters">Available only in Enterprise Edition</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.TrimSubscribeAsync(System.String,System.String,System.Object,System.String)">
            <summary>
            
            Available only in Enterprise Edition. Removes indexes from subscriptions to the stream.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="streams">One of: create txid, stream reference, stream name or a json array of stream identifiers</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.TrimSubscribeAsync(System.Object,System.String)">
            <summary>
            
            Available only in Enterprise Edition. Removes indexes from subscriptions to the stream.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="streams">One of: create txid, stream reference, stream name or a json array of stream identifiers</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.TxOutToBinaryCacheAsync(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            Stores metadata of transaction output in binary cache.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="identifier">Binary cache item identifier</param>
            <param name="txid">The transaction id</param>
            <param name="vout">vout value</param>
            <param name="count_bytes">Number of bytes to return</param>
            <param name="start_byte">start from specific byte</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.TxOutToBinaryCacheAsync(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            Stores metadata of transaction output in binary cache.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="identifier">Binary cache item identifier</param>
            <param name="txid">The transaction id</param>
            <param name="vout">vout value</param>
            <param name="count_bytes">Number of bytes to return</param>
            <param name="start_byte">start from specific byte</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.UnsubscribeAsync(System.String,System.String,System.Object,System.Boolean)">
            <summary>
            
            Unsubscribes from the stream.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="entity_identifiers">Stream identifier - one of the following: stream txid, stream reference, stream name or Asset identifier - one of the following: asset txid, asset reference, asset name or a json array of stream or asset identifiers </param>
            <param name="purge"> Purge all offchain data for the stream</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.UnsubscribeAsync(System.Object,System.Boolean)">
            <summary>
            
            Unsubscribes from the stream.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="entity_identifiers">Stream identifier - one of the following: stream txid, stream reference, stream name or Asset identifier - one of the following: asset txid, asset reference, asset name or a json array of stream or asset identifiers </param>
            <param name="purge"> Purge all offchain data for the stream</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.WalletLockAsync(System.String,System.String)">
             <summary>
             
             Removes the wallet encryption key from memory, locking the wallet.
             <para>After calling this method, you will need to call walletpassphrase again before being able to call any methods which require the wallet to be unlocked.</para>
             <para>Blockchain name is explicitly passed as parameter.</para>
            
             </summary>
             <param name="blockchainName">Name of target blockchain</param>
             <param name="id">String value to identify this transaction</param>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.WalletLockAsync">
             <summary>
             
             Removes the wallet encryption key from memory, locking the wallet.
             <para>After calling this method, you will need to call walletpassphrase again before being able to call any methods which require the wallet to be unlocked.</para>
             <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.WalletPassphraseAsync(System.String,System.String,System.String,System.Int32)">
            <summary>
            
            Stores the wallet decryption key in memory for 'timeout' seconds.
            <para>This is needed prior to performing transactions related to private keys such as sending assets</para>
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="passphrase">The wallet passphrase</param>
            <param name="time_out">The time to keep the decryption key in seconds.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.WalletPassphraseAsync(System.String,System.Int32)">
            <summary>
            
            Stores the wallet decryption key in memory for 'timeout' seconds.
            <para>This is needed prior to performing transactions related to private keys such as sending assets</para>
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="passphrase">The wallet passphrase</param>
            <param name="time_out">The time to keep the decryption key in seconds.</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.WalletPassphraseChangeAsync(System.String,System.String,System.String,System.String)">
            <summary>
            
            Changes the wallet passphrase from 'oldpassphrase' to 'newpassphrase'.
            <para>Blockchain name is explicitly passed as parameter.</para>
            
            </summary>
            <param name="blockchainName">Name of target blockchain</param>
            <param name="id">String value to identify this transaction</param>
            <param name="old_passphrase">The current passphrase</param>
            <param name="new_passphrase">The new passphrase</param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient.WalletPassphraseChangeAsync(System.String,System.String)">
            <summary>
            
            Changes the wallet passphrase from 'oldpassphrase' to 'newpassphrase'.
            <para>Blockchain name is inferred from BlockchainProfileOptions properties.</para>
            
            </summary>
            <param name="old_passphrase">The current passphrase</param>
            <param name="new_passphrase">The new passphrase</param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension">
            <summary>
            Extension methods derived from the WalletRpcClient contract and WalletRPCClient implementation
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateStream(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.StreamEntity)">
            <summary>
            Create stream; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="streamEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateStream(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.StreamEntity)">
            <summary>
            Create stream; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="streamEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateStreamFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.StreamEntity)">
            <summary>
            Create stream from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="streamEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateStreamFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.StreamEntity)">
            <summary>
            Create stream from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="streamEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateUpgrade(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.UpgradeEntity)">
            <summary>
            Create upgrade; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="upgradeEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateUpgrade(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.UpgradeEntity)">
            <summary>
            Create upgrade; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="upgradeEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateUpgradeFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.UpgradeEntity)">
            <summary>
            Create upgrade from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="upgradeEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateUpgradeFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.UpgradeEntity)">
            <summary>
            Create upgrade from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="upgradeEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateStreamFilter(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.StreamFilterEntity)">
            <summary>
            Create stream filter; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="streamFilterEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateStreamFilter(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.StreamFilterEntity)">
            <summary>
            Create stream filter; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="streamFilterEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateStreamFilterFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.StreamFilterEntity)">
            <summary>
            Create stream filter from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="streamFilterEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateStreamFilterFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.StreamFilterEntity)">
            <summary>
            Create stream filter from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="streamFilterEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateTxFilter(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.TxFilterEntity)">
            <summary>
            Create transaction filter; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="txFilterEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateTxFilter(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.TxFilterEntity)">
            <summary>
            Create transaction filter; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="txFilterEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateTxFilterFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.TxFilterEntity)">
            <summary>
            Create transaction filter from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="txFilterEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.CreateTxFilterFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.TxFilterEntity)">
            <summary>
            Create transaction filter from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="txFilterEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKey(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.PublishEntity)">
            <summary>
            Create stream item; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKey(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataCached})">
            <summary>
            Create stream item; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKey(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataJson})">
            <summary>
            Create stream item; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKey(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataText})">
            <summary>
            Create stream item; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeys(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.PublishEntity)">
            <summary>
            Create stream item; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeys(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataCached})">
            <summary>
            Create stream item; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeys(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataJson})">
            <summary>
            Create stream item; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeys(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataText})">
            <summary>
            Create stream item; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKey(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity)">
            <summary>
            Create stream item; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKey(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataCached})">
            <summary>
            Create stream item; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKey(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataJson})">
            <summary>
            Create stream item; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKey(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataText})">
            <summary>
            Create stream item; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeys(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity)">
            <summary>
            Create stream item; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeys(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataCached})">
            <summary>
            Create stream item; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeys(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataJson})">
            <summary>
            Create stream item; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeys(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataText})">
            <summary>
            Create stream item; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeyFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity)">
            <summary>
            Create stream item from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeyFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataCached})">
            <summary>
            Create stream item from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeyFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataJson})">
            <summary>
            Create stream item from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeyFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataText})">
            <summary>
            Create stream item from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeysFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity)">
            <summary>
            Create stream item from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeysFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataCached})">
            <summary>
            Create stream item from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeysFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataJson})">
            <summary>
            Create stream item from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeysFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataText})">
            <summary>
            Create stream item from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeyFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity)">
            <summary>
            Create stream item from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeyFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataCached})">
            <summary>
            Create stream item from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeyFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataJson})">
            <summary>
            Create stream item from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeyFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataText})">
            <summary>
            Create stream item from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeysFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity)">
            <summary>
            Create stream item from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeysFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataCached})">
            <summary>
            Create stream item from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeysFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataJson})">
            <summary>
            Create stream item from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishStreamItemKeysFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishEntity{MCWrapper.RPC.Ledger.Entities.DataText})">
            <summary>
            Create stream item from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="streamItemEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishMultiStreamItems(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,MCWrapper.RPC.Ledger.Entities.PublishMultiEntity)">
            <summary>
            Publish multiple stream items; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="publishMultiEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishMultiStreamItems(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishMultiEntity)">
            <summary>
            Publish multiple stream items; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="publishMultiEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishMultiStreamItemsFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,MCWrapper.RPC.Ledger.Entities.PublishMultiEntity)">
            <summary>
            Publish multiple stream items from an address; Blockchain name is inferred
            </summary>
            <param name="client"></param>
            <param name="fromAddress"></param>
            <param name="publishMultiEntity"></param>
            <returns></returns>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClientExtension.PublishMultiStreamItemsFrom(MCWrapper.RPC.Ledger.Clients.Wallet.WalletRpcClient,System.String,System.String,System.String,MCWrapper.RPC.Ledger.Entities.PublishMultiEntity)">
            <summary>
            Publish multiple stream items from an address; Blockchain name is explicit
            </summary>
            <param name="client"></param>
            <param name="blockchainName"></param>
            <param name="id"></param>
            <param name="fromAddress"></param>
            <param name="publishMultiEntity"></param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.AssetEntity">
            <summary>
            Asset data model used for creating and transmitting entities to the blockchain network
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.AssetEntity.Name">
            <summary>
            Name of the new blockchain Asset
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.AssetEntity.IsOpen">
            <summary>
            Is the Asset open to reeive more units?
            Default value: True;
            True if follow-on issues are allowed
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.AssetEntity.Restrictions">
            <summary>
            Restrictions to place on this blockchain Asset;
            Possible valus: send,receive
            Comma delimited list of restrictions e.g. "send,receive"
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.AssetEntity.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.AssetEntity.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.AssetEntity.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="isOpen"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.AssetEntity.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="isOpen"></param>
            <param name="restrictions"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.AssetEntity.GetUUID">
            <summary>
            Generate a 22-character UUID;
            Want to use your own UUID? Go ahead;
            This method can be called to assign a UUID to the Name property 
            and will return that same UUID string to the subscriber when called
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.AssetEntity.SetEntityNameAsUUID">
            <summary>
            Generate a 22-character UUID;
            Want to use your own UUID? Go ahead;
            This method can be called to assign a UUID to the Name property 
            and will return that same UUID string to the subscriber when called
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.BaseEntity.ChainEntity">
            <summary>
            BaseChainEntity will be inherited by Asset, Stream, and StreamFilter blockchain entity models
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.BaseEntity.ChainEntity.Name">
            <summary>
            Stream name, if not "" should be unique.
            <para>
                Use the SetRandomName() method to assign a random UUID value to Name
            </para>
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.BaseEntity.ChainEntity.EntityType">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.BaseEntity.ChainEntity.#ctor">
            <summary>
            Create a new BaseChainEntity instance with no parameters
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.BaseEntity.ChainEntity.#ctor(System.String)">
            <summary>
            Create a new BaseChainEntity instance with name parameter
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.BaseEntity.ChainEntity.#ctor(System.String,System.String)">
            <summary>
            Create a new BaseChainEntity with name and entityType parameters
            </summary>
            <param name="name"></param>
            <param name="entityType"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.BaseEntity.ChainEntity.SetEntityNameAsUUID">
            <summary>
            Generate a 22-character UUID;
            Want to use your own UUID? Go ahead;
            This method can be called to assign a UUID to the Name property 
            and will return that same UUID string to the subscriber when called
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.BaseEntity.ChainEntity.GetUUID">
            <summary>
            Generate a 22-character UUID;
            Want to use your own UUID? Go ahead;
            This method can be called to assign a UUID to the Name property 
            and will return that same UUID string to the subscriber when called
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.PublishEntity">
            <summary>
            Typed object model representing a new blockchain stream item 
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.PublishEntity.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Create a new PublishEntity instance with string type as Data object and accepts a single stream item key
            </summary>
            <param name="streamIdentifier"></param>
            <param name="key"></param>
            <param name="data"></param>
            <param name="options"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.PublishEntity.#ctor(System.String,System.String[],System.String,System.String)">
            <summary>
            Create a new PublishEntity instance with string type as Data objec and accepts a multiple stream item keys
            </summary>
            <param name="streamIdentifier"></param>
            <param name="keys"></param>
            <param name="data"></param>
            <param name="options"></param>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.PublishEntity`1">
            <summary>
            Typed object model representing a new blockchain stream item 
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishEntity`1.StreamIdentifer">
            <summary>
            MultiChain Core Stream identifier - one of the following: stream txid, stream reference, stream name
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishEntity`1.Key">
            <summary>
            Item key
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishEntity`1.Keys">
            <summary>
             Array of item keys
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishEntity`1.Data">
            <summary>
            Data hex string
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishEntity`1.Options">
            <summary>
            Should be "offchain" or omitted
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.PublishEntity`1.#ctor(System.String,System.String,`0,System.String)">
            <summary>
             Create a new StreamItemEntity instance with the parameters
            </summary>
            <param name="streamIdentifier">Stream identifier - one of the following: stream txid, stream reference, stream name.</param>
            <param name="key">Item key</param>
            <param name="data">Data hex string</param>
            <param name="options">Should be "offchain" or omitte</param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.PublishEntity`1.#ctor(System.String,System.String[],`0,System.String)">
            <summary>
             Create a new StreamItemEntity instance with the parameters
            </summary>
            <param name="streamIdentifier">Stream identifier - one of the following: stream txid, stream reference, stream name.</param>
            <param name="keys">Array of item keys</param>
            <param name="data">Data hex string</param>
            <param name="options">Should be "offchain" or omitte</param>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.PublishMultiEntity">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiEntity.StreamIdentifier">
            <summary>
            Stream identifier - one of: create txid, stream reference, stream name. Default for items if "for" field is omitted
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiEntity.Items">
            <summary>
            Array of PublishMultiItemEntity objects
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiEntity.Options">
            <summary>
            Should be "offchain" or omitted. Default for items if "options" field is omitted
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeyEntity">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeyEntity.For">
            <summary>
            Stream identifier, uses default if omitted
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeyEntity.Options">
            <summary>
            Should be "offchain" or omitted
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeyEntity.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeyEntity.DataHex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeysEntity">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeysEntity.For">
            <summary>
            Stream identifier, uses default if omitted
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeysEntity.Options">
            <summary>
            Should be "offchain" or omitted
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeysEntity.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeysEntity.DataHex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeyEntity`1">
            <summary>
            
            </summary>
            <typeparam name="DataItemType">Should be string, DataText, DataCached, or DataJson types</typeparam>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeyEntity`1.For">
            <summary>
            Stream identifier, uses default if omitted
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeyEntity`1.Options">
            <summary>
            Should be "offchain" or omitted
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeyEntity`1.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeyEntity`1.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeysEntity`1">
            <summary>
            
            </summary>
            <typeparam name="DataItemType">Should be string, DataText, DataCached, or DataJson types</typeparam>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeysEntity`1.For">
            <summary>
            Stream identifier, uses default if omitted
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeysEntity`1.Options">
            <summary>
            Should be "offchain" or omitted
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeysEntity`1.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.PublishMultiItemKeysEntity`1.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.StreamEntity">
            <summary>
            Typed object model representing a new blockchain stream
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.StreamEntity.Open">
            <summary>
            Allow anyone to publish in this stream
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.StreamEntity.Restrictions">
            <summary>
            Stream restrictions
            <para>
                Stream restrictions, comma delimited. Possible values: write,offchain,onchain
            </para>
            <para>
                RestrictTypes may be passed individually via AddRestriction to append values
            </para>
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.StreamEntity.CustomFields">
            <summary>
             a json object with custom fields
             <para>
                The key is the parameter name, the value is parameter value
            </para>
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamEntity.#ctor">
            <summary>
            Create a new StreamChainEntity instance
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamEntity.#ctor(System.String)">
            <summary>
            Creaes a new StreamChainEntity instance with name parameter
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamEntity.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new StreamChainEntity instance with name and open parameters
            </summary>
            <param name="name"></param>
            <param name="open"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamEntity.#ctor(System.String,System.Boolean,MCWrapper.RPC.Ledger.Entities.StreamRestrictions)">
            <summary>
            Creates a new StreamChainEntity instance with name, open, and restrictions parameters
            </summary>
            <param name="name"></param>
            <param name="open"></param>
            <param name="restrictions"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamEntity.#ctor(System.String,System.Boolean,MCWrapper.RPC.Ledger.Entities.StreamRestrictions,System.Collections.Concurrent.ConcurrentDictionary{System.String,System.String})">
            <summary>
            Creates a new StreamChainEntity instance with name, open, restrictions, and customerFields parameters
            </summary>
            <param name="name"></param>
            <param name="open"></param>
            <param name="restrictions"></param>
            <param name="customFields"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamEntity.AddOrUpdateCustomField(System.String,System.String)">
            <summary>
            Adds or updates a key value pair
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamEntity.RemoveCustomField(System.String)">
            <summary>
            Removes custom field key value pair
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.StreamRestrictions">
            <summary>
            An easy to use object for passing stream permissions
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamRestrictions.#ctor">
            <summary>
            Create a new StreamRestrictions instance;
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamRestrictions.#ctor(System.String[],System.Boolean)">
            <summary>
            Create a new StreamRestrictions instance;
            You can use struct RestrictTypes to populate the string[]
            </summary>
            <param name="restrictTypes">You can use struct RestrictTypes to populate the property</param>
            <param name="salted">Include "salted":true in restrictions to include random salt in all offchain chunks</param>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.StreamRestrictions.Restrict">
            <summary>
            Restrict value to be passed during stream creation
             <para>
                Restrict property is read-only and is an empty string by default unless a restrictTypes array is passed to the object's constructor, to change it's 
                value use the AddRestriction(StreamRestrictTypes restriction) / RemoveRestriction(StreamRestrictTypes restriction) methods available from this object.
            </para>
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.StreamRestrictions.Salted">
            <summary>
            Include "salted":true in restrictions to include random salt in all offchain chunks, 
            to protect against dictionary attacks and ensure each chunk hash is unique. 
            Read-restricted streams automatically use salting and disallow on-chain items. 
            <para>
                Salted property is read-only and is True by default, to change it's boolean 
                state use the SetAsSalted() / SetAsUnSalted() methods available from this object.
            </para>
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamRestrictions.AddRestriction(System.String)">
            <summary>
            Add RestrictionType to Restrictions
            <para>
                Include "salted" as true(default) in restrictions to include random salt in all offchain chunks, 
                to protect against dictionary attacks and ensure each chunk hash is unique. 
                Read-restricted streams automatically use salting and disallow on-chain items. 
            </para>
            </summary>
            <param name="restriction"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamRestrictions.RemoveRestriction(System.String)">
            <summary>
            Remove RestrictionType from Restrictions KeyValuePair
            </summary>
            <param name="restriction"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamRestrictions.SetAsSalted">
            <summary>
            Set Salted property to True
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamRestrictions.SetAsUnSalted">
            <summary>
            Set Salted property to False
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.StreamRestrictTypes">
            <summary>
            Struct contains type of Restrictions that can be passed using the Create method;
            Generally used for creating and managing blockchain Streams;
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.StreamRestrictTypes.OffChain">
            <summary>
            OffChain disallows publishing off-chain items;
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.StreamRestrictTypes.OnChain">
            <summary>
            OnChain disallows publishing on-chain items;
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.StreamRestrictTypes.Write">
            <summary>
            Write restricts writing to addresses with per-stream write permissions;
            (Writing and reading in streams with read permissions requires MultiChain Enterprise,
            but any node can create these streams and manage their permissions.) 
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.StreamRestrictTypes.Read">
            <summary>
            Read restricts reading to addresses with per-stream read permissions;
            (Writing and reading in streams with read permissions requires MultiChain Enterprise,
            but any node can create these streams and manage their permissions.) 
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.StreamFilterEntity">
            <summary>
            StreamFilterEntity is POCO representation of a Stream filter for MultiChain Core
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.StreamFilterEntity.StreamFilterRestrictions">
            <summary>
            An easy to use object for passing stream filter permissions
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.StreamFilterEntity.Restrictions">
            <summary>
            StreamFilterRestrictions property
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.StreamFilterEntity.JavaScriptCode">
            <summary>
            Plain string value in JavaScript syntax
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamFilterEntity.#ctor">
            <summary>
            Create a new StreamFilterEntity
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamFilterEntity.#ctor(System.String)">
            <summary>
            Creaes a new StreamEntity instance with name parameter
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamFilterEntity.#ctor(System.String,MCWrapper.RPC.Ledger.Entities.StreamFilterEntity.StreamFilterRestrictions)">
            <summary>
            Creaes a new StreamEntity instance with name and restrictions parameter
            </summary>
            <param name="name"></param>
            <param name="restrictions"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.StreamFilterEntity.#ctor(System.String,MCWrapper.RPC.Ledger.Entities.StreamFilterEntity.StreamFilterRestrictions,System.String)">
            <summary>
            Creaes a new StreamEntity instance with name and restrictions parameter
            </summary>
            <param name="name"></param>
            <param name="restrictions"></param>
            <param name="javaScriptCode"></param>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.DataJson">
            <summary>
            JSON data object
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.DataJson.Json">
            <summary>
            Needs to be a valid JSON object
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.DataJson.#ctor">
            <summary>
            Create a new DataJson instance
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.DataJson.#ctor(System.Object)">
            <summary>
            Create a new DataJson instance with parameter
            </summary>
            <param name="json"></param>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.DataText">
            <summary>
             Text data object
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.DataText.Text">
            <summary>
             Data string (plain text)
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.DataText.#ctor">
            <summary>
            Create a new DataText instance
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.DataText.#ctor(System.String)">
            <summary>
            Create a new DataText instance with parameter
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.DataCached">
            <summary>
            Binary raw data created with appendbinarycache
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.DataCached.Cache">
            <summary>
            Binary cache identifier
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.DataCached.#ctor">
            <summary>
            Create a new DataCached instance
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.DataCached.#ctor(System.String)">
            <summary>
            reate a new DataCached instance with parameter
            </summary>
            <param name="cache"></param>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.TxFilterEntity">
            <summary>
            TxFilterEntity is POCO representation of a Transaction (Tx) filter for MultiChain Core
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.TxFilterEntity.JavaScriptCode">
            <summary>
            Plain string value in JavaScript syntax
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.TxFilterEntity.Restrictions">
            <summary>
            TxFilterRestrictions property
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.TxFilterEntity.#ctor">
            <summary>
            Create a new TxFilterEntity instance
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.TxFilterEntity.#ctor(System.String)">
            <summary>
            Create a new TxFilterEntity instance with name parameter
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.TxFilterEntity.#ctor(System.String,MCWrapper.RPC.Ledger.Entities.TxFilterRestrictions)">
            <summary>
            Create a new TxFilterEntity instance with name and restrictions parameters
            </summary>
            <param name="name"></param>
            <param name="restrictions"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.TxFilterEntity.#ctor(System.String,MCWrapper.RPC.Ledger.Entities.TxFilterRestrictions,System.String)">
            <summary>
            Create a new TxFilterEntity instance with name, restrictions, and javaScriptCode parameters
            </summary>
            <param name="name"></param>
            <param name="restrictions"></param>
            <param name="javaScriptCode"></param>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.TxFilterRestrictions">
            <summary>
            An easy to use object for passing transaction (Tx) filter permissions
            Must pass string[] or plain string value
            <para> "for" (string, optional) Asset/stream identifier - one of: create txid, stream reference, stream name. </para>
            <para> or </para>
            <para> "for" (array, optional) A json array of asset/stream string identifiers. </para>
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.TxFilterRestrictions.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.TxFilterRestrictions.#ctor(System.Object)">
            <summary>
            Create a new TxFilterRestrictions; _for value is required.
            Must pass string[] or plain string value passed to constructor
            <para> "for" (string, optional) Asset/stream identifier - one of: create txid, stream reference, stream name. </para>
            <para> or </para>
            <para> "for" (array, optional) A json array of asset/stream string identifiers. </para>
            </summary>
            <param name="_for"></param>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.TxFilterRestrictions._For">
            <summary>
            <para> "for" (string, optional) Asset/stream identifier - one of: create txid, stream reference, stream name. </para>
            <para> or </para>
            <para> "for" (array, optional) A json array of asset/stream string identifiers. </para>
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.TxFilterRestrictions.ValidateTypeInput(System.Object)">
            <summary>
            Validate the Type provided by the subscriber; We only accept string or string[] data types
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.UpgradeEntity">
            <summary>
            UpgradeEntity is POCO representation of an Upgrade for MultiChain Core
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.UpgradeEntity.CustomFields">
            <summary>
            Upgrade customer fields property
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.UpgradeEntity.Open">
            <summary>
            Readonly and initialized with False value;
            <para>
                Should always be false for UpgradeEntity types
            </para>
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.UpgradeEntity.#ctor(System.String,MCWrapper.RPC.Ledger.Entities.UpgradeCustomFields)">
            <summary>
            Create a new UpgradeEntity instance
            </summary>
            <param name="name"></param>
            <param name="customFields"></param>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.UpgradeCustomFields">
            <summary>
            Custom fields object used to build a proper MultiChain upgrade request
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Entities.UpgradeCustomFields.Parameters">
            <summary>
            UpgradeCustomFields parameter key valu pairs
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeCustomFields.paramKeyWhitelist">
            <summary>
            Whitelist of valid MultiChain Core upgrade parameters
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.UpgradeCustomFields.#ctor(System.Int32,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create a new UpgradeCustomFields instance
            </summary>
            <param name="protocolVersion"></param>
            <param name="paramKey"></param>
            <param name="paramValue"></param>
            <param name="startBlock"></param>
            <param name="additionalParameters"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.UpgradeCustomFields.AddOrUpdateParameter(System.String,System.Int32)">
            <summary>
            Add or update internal ConcurrentDictionary key value
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Entities.UpgradeCustomFields.RemoveParameter(System.String)">
            <summary>
            If key exists within the internal ConcurrentDictionary then we remove the key value pair;
            Otherwise no action is taken since we do verify if the parameter actually exists before attempting
            to remove from the ConcurrentDictionary collection.
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys">
            <summary>
            Struct defines all available MultiChain upgrade parameter keys
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.StartBlock">
            <summary>
            (optional, default 0) Block to apply from
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.ProtocolVersion">
            <summary>
            (optional) Protocol version to upgrade to
            <para>Upgrade parameter represented as a plain string "protocol-version"</para>
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.MaxStdTxSizeKey">
            <summary>
            Upgrade parameter represented as a plain string "max-std-tx-size"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.MaximumBlockSizeKey">
            <summary>
            Upgrade parameter represented as a plain string "maximum-block-size"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.TargetBlockTimeKey">
            <summary>
            Upgrade parameter represented as a plain string "target-block-time"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.MaxStdOpReturnsCountKey">
            <summary>
            Upgrade parameter represented as a plain string "max-std-op-returns-count"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.MaxStdOpReturnSizeKey">
            <summary>
            Upgrade parameter represented as a plain string "max-std-op-return-size"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.MaxStdOpDropsCountKey">
            <summary>
            Upgrade parameter represented as a plain string "max-std-op-drops-count"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.MaxStdElementSizeKey">
            <summary>
            Upgrade parameter represented as a plain string "max-std-element-size"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.AnyoneCanConnectKey">
            <summary>
            Upgrade parameter represented as a plain string "anyone-can-connect"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.AnyoneCanSend">
            <summary>
            Upgrade parameter represented as a plain string "anyone-can-send"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.AnyoneCanReceive">
            <summary>
            Upgrade parameter represented as a plain string "anyone-can-receive"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.AnyoneCanReceiveEmpty">
            <summary>
            Upgrade parameter represented as a plain string "anyone-can-receiveempty"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.AnyoneCanIssue">
            <summary>
            Upgrade parameter represented as a plain string "anyone-can-issue"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.AnyoneCanCreate">
            <summary>
            Upgrade parameter represented as a plain string "anyone-can-create"
            </summary>
        </member>
        <member name="F:MCWrapper.RPC.Ledger.Entities.UpgradeParameterKeys.AnyoneCanActivate">
            <summary>
            Upgrade parameter represented as a plain string "anyone-can-activate"
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoResult.IssueTxid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoResult.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoResult.Multiple">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoResult.Units">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoResult.Open">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoResult.Restrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoResult.Details">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoResult.IssueQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoResult.IssueRaw">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoResult.Issues">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoRestrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoRestrict.Send">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoRestrict.Receive">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoDetails">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoIssue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoIssue.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoIssue.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoIssue.Raw">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoIssue.Details">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoIssue.Issuers">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetAssetInfoDetails1">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.Chain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.ChainName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.Protocol">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.SetupBlocks">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.ReIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.Blocks">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.Headers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.BestBlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.Difficulty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.VerificationProgress">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.Chainwork">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockchainInfoResult.ChainRewards">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Hash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Miner">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Merkleroot">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Tx">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Nonce">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Bits">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Difficulty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.Chainwork">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.PreviousBlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVerboseResult.NextBlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Hash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Miner">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Merkleroot">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Tx">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Nonce">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Bits">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Difficulty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.Chainwork">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.PreviousBlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV1.NextBlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Hash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Miner">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Merkleroot">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Tx">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Nonce">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Bits">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Difficulty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.Chainwork">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.PreviousBlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV2.NextBlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV2">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV2.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV2.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Hash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Miner">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Merkleroot">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Tx">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Nonce">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Bits">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Difficulty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.Chainwork">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.PreviousBlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV3.NextBlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV3">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV3.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV3.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV3.Locktime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV3.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Hash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Miner">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Merkleroot">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Tx">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Nonce">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Bits">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Difficulty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.Chainwork">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.PreviousBlockhash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockResultV4.NextBlockhash">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV4">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV4.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV4.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV4.LockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV4.Vin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV4.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockTxV4.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVinV4">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVinV4.CoinBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVinV4.Sequence">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVinV4.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVinV4.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVinV4.ScriptSig">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockScriptsigV4">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockScriptsigV4.Asm">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockScriptsigV4.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVoutV4">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVoutV4.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVoutV4.N">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVoutV4.ScriptPubKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockVoutV4.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockScriptpubkeyV4">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockScriptpubkeyV4.Asm">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockScriptpubkeyV4.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockScriptpubkeyV4.ReqSigs">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockScriptpubkeyV4.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetBlockScriptpubkeyV4.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetChainTipsResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.GetChainTipsResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetChainTipsResult.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetChainTipsResult.Hash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetChainTipsResult.BranchLen">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetChainTipsResult.Status">
            <summary>
            Possible values for status:
            1.  "invalid"                       This branch contains at least one invalid block
            2.  "headers-only"                  Not all blocks for this branch are available, but the headers are valid
            3.  "valid-headers"                 All blocks are available for this branch, but they were never fully validated
            4.  "valid-fork"                    This branch is not part of the active chain, but is fully validated
            5.  "active"  
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetLastBlockInfoResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetLastBlockInfoResult.Hash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetLastBlockInfoResult.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetLastBlockInfoResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetLastBlockInfoResult.TxCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetLastBlockInfoResult.Miner">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetMemPoolInfoResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.GetMemPoolInfoResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.GetMemPoolInfoResult.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="bytes"></param>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetMemPoolInfoResult.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetMemPoolInfoResult.Bytes">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetRawMemPoolResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.GetRawMemPoolResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetRawMemPoolResult.Transactions">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.TransactionId">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.TransactionId.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TransactionId.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TransactionId.Fee">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TransactionId.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TransactionId.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TransactionId.StartingPriority">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TransactionId.CurrentPriority">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TransactionId.Depends">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoResult.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoResult.CreateTxid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoResult.StreamRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoResult.Restrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoResult.Details">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoResult.Creators">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoRestrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoRestrict.Write">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoRestrict.OnChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoRestrict.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetStreamInfoDetails">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutResult.BestBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutResult.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutResult.ScriptPubKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutResult.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutResult.Coinbase">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutResult.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutScriptpubkey">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutScriptpubkey.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutScriptpubkey.Asm">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutScriptpubkey.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutScriptpubkey.ReqSigs">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutScriptpubkey.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutScriptpubkey.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutAsset">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutAsset.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutAsset.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutAsset.IssueTxid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutAsset.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutAsset.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutAsset.Raw">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutAsset.Issue">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutSetInfoResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutSetInfoResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutSetInfoResult.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutSetInfoResult.BestBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutSetInfoResult.Transactions">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutSetInfoResult.TxOuts">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutSetInfoResult.Bytes_Serialized">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutSetInfoResult.Hash_Serialized">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.GetTxOutSetInfoResult.Total_Amount">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.IssueTxid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.Multiple">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.Units">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.Open">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.Restrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.Details">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.IssueqQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.IssueRaw">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.Subscribed">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsResult.Issues">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsRestrict">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsRestrict.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsRestrict.Send">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsRestrict.Receive">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsDetails">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsIssue">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsIssue.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsIssue.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsIssue.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsIssue.Raw">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsIssue.Details">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsIssue.Issuers">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.ListAssetsDetails1">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.Hash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.Miner">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.TxCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.MerkleRoot">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.Nonce">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.Bits">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.Difficulty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.ChainWork">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.PreviousBlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListBlocksResult.NextBlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.ListPermissionsResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.ListPermissionsResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListPermissionsResult.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListPermissionsResult.For">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListPermissionsResult.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListPermissionsResult.StartBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListPermissionsResult.EndBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListPermissionsResult.Admins">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListPermissionsResult.Pending">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamFiltersResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamFiltersResult.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamFiltersResult.CreateTxid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamFiltersResult.FilterRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamFiltersResult.Language">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamFiltersResult.CodeLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamFiltersResult.Creators">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamFiltersResult.Compiled">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamsResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamsResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamsResult.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamsResult.CreateTxid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamsResult.StreamRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamsResult.Open">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamsResult.Details">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamsResult.Creators">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListStreamsResult.Subscribed">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.StreamDetails">
            <summary>
            
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Ledger.Models.Blockchain.StreamDetails.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.StreamDetails.CreatedOn">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.StreamDetails.CreatedAt">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.StreamDetails.PermissionsGranted">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult.CreateTxid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult.FilterRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult.Language">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult.CodeLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult.For">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult.Creators">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult.Compiled">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult.Approved">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult.Admins">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.ListTxFiltersResult.Pending">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.RunStreamFilterResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.RunStreamFilterResult.Compiled">
            <summary>
            Filter passed compilation
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.RunStreamFilterResult.Passed">
            <summary>
            Transaction passed the filter
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.RunStreamFilterResult.CallBacks">
            <summary>
             Information about callback calls by filter
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.RunStreamFilterResult.Reason">
            <summary>
            Reason for rejection, null if passed
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.RunStreamFilterResult.Time">
            <summary>
            Seconds to run transaction through the filter
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.RunTxFilterResult">
            <summary>
            Result:
            {
              "compiled": true|false,           (boolean) Filter passed compilation
              "passed": true|false,             (boolean) Transaction passed the filter
              "callbacks": callbacks,           (array of objects) Information about callback calls by filter
              "reason": "rejection reason",     (boolean) Reason for rejection, null if passed
              "time": x.xxxxxx,                 (numeric) Seconds to run transaction through the filter
            }
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.RunTxFilterResult.Compiled">
            <summary>
            Filter passed compilation
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.RunTxFilterResult.Passed">
            <summary>
            Transaction passed the filter
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.RunTxFilterResult.CallBacks">
            <summary>
             Information about callback calls by filter
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.RunTxFilterResult.Reason">
            <summary>
            Reason for rejection, null if passed
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.RunTxFilterResult.Time">
            <summary>
            Seconds to run transaction through the filter
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.TestStreamFilterResult">
            <summary>
            Result:
            {
              "compiled": true|false,           (boolean) Filter passed compilation
              "passed": true|false,             (boolean) Transaction passed the filter
              "callbacks": callbacks,           (array of objects) Information about callback calls by filter
              "reason": "rejection reason",     (boolean) Reason for rejection, null if passed
              "time": x.xxxxxx,                 (numeric) Seconds to run transaction through the filter
            }
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TestStreamFilterResult.Compiled">
            <summary>
            Filter passed compilation
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TestStreamFilterResult.Passed">
            <summary>
            Transaction passed the filter
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TestStreamFilterResult.CallBacks">
            <summary>
             Information about callback calls by filter
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TestStreamFilterResult.Reason">
            <summary>
            Reason for rejection, null if passed
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TestStreamFilterResult.Time">
            <summary>
            Seconds to run transaction through the filter
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Blockchain.TestTxFilterResult">
            <summary>
            Result:
            {
              "compiled": true|false,           (boolean) Filter passed compilation
              "passed": true|false,             (boolean) Transaction passed the filter
              "callbacks": callbacks,           (array of objects) Information about callback calls by filter
              "reason": "rejection reason",     (boolean) Reason for rejection, null if passed
              "time": x.xxxxxx,                 (numeric) Seconds to run transaction through the filter
            }
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TestTxFilterResult.Compiled">
            <summary>
            Filter passed compilation
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TestTxFilterResult.Passed">
            <summary>
            Transaction passed the filter
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TestTxFilterResult.CallBacks">
            <summary>
             Information about callback calls by filter
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TestTxFilterResult.Reason">
            <summary>
            Reason for rejection, null if passed
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Blockchain.TestTxFilterResult.Time">
            <summary>
            Seconds to run transaction through the filter
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.ChainProtocol">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.ChainDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.RootStreamName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.RootStreamOpen">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.ChainIsTestNet">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.TargetBlockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MaximumBlockSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MaximumChunkSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MaximumChunkCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.DefaultNetworkPort">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.DefaultRpcPort">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AnyoneCanConnect">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AnyoneCanSend">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AnyoneCanReceive">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AnyoneCanReceiveEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AnyoneCanCreate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AnyoneCanIssue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AnyoneCanMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AnyoneCanActivate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AnyoneCanAdmin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.SupportMinerPreCheck">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AllowArbitraryOutputs">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AllowP2shOutputs">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AllowMultiSigOutputs">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.SetupFirstBlocks">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MiningDiversity">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AdminConsensusUpgrade">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AdminConsensusAdmin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AdminConsensusActivate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AdminConsensusMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AdminConsensusCreate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AdminConsensusIssue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.LockAdminMineRounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MiningRequiresPeers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MineEmptyRounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MiningTurnover">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.FirstBlockReward">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.InitialBlockReward">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.RewardHalvingInterval">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.RewardSpendableDelay">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MinimumPerOutput">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MaximumPerOutput">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MinimumOffChainFee">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MinimumRelayFee">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.NativeCurrencyMultiple">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.SkipPowCheck">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.PowMinimumBits">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.TargetAdjustFreq">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AllowMinDifficultyBlocks">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.OnlyAcceptstDtxs">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MaxStdTxSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MaxStdOpReturnsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MaxStdOpReturnSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MaxStdOpDropsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.MaxStdElementSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.ChainName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.ProtocolVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.NetworkMessageStart">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AddressPubkeyHashVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AddressScriptHashVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.PrivateKeyVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.AddressCheckSumValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.GenesisPubKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.GenesisVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.GenesisTimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.GenesisNBits">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.GenesisNonce">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.GenesisPubKeyHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.GenesisHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetBlockchainParamsResult.ChainParamsHash">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult">
            <summary>
            Result:
            {
              "version": xxxxx,                 (numeric) the server version
              "protocolversion": xxxxx,         (numeric) the protocol version
              "chainname": "xxxx",              (string) multichain network name
              "description": "xxxx",            (string) network desctription
              "protocol": "xxxx",               (string) protocol - multichain or bitcoin
              "port": xxxx,                     (numeric) network port
              "setupblocks": "xxxx",            (string) number of network setup blocks
              "walletversion": xxxxx,           (numeric) the wallet version
              "balance": xxxxxxx,               (numeric) the total native currency balance of the wallet
              "walletdbversion": xxxxx,         (numeric) the wallet database version
              "blocks": xxxxxx,                 (numeric) the current number of blocks processed in the server
              "timeoffset": xxxxx,              (numeric) the time offset
              "connections": xxxxx,             (numeric) the number of connections
              "proxy": "host:port",             (string, optional) the proxy used by the server
              "difficulty": xxxxxx,             (numeric) the current difficulty
              "testnet": true|false,            (boolean) if the server is using testnet or not
              "keypoololdest": xxxxxx,          (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool
              "keypoolsize": xxxx,              (numeric) how many new keys are pre-generated
              "unlocked_until": ttt,            (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked
              "paytxfee": x.xxxx,               (numeric) the transaction fee set in btc/kb
              "relayfee": x.xxxx,               (numeric) minimum relay fee for non-free transactions in btc/kb
              "errors": "..."                   (string) any error messages
            }
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.NodeVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.ProtocolVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.ChainName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.Protocol">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.Port">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.SetupBlocks">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.NodeAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.BurnAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.IncomingPaused">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.MiningPaused">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.OffChainPaused">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.WalletVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.Balance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.WalletDbVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.ReIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.Blocks">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.TimeOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.Connections">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.Proxy">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.Difficulty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.TestNet">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.KeyPoolOldest">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.KeyPoolSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.PayTxFee">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.RelayFee">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetInfoResult.Errors">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.Port">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.ReIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.ReScan">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.TxIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.AutoCombineMinConf">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.AutoCombineMinInputs">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.AutoCombineMaxInputs">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.AutoCombineDelay">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.AutoCombineSuspend">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.AutoSubscribe">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.HandShakeLocal">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.BanTx">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.LockBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.HideKnownOpDrops">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.MaxShownData">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.MaxQueryScanItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.V1ApiCompatible">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.MiningRequiresPeers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.MineEmptyRounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.MiningTurnover">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.LockAdminMineRounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.Gen">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Control.GetRuntimeParamsResult.GenProcLimit">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Network.GetAddNodeInfoResult">
            <summary>
            Result:
            [
              {
                "addednode" : "192.168.0.201",          (string) The node ip address
                "connected" : true|false,               (boolean) If connected
                "addresses" : [
                   {
                     "address" : "192.168.0.201:8333",  (string) The MultiChain server host and port
                     "connected" : "outbound"           (string) connection, inbound or outbound
                   }
                   ,...
                 ]
              }
              ,...
            ]
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetAddNodeInfoResult.AddedNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetAddNodeInfoResult.Connected">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetAddNodeInfoResult.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Network.GetAddNodeInfoAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetAddNodeInfoAddress.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetAddNodeInfoAddress.Connected">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoResult.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoResult.SubVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoResult.ProtocolVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoResult.LocalServices">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoResult.TimeOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoResult.Connections">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoResult.Networks">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoResult.RelayFee">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoResult.LocalAddresses">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoNetwork">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoNetwork.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoNetwork.Limited">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoNetwork.Reachable">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoNetwork.Proxy">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoLocaladdress">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoLocaladdress.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoLocaladdress.Port">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Network.GetNetworkInfoLocaladdress.Score">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Raw.DecodeRawTransactionResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.DecodeRawTransactionResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.DecodeRawTransactionResult.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.DecodeRawTransactionResult.LockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.DecodeRawTransactionResult.Vin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.DecodeRawTransactionResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Raw.Vin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Vin.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Vin.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Vin.ScriptSig">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Vin.Sequence">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Raw.Scriptsig">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Scriptsig.Asm">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Scriptsig.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Raw.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Vout.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Vout.N">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Vout.ScriptPubKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Vout.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Raw.Scriptpubkey">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Scriptpubkey.Asm">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Scriptpubkey.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Scriptpubkey.ReqSigs">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Scriptpubkey.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Scriptpubkey.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Raw.Asset">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Asset.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Asset.IssueTxid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Asset.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Asset.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Asset.Raw">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.Asset.Type">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Raw.SignRawTransactionResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.SignRawTransactionResult.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Raw.SignRawTransactionResult.Complete">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Utility.CreateKeyPairsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.CreateKeyPairsResult.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.CreateKeyPairsResult.PubKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.CreateKeyPairsResult.PrivKey">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Utility.CreateMultiSigResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.CreateMultiSigResult.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.CreateMultiSigResult.RedeemScript">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Utility.ValidateAddressResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.ValidateAddressResult.IsValid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.ValidateAddressResult.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.ValidateAddressResult.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.ValidateAddressResult.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.ValidateAddressResult.IsScript">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.ValidateAddressResult.PubKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.ValidateAddressResult.IsCompressed">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.ValidateAddressResult.Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Utility.ValidateAddressResult.Synchronized">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.AppendRawExchangeResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.AppendRawExchangeResult.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.AppendRawExchangeResult.Complete">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeResult.Offer">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeResult.Ask">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeResult.RequiredFee">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeResult.Candisable">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeResult.CanComplete">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeResult.Complete">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeResult.Exchanges">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeOffer">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeOffer.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeOffer.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsset">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsset.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsset.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsset.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsk">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsk.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsk.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeExchange">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeExchange.Offer">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeExchange.Ask">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeOffer1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeOffer1.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeOffer1.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeOffer1.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeOffer1.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeOffer1.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsset1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsset1.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsset1.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsset1.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsk1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsk1.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsk1.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.DecodeRawExchangeAsk1.Address">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressBalancesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressBalancesResult.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressBalancesResult.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressBalancesResult.Raw">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressesResult.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressesResult.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressesResult.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressesResult.IsScript">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressesResult.PubKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressesResult.IsCompressed">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressesResult.Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressesResult.Synchronized">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Balance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.MyAddresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Permissions">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.BlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.BlockIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.BlockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Vin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionResult.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionBalance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionBalance.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionBalance.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem.StreamRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem.Available">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionData">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionData.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionData.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionData.Format">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionData.Size">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVin.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVin.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVin.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVin.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVin.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVin.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVin.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVout.N">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVout.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVout.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVout.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVout.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVout.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionVout.Items">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem1.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem1.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem1.StreamRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem1.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem1.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem1.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem1.Available">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionItem1.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionData1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionData1.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionData1.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionData1.Format">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAddressTransactionData1.Size">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult.Vin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionResult.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVin.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVin.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVin.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVin.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVin.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVin.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVin.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVout.N">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVout.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVout.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVout.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVout.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVout.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetAssetTransactionVout.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.Blockhash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.Blockindex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.Blocktime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemData">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemData.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemData.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetStreamItemData.Size">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetTotalBalancesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTotalBalancesResult.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTotalBalancesResult.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTotalBalancesResult.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionResult.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionResult.Fee">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionResult.WalletConflicts">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionResult.Details">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionResult.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionDetail">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionDetail.Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionDetail.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionDetail.Category">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionDetail.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionDetail.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetTransactionDetail.Fee">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletInfoResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletInfoResult.WalletVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletInfoResult.Balance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletInfoResult.WalletDbVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletInfoResult.TxCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletInfoResult.UtxoCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletInfoResult.KeyPoolOldest">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletInfoResult.KeyPoolSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Balance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.MyAddresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Permissions">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.BlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.BlockIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.BlockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Vin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionResult.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionBalance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionBalance.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionBalance.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVin.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVin.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVin.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVin.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVin.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVin.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVin.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVin.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionAsset">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionAsset.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionAsset.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionAsset.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVout.N">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVout.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVout.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVout.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVout.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVout.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionVout.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionAsset1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionAsset1.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionAsset1.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionAsset1.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.GetWalletTransactionAsset1.Type">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressesResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressesResult.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressesResult.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressesResult.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressesResult.IsScript">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressesResult.PubKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressesResult.IsCompressed">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressesResult.Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressesResult.Synchronized">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Balance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.MyAddresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Permissions">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.BlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.BlockIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.BlockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.To">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Vin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsResult.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsBalance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsBalance.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsBalance.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.For">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.Connect">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.Send">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.Receive">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.Create">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.Issue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.Mine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.Admin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.Activate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.StartBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.EndBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.TimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem.StreamRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem.Available">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsData">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsData.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsData.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsData.Format">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsData.Size">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVin.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVin.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVin.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVin.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVin.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVin.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVin.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVout.N">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVout.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVout.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVout.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVout.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVout.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVout.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsVout.Permissions">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem1.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem1.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem1.StreamRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem1.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem1.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem1.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem1.Available">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsItem1.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsData1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsData1.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsData1.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsData1.Format">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsData1.Size">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.For">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.Connect">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.Send">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.Receive">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.Create">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.Issue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.Mine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.Admin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.Activate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.StartBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.EndBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAddressTransactionsPermission1.TimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.BlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.BlockIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.BlockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.Vin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.Hex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsResult.To">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem.StreamRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem.Available">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVin.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVin.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVin.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVin.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVin.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVin.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVin.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVin.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsAsset">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsAsset.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsAsset.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsAsset.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVout.N">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVout.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVout.Type">
             <summary>
            
             </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVout.IsMine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVout.IsWatchOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVout.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVout.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVout.Permissions">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsVout.Items">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsAsset1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsAsset1.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsAsset1.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsAsset1.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsAsset1.Type">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.For">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.Connect">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.Send">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.Receive">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.Create">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.Issue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.Mine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.Admin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.Activate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.StartBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.EndBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsPermission.TimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem1.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem1.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem1.StreamRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem1.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem1.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem1.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem1.Available">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListAssetTransactionsItem1.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.BlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.BlockIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.BlockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamItemsResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.Available">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.BlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.BlockIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.BlockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeyItemsResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeysResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeysResult.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeysResult.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamKeysResult.Confirmed">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.Available">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.BlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.BlockIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.BlockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublisherItemsResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersResult.Publisher">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersResult.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersResult.Confirmed">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersResult.First">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersResult.Last">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.Available">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.BlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.BlockIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.BlockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersFirst.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.Publishers">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.Available">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.BlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.BlockIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.BlockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListStreamPublishersLast.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.Balance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.MyAddresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.Permissions">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.BlockHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.BlockIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.BlockTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsResult.Issue">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.Balance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Balance.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Balance.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.Asset">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Asset.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Asset.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Asset.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.Issue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Issue.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Issue.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Issue.Multiple">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Issue.Units">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Issue.Open">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Issue.Restrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Issue.Details">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Issue.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Issue.Raw">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Issue.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsRestrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsRestrict.Send">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsRestrict.Receive">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.Details">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Details.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Details.Quantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Details.Units">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Details.Open">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Details.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Details.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.Details.Expectation">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.Expectation">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.For">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.Connect">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.Send">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.Receive">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.Create">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.Issue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.Mine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.Admin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.Activate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.StartBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.EndBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.TimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListTransactionsPermission.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult.Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult.ScriptPubKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult.CanSend">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult.Spendable">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentResult.Permissions">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentAsset">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentAsset.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentAsset.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListUnspentAsset.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Balance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.MyAddresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Permissions">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Issue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Confirmations">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Time">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.TimeReceived">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.To">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsResult.Create">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsBalance">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsBalance.Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsBalance.Assets">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsAsset">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsAsset.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsAsset.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsAsset.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsIssue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsIssue.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsIssue.AssetRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsIssue.Multiple">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsIssue.Units">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsIssue.Open">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsIssue.Restrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsIssue.Details">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsIssue.Qty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsIssue.Raw">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsIssue.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsRestrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsRestrict.Send">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsRestrict.Receive">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsDetails">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsCreate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsCreate.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsCreate.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsCreate.StreamRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsCreate.Restrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsCreate.Details">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsRestrict1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsRestrict1.Write">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsRestrict1.OnChain">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsRestrict1.OffChain">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsDetails1">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.For">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.Connect">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.Send">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.Receive">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.Create">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.Issue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.Mine">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.Admin">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.Activate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.StartBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.EndBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.TimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.ListWalletTransactionsPermission.Addresses">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.PrepareLockUnspentFromResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.PrepareLockUnspentFromResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.PrepareLockUnspentFromResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Ledger.Models.Wallet.PrepareLockUnspentResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.PrepareLockUnspentResult.Txid">
            <summary>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Ledger.Models.Wallet.PrepareLockUnspentResult.Vout">
            <summary>
            
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Options.BlockchainRpcOptions">
            <summary>
            BlockchainRpcOptions values are mostly required for proper blockchain interaction to occur
            via the MCWrapper.RPC client.
            <para>
                The MCWrapper RPC client requires the following BlockchainProfileOptions be assigned a valid value
                    ChainUseSsl;
                    ChainSslPath 
                        (ChainSslPath only required to be assigned a file path value if ChainUseSsl is true, 
                         otherwise ChainSslPath can be empty string "");
                    ChainUsername;
                    ChainPassword;
                    ChainName;
                    ChainRpcPort;
                    ChainAdminAddress;
                    ChainHostname;
            </para>
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Options.BlockchainRpcOptions.#ctor">
            <summary>
            Create a new BlockchainRpcOptions object
            No arguments
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.BlockchainRpcOptions.ChainName">
            <summary>
            Multichain blockchain name as declared in the params.dat file;
            
            <para>
                ChainName value is required for the RPC client to 
                function as expected when using methods that infer
                the blockchain name value;
            </para>
            
            <para>
                When using methods that support using the blockchain
                name explicitly with the RPC client,the 
                ChainName value is not necessary or required.
            </para>
            
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.BlockchainRpcOptions.ChainRpcPort">
            <summary>
            RPC port number as declared in the params.dat file or as override value in multichain.conf
            <para>
                ChainRpcPort number is required for the RPC client to function as expected;
            </para>
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.BlockchainRpcOptions.ChainAdminAddress">
            <summary>
            Your blockchain node administror's public key. In v2 we are only supporting a 
            single node administrator per application instance.
            <para>
                ChainAdminAddress is required for the RPC client to function as expected;
            </para>
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.BlockchainRpcOptions.ChainHostname">
            <summary>
            IPv4 or FQDN of where the MultiChain network is hosted and/or accessible
            <para>
                ChainHostname is required for the RPC client to function as expected;
            </para>
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.BlockchainRpcOptions.ChainBurnAddress">
            <summary>
            Blockchain address used for 'burning' Assets/Streams. 
            This is not a required property, however, it is nice to have the value available
            at the code level in case assets/streams do need to be burned.
            <para>
                ChainBurnAddress is not required for the RPC client to function as expected;
            </para>
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.BlockchainRpcOptions.ChainUsername">
            <summary>
            RPCJSON username for target blockchain
             <para>
                ChainUsername is required for the RPC client to function as expected;
            </para>
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.BlockchainRpcOptions.ChainPassword">
            <summary>
            RPCJSON password for target blockchain
            <para>
                ChainPassword is required for the RPC client to function as expected;
            </para>
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.BlockchainRpcOptions.ChainUseSsl">
            <summary>
            SSL Flag
            <para>
                ChainUseSsl is not required for the RPC client to function as expected;
                However, if you wish to transact with the node using HTTPS this value must
                be and equal true
            </para>
            <para>
                Please note: If the ChainUseSsl value is true, the ChainSslPath value
                MUST be populated and accurate. When starting an HTTPS blockahin ensure
                you pass the -rpcssl flag and properly configure your multichain.conf file
                properly to support HTTPS connection.
            </para>
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.BlockchainRpcOptions.ChainSslPath">
            <summary>
            Local or remote file path to a copy of the same SSL certificate that is securing
            the current node the application is interacting with.
            <para>
                ChainSslPath is not required for the RPC client to function as expected;
            </para>
            <para>
                Please note: If the ChainUseSsl value is true, the ChainSslPath value
                MUST be populated and accurate. When starting an HTTPS blockahin ensure
                you pass the -rpcssl flag and properly configure your multichain.conf file
                properly to support HTTPS connections.
            </para>
            </summary>
        </member>
        <member name="T:MCWrapper.RPC.Options.RuntimeParamOptions">
            <summary>
            RuntimeParamOption values can be used to initiate a blockchain on startup
            MCWrapper doesn't provide the logic for doing so at this time, users wishing
            to initialize their runtime params via the RuntimeParamOptions pipeline will
            be required to do so via the MCWrapper.RPC client methods associated
            with this task (i.e. setruntimeparam blockchain method via either client)
            
            <para>
                MCWrapper.RPC does not client require RuntimeParamOptions to function normally.
                RuntimeParamOptions are purely optional at this time.
            </para>
            </summary>
        </member>
        <member name="M:MCWrapper.RPC.Options.RuntimeParamOptions.#ctor">
            <summary>
            Create a new RuntimeParamOptions object
            No arguments
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.RuntimeParamOptions.BanTx">
            <summary>
            A comma-delimited list of txids for transactions that should not be accepted by the node. 
            Any new incoming block containing one of these transactions will also be considered invalid, 
            but previously accepted and verified blocks will not be affected.
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.RuntimeParamOptions.LockBlock">
            <summary>
            Blocks on branches without this block (passed as a block hash) will be rejected. 
            This allows a particular branch of a chain to be manually selected.
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.RuntimeParamOptions.MaxShownData">
            <summary>
            The maximum number of bytes to show in the data field of API responses. 
            Pieces of data larger than this will be returned as an object with txid, vout and size fields, 
            for use with the gettxoutdata command.
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.RuntimeParamOptions.AutoSubscribe">
            <summary>
            Set this parameter to assets, streams or assets,streams to automatically subscribe to every 
            new asset and/or stream created on the blockchain, without requiring use of the subscribe command.
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.RuntimeParamOptions.HandshakeLocal">
            <summary>
            Manually override the wallet address which is used for handshaking with other peers in a MultiChain 
            blockchain. This is helpful if the address previously used for handshaking has lost connect 
            permissions, and the node does not yet know which of its other addresses to use, 
            because it has been disconnected from the chain.
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.RuntimeParamOptions.HideKnownOpDrops">
            <summary>
            Remove recognized MultiChain OP_DROP metadata from the responses to calls like decoderawtransaction,
            decodescript, getrawtransaction, gettxout and listunspent which show the content of transaction 
            output scripts, whether in raw hexadecimal or decoded form. This option is provided to help with 
            backwards compatibility for tools built on Bitcoin Core, which get confused by this metadata.
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.RuntimeParamOptions.MaxQueryScanItems">
            <summary>
            The maximum number of transactions to decode for a querying request (currently liststreamqueryitems).
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.RuntimeParamOptions.MiningTurnOver">
            <summary>
            These override the recommendations provided by the lock-admin-mine-rounds, 
            mining-requires-peers, mine-empty-rounds and mining-turnover blockchain parameters, 
            and should be used with caution. https://www.multichain.com/developers/blockchain-parameters/
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.RuntimeParamOptions.MineEmptyRounds">
            <summary>
            Each node independently decides, based on its mineemptyrounds runtime parameter, whether it is valid to keep buliding blocks on the chain or not
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.RuntimeParamOptions.LockAdminMineRounds">
            <summary>
            Ignore forks that reverse changes in admin or mine permissions after this many (integer) rounds have passed
            </summary>
        </member>
        <member name="P:MCWrapper.RPC.Options.RuntimeParamOptions.MiningRequiresPeers">
            <summary>
            Indicates whether peers must be connected to the blockchain network in order for block mining to occur
            </summary>
        </member>
    </members>
</doc>
